{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "415ec247-e029-4db8-a5f0-e718f825fe6c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e9027940-fcbe-414b-913a-eb8635ec6c9c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import streamlit as st\n",
    "import plotly.graph_objects as go\n",
    "import matplotlib.pyplot as plt\n",
    "from statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n",
    "from statsmodels.tsa.holtwinters import ExponentialSmoothing\n",
    "from sklearn.metrics import mean_squared_error, mean_absolute_error\n",
    "from statsmodels.tsa.arima.model import ARIMA\n",
    "import pmdarima as pm\n",
    "import plotly.express as px\n",
    "from prophet import Prophet\n",
    "from prophet.plot import plot_plotly, plot_components_plotly\n",
    "import statsmodels.api as sm\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "#st.set_option('deprecation.showPyplotGlobalUse', False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "bb5c40c5-0125-4006-bb37-de468e9d8fb9",
   "metadata": {},
   "outputs": [],
   "source": [
    "transaction_01 = pd.read_csv('Pictures/Sooth_sayer/Transactional_data_retail_01.csv',low_memory=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b8df3bae-61d5-4493-a3b8-04030cf411fe",
   "metadata": {},
   "outputs": [],
   "source": [
    "transaction_01['InvoiceDate'] = pd.to_datetime(transaction_01['InvoiceDate'], format='%d %B %Y')\n",
    "\n",
    "# Format the parsed dates to 'dd-mm-yyyy'\n",
    "transaction_01['InvoiceDate'] = transaction_01['InvoiceDate'].dt.strftime('%d-%m-%Y')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "cef748e1-9699-418c-9ab6-f9637b3a8637",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 525461 entries, 0 to 525460\n",
      "Data columns (total 6 columns):\n",
      " #   Column       Non-Null Count   Dtype  \n",
      "---  ------       --------------   -----  \n",
      " 0   Invoice      525461 non-null  object \n",
      " 1   StockCode    525461 non-null  object \n",
      " 2   Quantity     525461 non-null  int64  \n",
      " 3   Price        525461 non-null  float64\n",
      " 4   Customer ID  417534 non-null  float64\n",
      " 5   InvoiceDate  525461 non-null  object \n",
      "dtypes: float64(2), int64(1), object(3)\n",
      "memory usage: 24.1+ MB\n"
     ]
    }
   ],
   "source": [
    "transaction_01.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "dd98c523-e3d9-4ddf-b6ae-c73500adab59",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 541910 entries, 0 to 541909\n",
      "Data columns (total 6 columns):\n",
      " #   Column       Non-Null Count   Dtype  \n",
      "---  ------       --------------   -----  \n",
      " 0   Invoice      541910 non-null  object \n",
      " 1   StockCode    541910 non-null  object \n",
      " 2   Quantity     541910 non-null  int64  \n",
      " 3   Price        541910 non-null  float64\n",
      " 4   Customer ID  406830 non-null  float64\n",
      " 5   InvoiceDate  541910 non-null  object \n",
      "dtypes: float64(2), int64(1), object(3)\n",
      "memory usage: 24.8+ MB\n"
     ]
    }
   ],
   "source": [
    "\n",
    "transaction_02  = pd.read_csv('Pictures/Sooth_sayer/Transactional_data_retail_02.csv',low_memory=False)\n",
    "transaction_02.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e8ab6ac8-a4df-4393-9ec7-9933198ebcdc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1067371 entries, 0 to 1067370\n",
      "Data columns (total 6 columns):\n",
      " #   Column       Non-Null Count    Dtype  \n",
      "---  ------       --------------    -----  \n",
      " 0   Invoice      1067371 non-null  object \n",
      " 1   StockCode    1067371 non-null  object \n",
      " 2   Quantity     1067371 non-null  int64  \n",
      " 3   Price        1067371 non-null  float64\n",
      " 4   Customer ID  824364 non-null   float64\n",
      " 5   InvoiceDate  1067371 non-null  object \n",
      "dtypes: float64(2), int64(1), object(3)\n",
      "memory usage: 48.9+ MB\n"
     ]
    }
   ],
   "source": [
    "transactions = pd.concat([transaction_01, transaction_02], ignore_index=True)\n",
    "transactions.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2a472645-8dd8-446b-a201-73832fc90647",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "34339"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "transactions.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b858a48d-771a-4ba8-a39c-e432078db5ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Invoice             0\n",
       "StockCode           0\n",
       "Quantity            0\n",
       "Price               0\n",
       "Customer ID    235151\n",
       "InvoiceDate         0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "transactions.drop_duplicates(inplace=True)\n",
    "transactions.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "99398b25-6580-494e-adca-bf804303d8c2",
   "metadata": {},
   "outputs": [],
   "source": [
    "transactions['Customer ID'] = transactions['Customer ID'].fillna('Guest')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "50b659dd-5104-4e6b-8d65-3eb7fadae1b8",
   "metadata": {},
   "outputs": [],
   "source": [
    "transactions['Customer ID'] = transactions['Customer ID'].astype(str)\n",
    "transactions['Customer ID'] = transactions['Customer ID'].str.replace(r'\\.0$', '', regex=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "aae956a3-a01e-407f-bcae-8a1e152c3f32",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5943"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "transactions['Customer ID'].nunique()\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f33a7b2f-9e64-4a26-af5a-ff24ce56cf07",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "80995"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "transactions['Quantity'].max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "468a1a6a-303e-4938-b896-df7ed4b8e9d2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "53628"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "transactions['Invoice'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "61ffdfb1-6519-4cbe-acf7-7d8a1842ad67",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Quantity</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1033032.00</td>\n",
       "      <td>1033032.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>10.08</td>\n",
       "      <td>4.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>175.20</td>\n",
       "      <td>122.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-80995.00</td>\n",
       "      <td>-53594.36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.00</td>\n",
       "      <td>1.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>3.00</td>\n",
       "      <td>2.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>10.00</td>\n",
       "      <td>4.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>80995.00</td>\n",
       "      <td>38970.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Quantity       Price\n",
       "count  1033032.00  1033032.00\n",
       "mean        10.08        4.61\n",
       "std        175.20      122.40\n",
       "min     -80995.00   -53594.36\n",
       "25%          1.00        1.25\n",
       "50%          3.00        2.10\n",
       "75%         10.00        4.15\n",
       "max      80995.00    38970.00"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "transactions.describe().round(2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c5fd081f-d328-49aa-9a96-5da70d488f00",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 1033032 entries, 0 to 1067370\n",
      "Data columns (total 6 columns):\n",
      " #   Column       Non-Null Count    Dtype  \n",
      "---  ------       --------------    -----  \n",
      " 0   Invoice      1033032 non-null  object \n",
      " 1   StockCode    1033032 non-null  object \n",
      " 2   Quantity     1033032 non-null  int64  \n",
      " 3   Price        1033032 non-null  float64\n",
      " 4   Customer ID  1033032 non-null  object \n",
      " 5   InvoiceDate  1033032 non-null  object \n",
      "dtypes: float64(1), int64(1), object(4)\n",
      "memory usage: 55.2+ MB\n"
     ]
    }
   ],
   "source": [
    "transactions.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "85377bc0-d9fa-4669-97a3-79b0bee73133",
   "metadata": {},
   "outputs": [],
   "source": [
    "transactions['InvoiceDate'] = pd.to_datetime(transactions['InvoiceDate'], format='%d-%m-%Y', errors='coerce')   # format='%d %B %Y')\n",
    "transactions['Time'] = transactions['InvoiceDate'].dt.strftime('%H:%M')\n",
    "transactions['Year'] = transactions['InvoiceDate'].dt.year\n",
    "transactions['Month'] = transactions['InvoiceDate'].dt.month\n",
    "transactions['Week'] = transactions['InvoiceDate'].dt.isocalendar().week"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "c55eaeae-21d1-4a06-ba1f-49e66626f937",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 1033032 entries, 0 to 1067370\n",
      "Data columns (total 10 columns):\n",
      " #   Column       Non-Null Count    Dtype         \n",
      "---  ------       --------------    -----         \n",
      " 0   Invoice      1033032 non-null  object        \n",
      " 1   StockCode    1033032 non-null  object        \n",
      " 2   Quantity     1033032 non-null  int64         \n",
      " 3   Price        1033032 non-null  float64       \n",
      " 4   Customer ID  1033032 non-null  object        \n",
      " 5   InvoiceDate  1033032 non-null  datetime64[ns]\n",
      " 6   Time         1033032 non-null  object        \n",
      " 7   Year         1033032 non-null  int32         \n",
      " 8   Month        1033032 non-null  int32         \n",
      " 9   Week         1033032 non-null  UInt32        \n",
      "dtypes: UInt32(1), datetime64[ns](1), float64(1), int32(2), int64(1), object(4)\n",
      "memory usage: 75.9+ MB\n"
     ]
    }
   ],
   "source": [
    "transactions.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "0339d8ea-9798-4d69-8abd-083fcc201501",
   "metadata": {},
   "outputs": [],
   "source": [
    "customer_data = pd.read_csv('Pictures/Sooth_sayer/CustomerDemographics.csv')\n",
    "#customer_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "075faef1-8d3f-4b97-bf76-e0230a3b1267",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "49"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "customer_data['Customer ID'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "c843f040-8c4d-48ec-a81d-12b2c54cbfc4",
   "metadata": {},
   "outputs": [],
   "source": [
    "customer_data['Customer ID'] = customer_data['Customer ID'].astype(str)\n",
    "customer_data['Customer ID'] = transactions['Customer ID'].str.replace(r'\\.0$', '', regex=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "c5fe0e08-a8c2-47e3-89e1-530e92835e68",
   "metadata": {},
   "outputs": [],
   "source": [
    "product_info = pd.read_csv('Pictures/Sooth_sayer/ProductInfo.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "42200132-64f1-4c55-b536-3c7ef511f765",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 8818 entries, 0 to 8817\n",
      "Data columns (total 2 columns):\n",
      " #   Column       Non-Null Count  Dtype \n",
      "---  ------       --------------  ----- \n",
      " 0   StockCode    8818 non-null   object\n",
      " 1   Description  6367 non-null   object\n",
      "dtypes: object(2)\n",
      "memory usage: 137.9+ KB\n"
     ]
    }
   ],
   "source": [
    "product_info.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "ea5c9005-6bf7-4bd2-adee-07fc550d2d45",
   "metadata": {},
   "outputs": [],
   "source": [
    "product_info['Description'] = product_info['Description'].fillna('No Description')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d9dae19d-a91f-4fdb-9b33-d48a27f1e99e",
   "metadata": {},
   "source": [
    "# Performing customer, item, and transaction-level summary statistics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "dc67c011-a20f-4f65-8a25-671909b405e8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Customer Summary Statistics:\n",
      "          Country  Unique Customers  Total Customers\n",
      "0       Australia                 2                2\n",
      "1         Belgium                 1                1\n",
      "2          France                 2                2\n",
      "3     Netherlands                 1                1\n",
      "4             USA                 1                1\n",
      "5  United Kingdom                 3               42\n"
     ]
    }
   ],
   "source": [
    "# customer_summary\n",
    "customer_summary = customer_data.groupby('Country')['Customer ID'].nunique().reset_index()\n",
    "customer_summary.columns = ['Country', 'Unique Customers']\n",
    "customer_summary['Total Customers'] = customer_data.groupby('Country')['Customer ID'].count().values\n",
    "print(\"Customer Summary Statistics:\")\n",
    "print(customer_summary)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "e9fa248b-a663-4e77-89ab-c989a07a4350",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Items Summary Statistics:\n",
      "       StockCode     Description\n",
      "count       8818            8818\n",
      "unique      5152            5698\n",
      "top        20713  No Description\n",
      "freq           9            2451\n"
     ]
    }
   ],
   "source": [
    "# item_summary\n",
    "item_stats = product_info[['StockCode','Description']].describe(include = 'all')\n",
    "print(\"Items Summary Statistics:\")\n",
    "print(item_stats)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "630bd504-10d6-440d-9377-0d8dd0e8d91b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overall Transaction Statistics:\n",
      "        Invoice StockCode      Quantity         Price Customer ID  \\\n",
      "count   1010531   1010531  1.010531e+06  1.010531e+06     1010531   \n",
      "unique    41939      4985           NaN           NaN        5882   \n",
      "top      573585    85123A           NaN           NaN       Guest   \n",
      "freq       1114      5517           NaN           NaN      231040   \n",
      "mean        NaN       NaN  1.133622e+01  4.064053e+00         NaN   \n",
      "min         NaN       NaN  1.000000e+00  0.000000e+00         NaN   \n",
      "25%         NaN       NaN  1.000000e+00  1.250000e+00         NaN   \n",
      "50%         NaN       NaN  4.000000e+00  2.100000e+00         NaN   \n",
      "75%         NaN       NaN  1.200000e+01  4.130000e+00         NaN   \n",
      "max         NaN       NaN  8.099500e+04  2.511109e+04         NaN   \n",
      "std         NaN       NaN  1.314654e+02  5.036685e+01         NaN   \n",
      "\n",
      "                          InvoiceDate  \n",
      "count                         1010531  \n",
      "unique                            NaN  \n",
      "top                               NaN  \n",
      "freq                              NaN  \n",
      "mean    2023-01-03 17:34:49.029628672  \n",
      "min               2021-12-01 00:00:00  \n",
      "25%               2022-07-06 00:00:00  \n",
      "50%               2022-12-09 00:00:00  \n",
      "75%               2023-07-28 00:00:00  \n",
      "max               2023-12-09 00:00:00  \n",
      "std                               NaN  \n",
      "\n",
      "Transaction Summary Statistics by Invoice:\n",
      "       Invoice  Number of Items  Total Quantity Sold\n",
      "0       489434                8                  166\n",
      "1       489435                4                   60\n",
      "2       489436               19                  193\n",
      "3       489437               23                  145\n",
      "4       489438               17                  826\n",
      "...        ...              ...                  ...\n",
      "41934   581585               21                  278\n",
      "41935   581586                4                   66\n",
      "41936   581587               16                  106\n",
      "41937  A563185                1                    1\n",
      "41938  C496350                1                    1\n",
      "\n",
      "[41939 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "# transaction_summary\n",
    "transactions=transactions[(transactions['Price'] >= 0) & (transactions['Quantity'] >= 0)]\n",
    "transaction_stats = transactions[['Invoice', 'StockCode', 'Quantity', 'Price', 'Customer ID', 'InvoiceDate']].describe(include='all')\n",
    "\n",
    "# Group by Invoice to count transactions per invoice\n",
    "invoice_counts = transactions.groupby('Invoice')['StockCode'].count().reset_index()\n",
    "invoice_counts.columns = ['Invoice', 'Number of Items']\n",
    "\n",
    "# Calculate total quantity sold per invoice\n",
    "total_quantity_per_invoice = transactions.groupby('Invoice')['Quantity'].sum().reset_index()\n",
    "total_quantity_per_invoice.columns = ['Invoice', 'Total Quantity Sold']\n",
    "\n",
    "# Merge invoice statistics\n",
    "transaction_summary = invoice_counts.merge(total_quantity_per_invoice, on='Invoice')\n",
    "\n",
    "# Display overall transaction statistics and the transaction summary\n",
    "print(\"Overall Transaction Statistics:\")\n",
    "print(transaction_stats)\n",
    "\n",
    "print(\"\\nTransaction Summary Statistics by Invoice:\")\n",
    "print(transaction_summary)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e9427b2-1fb2-40c4-9340-7e47b136aa80",
   "metadata": {},
   "source": [
    "# b. Utilize SQL join queries to retrieve necessary data (e.g., customer and product information) without explicit data merging"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "ae9e12f6-6172-486b-ab9e-61112ecc3cd9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1010531"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import sqlite3\n",
    "conn = sqlite3.connect('retail_data.db')\n",
    "customer_data.to_sql('customer_data', conn, if_exists='replace', index=False)\n",
    "product_info.to_sql('product_info', conn, if_exists='replace', index=False)\n",
    "transactions.to_sql('transactions', conn, if_exists='replace', index=False)\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "8f20a2a9-b4e5-4fed-94c8-723dc2aa1be9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "customer_summary summary:\n",
      "  Customer ID         Country StockCode  Total_Spend  Number_of_Transactions\n",
      "0       13078  United Kingdom    48173C     52274.49                      57\n",
      "1       13078       Australia    48173C      3074.97                      57\n",
      "2       13078          France    48173C      3074.97                      57\n",
      "3       13085  United Kingdom     85048      2692.17                       8\n",
      "4       15362  United Kingdom     22143      2311.68                       2\n",
      "5       13085         Belgium     85048       299.13                       8\n",
      "6       13085          France     85048       299.13                       8\n",
      "7       13085             USA     85048       299.13                       8\n",
      "8       15362       Australia     22143       144.48                       2\n",
      "9       15362     Netherlands     22143       144.48                       2\n"
     ]
    }
   ],
   "source": [
    "customer_summary_query = \"\"\"\n",
    "SELECT\n",
    "t.\"Customer ID\",\n",
    "c.\"Country\",\n",
    "t.\"StockCode\",\n",
    "SUM(t.\"Price\") AS Total_Spend,\n",
    "COUNT(DISTINCT t.\"Invoice\") AS Number_of_Transactions\n",
    "FROM\n",
    "transactions t\n",
    "JOIN\n",
    "customer_data c\n",
    "ON\n",
    "t.\"Customer ID\" = c.\"Customer ID\"\n",
    "GROUP BY\n",
    "t.\"Customer ID\", c.\"Country\"\n",
    "ORDER BY\n",
    "Total_Spend DESC;\n",
    "\"\"\"\n",
    "customer_summary = pd.read_sql_query(customer_summary_query, conn)\n",
    "print(\"customer_summary summary:\")\n",
    "print(customer_summary)\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "886f1704-5bf9-43ab-8477-e4ee922c82a1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "product_summary summary:\n",
      "         StockCode               Description  Total_Sales  \\\n",
      "0                M                    Manual    333966.61   \n",
      "1              DOT            DOTCOM POSTAGE    309854.11   \n",
      "2              DOT            No Description    309854.11   \n",
      "3            22423            No Description     56052.15   \n",
      "4            22423  REGENCY CAKESTAND 3 TIER     56052.15   \n",
      "...            ...                       ...          ...   \n",
      "8485        85184A            No Description         0.00   \n",
      "8486        85231D            No Description         0.00   \n",
      "8487        90121A            No Description         0.00   \n",
      "8488  gift_0001_60            No Description         0.00   \n",
      "8489  gift_0001_90            No Description         0.00   \n",
      "\n",
      "      Total_Quantity_Sold  Number_of_Transactions  \n",
      "0                    9637                     791  \n",
      "1                    2920                    1422  \n",
      "2                    2920                    1422  \n",
      "3                   26495                    3920  \n",
      "4                   26495                    3920  \n",
      "...                   ...                     ...  \n",
      "8485                    1                       1  \n",
      "8486                    5                       1  \n",
      "8487                    1                       1  \n",
      "8488                   13                       2  \n",
      "8489                   12                       2  \n",
      "\n",
      "[8490 rows x 5 columns]\n"
     ]
    }
   ],
   "source": [
    "product_summary_query = \"\"\"\n",
    "SELECT\n",
    "t.\"StockCode\",\n",
    "p.\"Description\",\n",
    "SUM(t.\"Price\") AS Total_Sales,\n",
    "SUM(t.\"Quantity\") AS Total_Quantity_Sold,\n",
    "COUNT(DISTINCT t.\"Invoice\") AS Number_of_Transactions\n",
    "FROM\n",
    "transactions t\n",
    "JOIN\n",
    "product_info p\n",
    "ON\n",
    "t.\"StockCode\" = p.\"StockCode\"\n",
    "GROUP BY\n",
    "t.\"StockCode\", p.\"Description\"\n",
    "ORDER BY\n",
    "Total_Sales DESC;\n",
    "\"\"\"\n",
    " \n",
    "# Run the query and load the result into a pandas DataFrame\n",
    "product_summary = pd.read_sql_query(product_summary_query, conn)\n",
    " \n",
    "print(\"product_summary summary:\")\n",
    "print(product_summary)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "74428477-8ad1-4c48-883a-3f9920db0989",
   "metadata": {},
   "source": [
    "# c. Consolidate transactional data where necessary to ensure accurate summary metrics for each level (customer, item, transaction)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "b2b80464-4b97-4ce5-80f0-0fa1e32c4931",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Invoice</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>Price</th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>Time</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>Week</th>\n",
       "      <th>Country</th>\n",
       "      <th>Description</th>\n",
       "      <th>TotalPrice</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>489434</td>\n",
       "      <td>85048</td>\n",
       "      <td>12</td>\n",
       "      <td>6.95</td>\n",
       "      <td>13085</td>\n",
       "      <td>2021-12-01</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2021</td>\n",
       "      <td>12</td>\n",
       "      <td>48</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>15CM CHRISTMAS GLASS BALL 20 LIGHTS</td>\n",
       "      <td>83.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>489434</td>\n",
       "      <td>85048</td>\n",
       "      <td>12</td>\n",
       "      <td>6.95</td>\n",
       "      <td>13085</td>\n",
       "      <td>2021-12-01</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2021</td>\n",
       "      <td>12</td>\n",
       "      <td>48</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>15CM CHRISTMAS GLASS BALL 20 LIGHTS</td>\n",
       "      <td>83.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>489434</td>\n",
       "      <td>85048</td>\n",
       "      <td>12</td>\n",
       "      <td>6.95</td>\n",
       "      <td>13085</td>\n",
       "      <td>2021-12-01</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2021</td>\n",
       "      <td>12</td>\n",
       "      <td>48</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>15CM CHRISTMAS GLASS BALL 20 LIGHTS</td>\n",
       "      <td>83.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>489434</td>\n",
       "      <td>85048</td>\n",
       "      <td>12</td>\n",
       "      <td>6.95</td>\n",
       "      <td>13085</td>\n",
       "      <td>2021-12-01</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2021</td>\n",
       "      <td>12</td>\n",
       "      <td>48</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>15CM CHRISTMAS GLASS BALL 20 LIGHTS</td>\n",
       "      <td>83.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>489434</td>\n",
       "      <td>85048</td>\n",
       "      <td>12</td>\n",
       "      <td>6.95</td>\n",
       "      <td>13085</td>\n",
       "      <td>2021-12-01</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2021</td>\n",
       "      <td>12</td>\n",
       "      <td>48</td>\n",
       "      <td>France</td>\n",
       "      <td>15CM CHRISTMAS GLASS BALL 20 LIGHTS</td>\n",
       "      <td>83.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2032807</th>\n",
       "      <td>581587</td>\n",
       "      <td>22138</td>\n",
       "      <td>3</td>\n",
       "      <td>4.95</td>\n",
       "      <td>12680</td>\n",
       "      <td>2023-12-09</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2023</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "      <td>NaN</td>\n",
       "      <td>mouldy</td>\n",
       "      <td>14.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2032808</th>\n",
       "      <td>581587</td>\n",
       "      <td>22138</td>\n",
       "      <td>3</td>\n",
       "      <td>4.95</td>\n",
       "      <td>12680</td>\n",
       "      <td>2023-12-09</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2023</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "      <td>NaN</td>\n",
       "      <td>damages</td>\n",
       "      <td>14.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2032809</th>\n",
       "      <td>581587</td>\n",
       "      <td>22138</td>\n",
       "      <td>3</td>\n",
       "      <td>4.95</td>\n",
       "      <td>12680</td>\n",
       "      <td>2023-12-09</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2023</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "      <td>NaN</td>\n",
       "      <td>No Description</td>\n",
       "      <td>14.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2032810</th>\n",
       "      <td>581587</td>\n",
       "      <td>POST</td>\n",
       "      <td>1</td>\n",
       "      <td>18.00</td>\n",
       "      <td>12680</td>\n",
       "      <td>2023-12-09</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2023</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "      <td>NaN</td>\n",
       "      <td>POSTAGE</td>\n",
       "      <td>18.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2032811</th>\n",
       "      <td>581587</td>\n",
       "      <td>POST</td>\n",
       "      <td>1</td>\n",
       "      <td>18.00</td>\n",
       "      <td>12680</td>\n",
       "      <td>2023-12-09</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2023</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "      <td>NaN</td>\n",
       "      <td>No Description</td>\n",
       "      <td>18.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2032812 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Invoice StockCode  Quantity  Price Customer ID InvoiceDate   Time  \\\n",
       "0        489434     85048        12   6.95       13085  2021-12-01  00:00   \n",
       "1        489434     85048        12   6.95       13085  2021-12-01  00:00   \n",
       "2        489434     85048        12   6.95       13085  2021-12-01  00:00   \n",
       "3        489434     85048        12   6.95       13085  2021-12-01  00:00   \n",
       "4        489434     85048        12   6.95       13085  2021-12-01  00:00   \n",
       "...         ...       ...       ...    ...         ...         ...    ...   \n",
       "2032807  581587     22138         3   4.95       12680  2023-12-09  00:00   \n",
       "2032808  581587     22138         3   4.95       12680  2023-12-09  00:00   \n",
       "2032809  581587     22138         3   4.95       12680  2023-12-09  00:00   \n",
       "2032810  581587      POST         1  18.00       12680  2023-12-09  00:00   \n",
       "2032811  581587      POST         1  18.00       12680  2023-12-09  00:00   \n",
       "\n",
       "         Year  Month  Week         Country  \\\n",
       "0        2021     12    48  United Kingdom   \n",
       "1        2021     12    48  United Kingdom   \n",
       "2        2021     12    48  United Kingdom   \n",
       "3        2021     12    48  United Kingdom   \n",
       "4        2021     12    48          France   \n",
       "...       ...    ...   ...             ...   \n",
       "2032807  2023     12    49             NaN   \n",
       "2032808  2023     12    49             NaN   \n",
       "2032809  2023     12    49             NaN   \n",
       "2032810  2023     12    49             NaN   \n",
       "2032811  2023     12    49             NaN   \n",
       "\n",
       "                                 Description  TotalPrice  \n",
       "0        15CM CHRISTMAS GLASS BALL 20 LIGHTS       83.40  \n",
       "1        15CM CHRISTMAS GLASS BALL 20 LIGHTS       83.40  \n",
       "2        15CM CHRISTMAS GLASS BALL 20 LIGHTS       83.40  \n",
       "3        15CM CHRISTMAS GLASS BALL 20 LIGHTS       83.40  \n",
       "4        15CM CHRISTMAS GLASS BALL 20 LIGHTS       83.40  \n",
       "...                                      ...         ...  \n",
       "2032807                               mouldy       14.85  \n",
       "2032808                              damages       14.85  \n",
       "2032809                       No Description       14.85  \n",
       "2032810                              POSTAGE       18.00  \n",
       "2032811                       No Description       18.00  \n",
       "\n",
       "[2032812 rows x 13 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "transactional_data = transactions.merge(customer_data, on='Customer ID', how='left')\\\n",
    ".merge(product_info, on='StockCode', how='left')\n",
    "\n",
    "transactional_data['TotalPrice'] = transactional_data[\"Quantity\"] *transactional_data['Price']\n",
    "\n",
    "transactional_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "28ef3bb0-8d87-4638-a1c2-af168af2d1c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "## dropping columns to avoid duplicates \n",
    "transactions_dropped = transactional_data.drop(columns=['Country','Description','Price'])\n",
    "\n",
    "# Remove duplicates\n",
    "transactional_data1 = transactions_dropped.drop_duplicates()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "a094e45c-5ca9-4569-8e07-c99b57272533",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Invoice</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>Customer ID</th>\n",
       "      <th>InvoiceDate</th>\n",
       "      <th>Time</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>Week</th>\n",
       "      <th>TotalPrice</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>489434</td>\n",
       "      <td>85048</td>\n",
       "      <td>12</td>\n",
       "      <td>13085</td>\n",
       "      <td>2021-12-01</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2021</td>\n",
       "      <td>12</td>\n",
       "      <td>48</td>\n",
       "      <td>83.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>489434</td>\n",
       "      <td>79323P</td>\n",
       "      <td>12</td>\n",
       "      <td>13085</td>\n",
       "      <td>2021-12-01</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2021</td>\n",
       "      <td>12</td>\n",
       "      <td>48</td>\n",
       "      <td>81.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>489434</td>\n",
       "      <td>79323W</td>\n",
       "      <td>12</td>\n",
       "      <td>13085</td>\n",
       "      <td>2021-12-01</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2021</td>\n",
       "      <td>12</td>\n",
       "      <td>48</td>\n",
       "      <td>81.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>489434</td>\n",
       "      <td>22041</td>\n",
       "      <td>48</td>\n",
       "      <td>13085</td>\n",
       "      <td>2021-12-01</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2021</td>\n",
       "      <td>12</td>\n",
       "      <td>48</td>\n",
       "      <td>100.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <td>489434</td>\n",
       "      <td>21232</td>\n",
       "      <td>24</td>\n",
       "      <td>13085</td>\n",
       "      <td>2021-12-01</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2021</td>\n",
       "      <td>12</td>\n",
       "      <td>48</td>\n",
       "      <td>30.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2032801</th>\n",
       "      <td>581587</td>\n",
       "      <td>22899</td>\n",
       "      <td>6</td>\n",
       "      <td>12680</td>\n",
       "      <td>2023-12-09</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2023</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "      <td>12.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2032803</th>\n",
       "      <td>581587</td>\n",
       "      <td>23254</td>\n",
       "      <td>4</td>\n",
       "      <td>12680</td>\n",
       "      <td>2023-12-09</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2023</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "      <td>16.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2032805</th>\n",
       "      <td>581587</td>\n",
       "      <td>23255</td>\n",
       "      <td>4</td>\n",
       "      <td>12680</td>\n",
       "      <td>2023-12-09</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2023</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "      <td>16.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2032806</th>\n",
       "      <td>581587</td>\n",
       "      <td>22138</td>\n",
       "      <td>3</td>\n",
       "      <td>12680</td>\n",
       "      <td>2023-12-09</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2023</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "      <td>14.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2032810</th>\n",
       "      <td>581587</td>\n",
       "      <td>POST</td>\n",
       "      <td>1</td>\n",
       "      <td>12680</td>\n",
       "      <td>2023-12-09</td>\n",
       "      <td>00:00</td>\n",
       "      <td>2023</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "      <td>18.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1010531 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Invoice StockCode  Quantity Customer ID InvoiceDate   Time  Year  \\\n",
       "0        489434     85048        12       13085  2021-12-01  00:00  2021   \n",
       "12       489434    79323P        12       13085  2021-12-01  00:00  2021   \n",
       "48       489434    79323W        12       13085  2021-12-01  00:00  2021   \n",
       "96       489434     22041        48       13085  2021-12-01  00:00  2021   \n",
       "108      489434     21232        24       13085  2021-12-01  00:00  2021   \n",
       "...         ...       ...       ...         ...         ...    ...   ...   \n",
       "2032801  581587     22899         6       12680  2023-12-09  00:00  2023   \n",
       "2032803  581587     23254         4       12680  2023-12-09  00:00  2023   \n",
       "2032805  581587     23255         4       12680  2023-12-09  00:00  2023   \n",
       "2032806  581587     22138         3       12680  2023-12-09  00:00  2023   \n",
       "2032810  581587      POST         1       12680  2023-12-09  00:00  2023   \n",
       "\n",
       "         Month  Week  TotalPrice  \n",
       "0           12    48       83.40  \n",
       "12          12    48       81.00  \n",
       "48          12    48       81.00  \n",
       "96          12    48      100.80  \n",
       "108         12    48       30.00  \n",
       "...        ...   ...         ...  \n",
       "2032801     12    49       12.60  \n",
       "2032803     12    49       16.60  \n",
       "2032805     12    49       16.60  \n",
       "2032806     12    49       14.85  \n",
       "2032810     12    49       18.00  \n",
       "\n",
       "[1010531 rows x 10 columns]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "transactional_data1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "df27c6f3-fff9-4c73-8c64-fce93c93dbca",
   "metadata": {},
   "source": [
    "# Top 10 Stock Codes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "43f2df1f-73f7-436f-8c81-0dc8b5bd6ca3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>StockCode</th>\n",
       "      <th>TotalQuantitySold</th>\n",
       "      <th>Description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3592</th>\n",
       "      <td>84077</td>\n",
       "      <td>106250</td>\n",
       "      <td>WORLD WAR 2 GLIDERS ASSTD DESIGNS</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4364</th>\n",
       "      <td>85123A</td>\n",
       "      <td>98208</td>\n",
       "      <td>21733 mixed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4336</th>\n",
       "      <td>85099B</td>\n",
       "      <td>96764</td>\n",
       "      <td>missing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>625</th>\n",
       "      <td>21212</td>\n",
       "      <td>94884</td>\n",
       "      <td>PACK OF 72 RETRO SPOT CAKE CASES</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1449</th>\n",
       "      <td>22197</td>\n",
       "      <td>88993</td>\n",
       "      <td>No Description</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2817</th>\n",
       "      <td>23843</td>\n",
       "      <td>80995</td>\n",
       "      <td>PAPER CRAFT , LITTLE BIRDIE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4047</th>\n",
       "      <td>84879</td>\n",
       "      <td>80090</td>\n",
       "      <td>Dotcom multiples</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2371</th>\n",
       "      <td>23166</td>\n",
       "      <td>78033</td>\n",
       "      <td>MEDIUM CERAMIC TOP STORAGE JAR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>17003</td>\n",
       "      <td>70379</td>\n",
       "      <td>BROCADE RING PURSE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1261</th>\n",
       "      <td>21977</td>\n",
       "      <td>56061</td>\n",
       "      <td>PACK OF 60 PINK PAISLEY CAKE CASES</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     StockCode  TotalQuantitySold                         Description\n",
       "3592     84077             106250   WORLD WAR 2 GLIDERS ASSTD DESIGNS\n",
       "4364    85123A              98208                         21733 mixed\n",
       "4336    85099B              96764                             missing\n",
       "625      21212              94884    PACK OF 72 RETRO SPOT CAKE CASES\n",
       "1449     22197              88993                      No Description\n",
       "2817     23843              80995         PAPER CRAFT , LITTLE BIRDIE\n",
       "4047     84879              80090                    Dotcom multiples\n",
       "2371     23166              78033      MEDIUM CERAMIC TOP STORAGE JAR\n",
       "115      17003              70379                 BROCADE RING PURSE \n",
       "1261     21977              56061  PACK OF 60 PINK PAISLEY CAKE CASES"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_stock_codes = transactional_data1.groupby('StockCode').agg(\n",
    "TotalQuantitySold=('Quantity', 'sum')\n",
    ").reset_index()\n",
    " \n",
    "# Sort by TotalQuantitySold in descending order and select the top 10\n",
    "top_10_stock_codes = top_stock_codes.sort_values(by='TotalQuantitySold', ascending=False).head(10)\n",
    " \n",
    "stock_code_to_description = product_info.set_index('StockCode')['Description'].to_dict()\n",
    "\n",
    "top_10_stock_codes['Description'] = top_10_stock_codes['StockCode'].map(stock_code_to_description)\n",
    "top_10_stock_codes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c3354ee1-a914-4883-8411-8e4822792024",
   "metadata": {},
   "source": [
    "# Top 10 High Revenue Products"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "9c0f97f5-adc4-4705-87d2-3d939553991d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>StockCode</th>\n",
       "      <th>TotalRevenue</th>\n",
       "      <th>Description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4968</th>\n",
       "      <td>M</td>\n",
       "      <td>339599.81</td>\n",
       "      <td>Manual</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1655</th>\n",
       "      <td>22423</td>\n",
       "      <td>330590.32</td>\n",
       "      <td>wonky bottom/broken</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4967</th>\n",
       "      <td>DOT</td>\n",
       "      <td>309854.11</td>\n",
       "      <td>No Description</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4364</th>\n",
       "      <td>85123A</td>\n",
       "      <td>257724.71</td>\n",
       "      <td>21733 mixed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4336</th>\n",
       "      <td>85099B</td>\n",
       "      <td>180569.34</td>\n",
       "      <td>missing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2817</th>\n",
       "      <td>23843</td>\n",
       "      <td>168469.60</td>\n",
       "      <td>PAPER CRAFT , LITTLE BIRDIE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3180</th>\n",
       "      <td>47566</td>\n",
       "      <td>148318.28</td>\n",
       "      <td>No Description</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4047</th>\n",
       "      <td>84879</td>\n",
       "      <td>129324.49</td>\n",
       "      <td>Dotcom multiples</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4970</th>\n",
       "      <td>POST</td>\n",
       "      <td>125682.42</td>\n",
       "      <td>No Description</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1342</th>\n",
       "      <td>22086</td>\n",
       "      <td>117760.29</td>\n",
       "      <td>No Description</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     StockCode  TotalRevenue                  Description\n",
       "4968         M     339599.81                       Manual\n",
       "1655     22423     330590.32          wonky bottom/broken\n",
       "4967       DOT     309854.11               No Description\n",
       "4364    85123A     257724.71                  21733 mixed\n",
       "4336    85099B     180569.34                      missing\n",
       "2817     23843     168469.60  PAPER CRAFT , LITTLE BIRDIE\n",
       "3180     47566     148318.28               No Description\n",
       "4047     84879     129324.49             Dotcom multiples\n",
       "4970      POST     125682.42               No Description\n",
       "1342     22086     117760.29               No Description"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_revenue_products = transactional_data1.groupby('StockCode').agg(TotalRevenue=('TotalPrice', 'sum')).reset_index()\n",
    " \n",
    "# Sort by TotalRevenue in descending order and select the top 10\n",
    "top_10_revenue_products = top_revenue_products.sort_values(by='TotalRevenue', ascending=False).head(10)\n",
    " \n",
    "top_10_revenue_products['Description'] = top_10_revenue_products['StockCode'].map(stock_code_to_description)\n",
    "top_10_revenue_products"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "f94dc668-bb4d-4c42-ac73-6000a45a49d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Q: The goal is to estimate future demand accurately to maintain optimal stock levels, \n",
    "# ensuring that the supply chain remains efficient and meets customer demands\n",
    "# \n",
    "# Solution : To Maintina optimal levels of stocks I have considerd the Quantity sold metirc to forecast.\n",
    "# as Quantity is the right metric to asses the demand ranther than revenue"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "a1d6d105-d5ac-4823-8670-03e2efeb9d7d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# List out unique StockCodes from top_10_stock_codes\n",
    "unique_stock_codes = top_10_stock_codes['StockCode'].unique()\n",
    "\n",
    "#filter the data based on above stock codes \n",
    "\n",
    "filtered_transactions = transactional_data1[transactional_data1['StockCode'].isin(unique_stock_codes)]\n",
    "\n",
    "agg_stock_code_qty = filtered_transactions.groupby(['StockCode','Year', 'Month','Week']).agg( TotalQuantitySold=('Quantity', 'sum')).reset_index()\n",
    "agg_stock_code_price=filtered_transactions.groupby(['StockCode','Year', 'Month','Week']).agg( TotalSumPrice=('TotalPrice', 'sum')).reset_index()\n",
    "\n",
    "#add date ass index for timeseries \n",
    "agg_stock_code_qty['Date'] = pd.to_datetime(agg_stock_code_qty['Year'].astype(int).astype(str) + '-W' + agg_stock_code_qty['Week'].astype(str)+'-1', format='%Y-W%W-%w')\n",
    "agg_stock_code_qty.sort_values('Date', inplace=True)\n",
    "agg_stock_code_qty.set_index('Date', inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "ed96f5b9-9f4d-4c21-a238-400847ce0d07",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>Week</th>\n",
       "      <th>TotalQuantitySold</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2021-11-29</th>\n",
       "      <td>17003</td>\n",
       "      <td>2021</td>\n",
       "      <td>12</td>\n",
       "      <td>48</td>\n",
       "      <td>183</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-29</th>\n",
       "      <td>85099B</td>\n",
       "      <td>2021</td>\n",
       "      <td>12</td>\n",
       "      <td>48</td>\n",
       "      <td>1180</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-29</th>\n",
       "      <td>84879</td>\n",
       "      <td>2021</td>\n",
       "      <td>12</td>\n",
       "      <td>48</td>\n",
       "      <td>1987</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-29</th>\n",
       "      <td>84077</td>\n",
       "      <td>2021</td>\n",
       "      <td>12</td>\n",
       "      <td>48</td>\n",
       "      <td>731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-29</th>\n",
       "      <td>22197</td>\n",
       "      <td>2021</td>\n",
       "      <td>12</td>\n",
       "      <td>48</td>\n",
       "      <td>671</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-12-04</th>\n",
       "      <td>22197</td>\n",
       "      <td>2023</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "      <td>4569</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-12-04</th>\n",
       "      <td>21977</td>\n",
       "      <td>2023</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "      <td>215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-12-04</th>\n",
       "      <td>21212</td>\n",
       "      <td>2023</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "      <td>314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-12-04</th>\n",
       "      <td>84077</td>\n",
       "      <td>2023</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "      <td>1073</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-12-04</th>\n",
       "      <td>85123A</td>\n",
       "      <td>2023</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "      <td>657</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>993 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           StockCode  Year  Month  Week  TotalQuantitySold\n",
       "Date                                                      \n",
       "2021-11-29     17003  2021     12    48                183\n",
       "2021-11-29    85099B  2021     12    48               1180\n",
       "2021-11-29     84879  2021     12    48               1987\n",
       "2021-11-29     84077  2021     12    48                731\n",
       "2021-11-29     22197  2021     12    48                671\n",
       "...              ...   ...    ...   ...                ...\n",
       "2023-12-04     22197  2023     12    49               4569\n",
       "2023-12-04     21977  2023     12    49                215\n",
       "2023-12-04     21212  2023     12    49                314\n",
       "2023-12-04     84077  2023     12    49               1073\n",
       "2023-12-04    85123A  2023     12    49                657\n",
       "\n",
       "[993 rows x 5 columns]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "agg_stock_code_qty"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "605bd450-14a3-44bd-bec9-66bb967c1182",
   "metadata": {},
   "outputs": [],
   "source": [
    "stock_code = '17003'\n",
    "filtered_df = agg_stock_code_qty[agg_stock_code_qty['StockCode'] == stock_code]['TotalQuantitySold']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "d48b5808-944e-462c-bd41-1f6c7d96419b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "# Plot the time series data for ACF and PACF\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.plot(filtered_df)\n",
    "plt.title(f'Total Quantity Sold for {stock_code}')\n",
    "plt.xlabel('Date')\n",
    "plt.ylabel('Quantity Sold')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "6daf352b-bfe5-4713-93a8-167f44b4bf96",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12, 6))\n",
    "\n",
    "# ACF\n",
    "plt.subplot(121)\n",
    "plot_acf(filtered_df, lags=20, ax=plt.gca())\n",
    "plt.title('Autocorrelation (ACF)')\n",
    "\n",
    "# PACF\n",
    "plt.subplot(122)\n",
    "plot_pacf(filtered_df, lags=20, ax=plt.gca())\n",
    "plt.title('Partial Autocorrelation (PACF)')\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# ACF gives q  and PACF gives p in ARIMA(p,q,d)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "417a43cd-7165-4088-9532-8f64f7daa764",
   "metadata": {},
   "outputs": [],
   "source": [
    "train_size = int(len(filtered_df) * 0.8)\n",
    "train, test = filtered_df.iloc[:train_size], filtered_df.iloc[train_size:]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "59b40bcc-6070-485a-9649-3c7c2e909098",
   "metadata": {},
   "source": [
    "# ARIMA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "04d02211-79d3-410a-980c-3ae5bfc553a7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Performing stepwise search to minimize aic\n",
      " ARIMA(1,1,1)(0,1,1)[52]             : AIC=inf, Time=8.63 sec\n",
      " ARIMA(0,1,0)(0,1,0)[52]             : AIC=575.999, Time=0.36 sec\n",
      " ARIMA(1,1,0)(1,1,0)[52]             : AIC=inf, Time=6.76 sec\n",
      " ARIMA(0,1,1)(0,1,1)[52]             : AIC=inf, Time=3.73 sec\n",
      " ARIMA(0,1,0)(1,1,0)[52]             : AIC=inf, Time=3.39 sec\n",
      " ARIMA(0,1,0)(0,1,1)[52]             : AIC=inf, Time=5.10 sec\n",
      " ARIMA(0,1,0)(1,1,1)[52]             : AIC=inf, Time=8.19 sec\n",
      " ARIMA(1,1,0)(0,1,0)[52]             : AIC=560.597, Time=0.13 sec\n",
      " ARIMA(1,1,0)(0,1,1)[52]             : AIC=inf, Time=5.96 sec\n",
      " ARIMA(1,1,0)(1,1,1)[52]             : AIC=551.435, Time=13.97 sec\n",
      " ARIMA(1,1,0)(2,1,1)[52]             : AIC=inf, Time=37.85 sec\n",
      " ARIMA(1,1,0)(1,1,2)[52]             : AIC=inf, Time=20.11 sec\n",
      " ARIMA(1,1,0)(0,1,2)[52]             : AIC=inf, Time=16.41 sec\n",
      " ARIMA(1,1,0)(2,1,0)[52]             : AIC=inf, Time=16.23 sec\n",
      " ARIMA(1,1,0)(2,1,2)[52]             : AIC=inf, Time=16.56 sec\n",
      " ARIMA(2,1,0)(1,1,1)[52]             : AIC=548.334, Time=8.61 sec\n",
      " ARIMA(2,1,0)(0,1,1)[52]             : AIC=inf, Time=5.11 sec\n",
      " ARIMA(2,1,0)(1,1,0)[52]             : AIC=inf, Time=5.72 sec\n",
      " ARIMA(2,1,0)(2,1,1)[52]             : AIC=inf, Time=29.29 sec\n",
      " ARIMA(2,1,0)(1,1,2)[52]             : AIC=inf, Time=19.40 sec\n",
      " ARIMA(2,1,0)(0,1,0)[52]             : AIC=562.069, Time=0.16 sec\n",
      " ARIMA(2,1,0)(0,1,2)[52]             : AIC=inf, Time=14.76 sec\n",
      " ARIMA(2,1,0)(2,1,0)[52]             : AIC=inf, Time=21.37 sec\n",
      " ARIMA(2,1,0)(2,1,2)[52]             : AIC=inf, Time=33.90 sec\n",
      " ARIMA(3,1,0)(1,1,1)[52]             : AIC=inf, Time=7.75 sec\n",
      " ARIMA(2,1,1)(1,1,1)[52]             : AIC=inf, Time=6.88 sec\n",
      " ARIMA(1,1,1)(1,1,1)[52]             : AIC=inf, Time=7.01 sec\n",
      " ARIMA(3,1,1)(1,1,1)[52]             : AIC=inf, Time=8.80 sec\n",
      " ARIMA(2,1,0)(1,1,1)[52] intercept   : AIC=550.401, Time=7.05 sec\n",
      "\n",
      "Best model:  ARIMA(2,1,0)(1,1,1)[52]          \n",
      "Total fit time: 339.261 seconds\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\ProgramData\\anaconda3\\Lib\\site-packages\\statsmodels\\tsa\\base\\tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n",
      "  return get_prediction_index(\n",
      "C:\\ProgramData\\anaconda3\\Lib\\site-packages\\statsmodels\\tsa\\base\\tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n",
      "  return get_prediction_index(\n"
     ]
    },
    {
     "data": {
      "image/png": "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f7NI5nXkzp1bWbNmveY5SpQoIcdxVKxYMZUuXfqax0nSpk2brvr6jh8/riVLlujll1/WSy+9FH/79u3br3h8/vz59eSTT+rJJ5/U4cOHVaVKFb322mvxxbLkLlksVqyYbr/9dn388cfq0aOH5syZo/vuu0/BwcGJjgsKClLz5s3VvHlzxcXF6cknn9TEiRP14osvXrWguWLFCu3bt09DhgyJn3146et+4okn9Pnnn6tdu3YqUaKE4uLi9Pvvv6ty5cpXzXu11+feVOPEiROJlry6ZxK6LV++XMeOHdOcOXNUu3bt+Nt37dp11ecEAADXxzJMAAC8zNmzZzVnzhw1a9ZMrVq1uuzSo0cPnTx5Ul9++eU1zxMQEKA+ffpoy5Yt+uKLL5KVoUSJEho9erSGDh2q22+//arHTZ8+XcWLF1fXrl0vy9m3b1+FhIQkeylmUp+7SZMmOnjwYKIeVzExMXr77bcVEhKiOnXqxB8XExOj8ePHxx8XGxurt99+O9H58ubNq7p162rixIk6cODAZc935MiRZL2OpMifP78qV66s999/P9GulZs2bdK3336rJk2aXPcc999/v/z9/fXyyy8n2q1SMrOpjh07JkmqUqWKihUrptGjRyd6LvdxkuJnpv33PP/dxTI2NvayJYJ58+ZVgQIFdP78+fjbsmbNmuylhK1bt9batWs1ZcoUHT16NNESTEnxr8fNz89PFStWlKREz/1f7iWY/fr1u+x79fHHH1epUqXiv1fvu+8++fn5aciQIZfN7rr0a5M1a9bLvpZSQmFy5cqV8bedPn36splvV/p6X7hwQePGjbvq6wAAANfHzDIAALzMl19+qZMnT+p///vfFe+vUaOG8uTJoxkzZlxWSPivDh066KWXXtIbb7yh++67L1k5evbsec379+/fr2XLlunpp5++4v3BwcFq1KiRZs+erbfeekuBgYGp9tyS9MQTT2jixInq0KGD1q9fr6JFi+rTTz/VqlWrNHr0aGXLlk2S1Lx5c91xxx169tlntXv3bpUrV05z5sy5YhHnnXfe0Z133qkKFSro8ccfV/HixXXo0CGtWbNG+/bt06+//prk15BUI0aMUOPGjRUREaFOnTrp7NmzevvttxUWFqbBgwdf9/ElSpTQq6++qoEDB2r37t267777lC1bNu3atUtz587VE088ob59+8rPz0/j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gQIF9NFHH131sa1atVJAQIDGjRuXpOe65ZZbdMstt2jTpk1q27btFY+ZPHmy+vTpc1mWWrVqXXHJZlKULVtWa9asSdSDbdWqVcqWLZsKFix41cdVqVJFmzdvVtGiRVWyZMlEl6xZs6pUqVLKnDmzlixZcsXHr169WkWKFNHzzz+v2267TaVKldJff/112XGlS5fWM888o2+//Vb333+/pk6dKsn0gouNjU3Ra04uimVAWti9W5o/34y7dr2xc3Xtaj4F2bBBWrr0RpMBAAAAAK7i66+/1vHjx9WpUyeVL18+0aVly5bXXP7ocrn09NNPa9iwYTpz5kySnm/p0qU6cOCAsmfPftl9GzZs0M8//6zOnTtfluWhhx7S+++/n2gHy6R68skntXfvXj311FPaunWrvvjiCw0aNEi9e/eO71d2Jd27d9c///yjhx56SOvWrdPOnTu1cOFCdezYUbGxscqUKZMGDBig/v3764MPPtDOnTu1du3a+K9ZqVKltGfPHs2aNUs7d+7UW2+9pblz58af/+zZs+rRo4eWL1+uv/76S6tWrdK6detUtmxZSabH2alTp7RkyRIdPXo0yV/jlEhWsWzw4MHxW3S6L+71qZJ07tw5de/eXbly5VJISIhatmypQ4cOJTrHnj171LRpU2XJkkV58+ZVv379LvvLXb58uapUqaLg4OD4Nb9AhvLuu2YWWP360iUNCVMkVy4zO00ys8sAAAAAAGli8uTJql+/fqKllm4tW7bUTz/9pN9+++2qj3/00Ud18eJFjR07NknPlzVr1isWytxZypUrl6ju4taiRQsdPnxY892TNJLhpptu0vz58/Xjjz+qUqVK6tq1qzp16pSo+f6VFChQQKtWrVJsbKwaNmyoChUqqFevXsqePXt8ke3FF19Unz599NJLL6ls2bJq3bq1Dh8+LEn63//+p2eeeUY9evRQ5cqVtXr1ar344ovx5/f399exY8f0yCOPqHTp0nrwwQfVuHFjvfzyy5LMZgpdu3ZV69atlSdPnkSbD6Q2l3OtvU//Y/Dgwfr000+1ePHi+NsCAgKUO3duSVK3bt00b948TZs2TWFhYerRo4f8/Py0atUqSVJsbKwqV66s8PBwjRgxQgcOHNAjjzyixx9/PH43hV27dql8+fLq2rWrOnfurCVLlqhXr16aN2+eGjVqlOQXFh0drbCw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",
      "text/plain": [
       "<Figure size 1500x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Fit ARIMA model\n",
    "arima_mod = pm.auto_arima(train, start_p=1, start_q=1, test='adf', max_p=3, max_q=3,\n",
    "                           seasonal=True, m=52, start_P=0, D=1, trace=True,\n",
    "                           error_action='ignore', suppress_warnings=True, stepwise=True)\n",
    "\n",
    "# Predict\n",
    "arima_forecast = arima_mod.predict(n_periods=len(test))\n",
    "\n",
    "# Plotting ARIMA predictions vs actual\n",
    "plt.figure(figsize=(15, 6))\n",
    "plt.plot(test.index, test, label='Actual')\n",
    "plt.plot(test.index, arima_forecast, label='ARIMA Forecast', color='red')\n",
    "plt.title('ARIMA Model Forecast vs Actual')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "f538e041-d467-4e00-9061-261dc8be3e56",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\ProgramData\\anaconda3\\Lib\\site-packages\\statsmodels\\tsa\\base\\tsa_model.py:473: ValueWarning: A date index has been provided, but it has no associated frequency information and so will be ignored when e.g. forecasting.\n",
      "  self._init_dates(dates, freq)\n",
      "C:\\ProgramData\\anaconda3\\Lib\\site-packages\\statsmodels\\tsa\\holtwinters\\model.py:918: ConvergenceWarning: Optimization failed to converge. Check mle_retvals.\n",
      "  warnings.warn(\n",
      "C:\\ProgramData\\anaconda3\\Lib\\site-packages\\statsmodels\\tsa\\base\\tsa_model.py:836: ValueWarning: No supported index is available. Prediction results will be given with an integer index beginning at `start`.\n",
      "  return get_prediction_index(\n",
      "C:\\ProgramData\\anaconda3\\Lib\\site-packages\\statsmodels\\tsa\\base\\tsa_model.py:836: FutureWarning: No supported index is available. In the next version, calling this method in a model without a supported index will result in an exception.\n",
      "  return get_prediction_index(\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "####ETS Model\n",
    "ets_model = ExponentialSmoothing(train, seasonal='add', seasonal_periods=12)\n",
    "ets_fit = ets_model.fit()\n",
    "ets_forecast = ets_fit.forecast(steps=len(test))\n",
    "# Plotting ETS Predictions vs Actual\n",
    "plt.figure(figsize=(15, 6))\n",
    "plt.plot(test.index, test, label='Actual')\n",
    "plt.plot(test.index, ets_forecast, label='ETS Forecast', color='green')\n",
    "plt.title('ETS Model Forecast vs Actual')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "7c0944d3-e11b-4caf-a2ff-f5d7a46594d2",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "18:02:33 - cmdstanpy - INFO - Chain [1] start processing\n",
      "18:02:33 - cmdstanpy - INFO - Chain [1] done processing\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABMsAAAIQCAYAAACfROl0AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjkuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8hTgPZAAAACXBIWXMAAA9hAAAPYQGoP6dpAADQmklEQVR4nOzdd3xUdfb/8feU9Eo6gZCE0FEQQRGliIII2EFFWcsuyqqga1l319/u2v3yta6ra1ld237F1bUuui6IWKhSF0VBShqhhPRO6tzfH5OZEGkJmeROZl7Px2Memnvv3HvukDYn55yPxTAMQwAAAAAAAABkNTsAAAAAAAAAwFuQLAMAAAAAAACakSwDAAAAAAAAmpEsAwAAAAAAAJqRLAMAAAAAAACakSwDAAAAAAAAmpEsAwAAAAAAAJqRLAMAAAAAAACakSwDAAAAAAAAmpEsAwAAHnf//ffLYrGoqKjI7FC6nOveT8T111+vtLQ0zwYEHIPFYtH9999vdhgAAHgVkmUAAHRzr7/+uiwWi/sRHBysAQMGaP78+Tpw4IDZ4XnMW2+9paeffrrNx6elpclisWjSpElH3P/yyy+7X7MNGzZ4KMqucfbZZ7f6Nz/08eOPP5odXqeqqanR/fffr6+++srsUA7z/PPPy2KxaPTo0Sd8jn379un+++/X5s2bPRcYAABoF7vZAQAAAM948MEHlZ6ertraWq1cuVIvvPCCPv30U33//fcKDQ01O7wOe+utt/T999/r9ttvb/NzgoOD9eWXXyo/P19JSUmt9i1cuFDBwcGqra31cKRdo3fv3lqwYMFh25OTk02IpuvU1NTogQcekORMGnqThQsXKi0tTevWrdOuXbvUr1+/dp9j3759euCBB5SWlqZTTjnF80ECAIDjIlkGAICPmDp1qkaNGiVJuuGGGxQbG6unnnpK//rXv3TVVVcd8TnV1dUKCwvryjC71FlnnaX169frnXfe0a9+9Sv39j179mjFihW69NJL9f7775sY4YmLiorSz372M4+f1zAM1dbWKiQkxOPn9mXZ2dlavXq1PvjgA/3yl7/UwoULdd9995kdFgAAOAG0YQIA4KPOOeccSc438ZJzHlZ4eLgyMzM1bdo0RUREaPbs2ZKcSbO77rpLKSkpCgoK0sCBA/XEE0/IMIxW57RYLJo/f74WLlyogQMHKjg4WCNHjtTy5cuPGENZWZmuv/56RUdHKyoqSj//+c9VU1Nz2HFvvvmmRo4cqZCQEMXExGjWrFnKy8tz7z/77LP173//W7m5ue52w7bM9goODtZll12mt956q9X2f/zjH+rRo4emTJlyxOd98cUXGjdunMLCwhQdHa2LL75Y27ZtO+y4lStX6rTTTlNwcLAyMjL017/+9aixHO8ePa2xsVEPPfSQMjIyFBQUpLS0NP2///f/VFdX1+q4tLQ0XXDBBVqyZIlGjRqlkJAQ932UlZXp9ttvd39e9OvXT48++qgcDkerczgcDv35z3/WySefrODgYMXHx+v8889v1d762muv6ZxzzlFCQoKCgoI0ZMgQvfDCC4fFvWHDBk2ZMkVxcXEKCQlRenq6fvGLX0iScnJyFB8fL0l64IEH3J8LR5u5tWHDBlksFr3xxhuH7VuyZIksFos++eQTSVJlZaVuv/12paWlKSgoSAkJCZo8ebI2bdrUptd74cKF6tGjh6ZPn66ZM2dq4cKFRzyurKxMd9xxh/s6vXv31rXXXquioiJ99dVXOu200yRJP//5z9339/rrr0ty/ltdf/31h53z7LPPblVlV19fr3vvvVcjR45UVFSUwsLCNG7cOH355ZdtuhcAAPwdlWUAAPiozMxMSVJsbKx7W2Njo6ZMmaKxY8fqiSeeUGhoqAzD0EUXXaQvv/xSc+bM0SmnnKIlS5bo7rvv1t69e/WnP/2p1Xm//vprvfPOO7rtttsUFBSk559/Xueff77WrVunk046qdWxV1xxhdLT07VgwQJt2rRJf/vb35SQkKBHH33UfcwjjzyiP/7xj7riiit0ww03qLCwUM8++6zGjx+v//73v4qOjtbvf/97lZeXa8+ePe54wsPD2/Q6XH311TrvvPOUmZmpjIwMSc6WzpkzZyogIOCw4z///HNNnTpVffv21f3336+DBw/q2Wef1VlnnaVNmza5k3RbtmzReeedp/j4eN1///1qbGzUfffdp8TExMPO2ZZ7bK+mpqbDFlAIDg52vy433HCD3njjDc2cOVN33XWX1q5dqwULFmjbtm368MMPWz1v+/btuuqqq/TLX/5SN954owYOHKiamhpNmDBBe/fu1S9/+Uv16dNHq1ev1j333KP9+/e3mh83Z84cvf7665o6dapuuOEGNTY2asWKFfrmm2/c1Y4vvPCChg4dqosuukh2u10ff/yxbrnlFjkcDs2bN0+SVFBQ4H5Nf/e73yk6Olo5OTn64IMPJEnx8fF64YUXdPPNN+vSSy/VZZddJkkaNmzYEV+jUaNGqW/fvvrnP/+p6667rtW+d955p1XC9KabbtJ7772n+fPna8iQISouLtbKlSu1bds2nXrqqcf991i4cKEuu+wyBQYG6qqrrtILL7yg9evXu5NfklRVVaVx48Zp27Zt+sUvfqFTTz1VRUVFWrRokfbs2aPBgwfrwQcf1L333qu5c+dq3LhxkqQzzzzzuNc/VEVFhf72t7/pqquu0o033qjKykq98sormjJlitatW0d7JwAAx2MAAIBu7bXXXjMkGZ9//rlRWFho5OXlGW+//bYRGxtrhISEGHv27DEMwzCuu+46Q5Lxu9/9rtXzP/roI0OS8fDDD7faPnPmTMNisRi7du1yb5NkSDI2bNjg3pabm2sEBwcbl156qXvbfffdZ0gyfvGLX7Q656WXXmrExsa6P87JyTFsNpvxyCOPtDpuy5Ytht1ub7V9+vTpRmpqaptfl9TUVGP69OlGY2OjkZSUZDz00EOGYRjG1q1bDUnG119/7X7t1q9f737eKaecYiQkJBjFxcXubd9++61htVqNa6+91r3tkksuMYKDg43c3Fz3tq1btxo2m8049Fes9tzjdddd16Z7nDBhgvvf4tDHddddZxiGYWzevNmQZNxwww2tnvfrX//akGR88cUXrV4nScbixYtbHfvQQw8ZYWFhxo4dO1pt/93vfmfYbDZj9+7dhmEYxhdffGFIMm677bbD4nQ4HO7/r6mpOWz/lClTjL59+7o//vDDDw/79/ipwsJCQ5Jx3333HfWYQ91zzz1GQECAUVJS4t5WV1dnREdHt/r8jIqKMubNm9emc/7Uhg0bDEnG0qVLDcNw3nfv3r2NX/3qV62Ou/feew1JxgcffHDYOVyv1fr16w1JxmuvvXbYMampqe5/40NNmDDBmDBhgvvjxsZGo66urtUxpaWlRmJi4mFfk+15LQEA8Be0YQIA4CMmTZqk+Ph4paSkaNasWQoPD9eHH36oXr16tTru5ptvbvXxp59+KpvNpttuu63V9rvuukuGYeg///lPq+1jxozRyJEj3R/36dNHF198sZYsWaKmpqZWx950002tPh43bpyKi4tVUVEhSfrggw/kcDh0xRVXqKioyP1ISkpS//79PdI2ZrPZdMUVV+gf//iHJGcFUEpKirtq51D79+/X5s2bdf311ysmJsa9fdiwYZo8ebI+/fRTSc6qriVLluiSSy5Rnz593McNHjz4sNbOzrrHtLQ0LV26tNXjN7/5jSS547zzzjtbPeeuu+6SJP373/9utT09Pf2wuN99912NGzdOPXr0aBX3pEmT1NTU5G69ff/992WxWI44n8tisbj//9AZaOXl5SoqKtKECROUlZWl8vJySXJX2H3yySdqaGho92tyJFdeeaUaGhrc1WmS9Nlnn6msrExXXnmle1t0dLTWrl2rffv2tfsaCxcuVGJioiZOnCjJed9XXnml3n777VZfE++//76GDx+uSy+99LBzHPpadZTNZlNgYKAkZ4tsSUmJGhsbNWrUqDa3lQIA4M9owwQAwEc899xzGjBggOx2uxITEzVw4EBZra3/Lma329W7d+9W23Jzc5WcnKyIiIhW2wcPHuzef6j+/fsfdu0BAwaopqZGhYWFrVadPDSRJEk9evSQJJWWlioyMlI7d+6UYRhHPKekI7ZJnoirr75azzzzjL799lu99dZbmjVr1hGTE657HThw4GH7Bg8erCVLlqi6ulqVlZU6ePDgEeMeOHCgO1klqdPuMSwsTJMmTTrivtzcXFmt1sNWY0xKSlJ0dPRh/6bp6emHnWPnzp367rvv3DPCfqqgoECSs903OTm5VXLxSFatWqX77rtPa9asOWxuXXl5uaKiojRhwgTNmDFDDzzwgP70pz/p7LPP1iWXXKKrr75aQUFBxzz/0QwfPlyDBg3SO++8ozlz5khytmDGxcW55/pJ0mOPPabrrrtOKSkpGjlypKZNm6Zrr71Wffv2Peb5m5qa9Pbbb2vixInu+YCSNHr0aD355JNatmyZzjvvPEnO12rGjBkndB/t9cYbb+jJJ5/Ujz/+2CrxeKR/awAA0BrJMgAAfMTpp5/ung91NEFBQYcl0DqTzWY74najeeEAh8Mhi8Wi//znP0c8tq1zyY5n9OjRysjI0O23367s7GxdffXVHjlvW3TVPR5JW6uVjrTypcPh0OTJk93Vaj81YMCANseRmZmpc889V4MGDdJTTz2llJQUBQYG6tNPP9Wf/vQn94IBFotF7733nr755ht9/PHHWrJkiX7xi1/oySef1DfffHPCr9WVV16pRx55REVFRYqIiNCiRYt01VVXyW5v+VX4iiuu0Lhx4/Thhx/qs88+0+OPP65HH31UH3zwgaZOnXrUc3/xxRfav3+/3n77bb399tuH7V+4cKE7WdZRR/v3bGpqavW59eabb+r666/XJZdcorvvvlsJCQmy2WxasGCBe5YhAAA4OpJlAAD4udTUVH3++eeqrKxsVV32448/uvcfaufOnYedY8eOHQoNDT1qFdLRZGRkyDAMpaenHzf50tE2tauuukoPP/ywBg8efNQB56573b59+2H7fvzxR8XFxSksLEzBwcEKCQk54mvx0+e25x49JTU1VQ6HQzt37nRXCErSgQMHVFZWdti/6ZFkZGSoqqrqqNVrhx63ZMkSlZSUHLW67OOPP1ZdXZ0WLVrUqtrwaC2oZ5xxhs444ww98sgjeuuttzR79my9/fbbuuGGG07o8+DKK6/UAw88oPfff1+JiYmqqKjQrFmzDjuuZ8+euuWWW3TLLbeooKBAp556qh555JFjJssWLlyohIQEPffcc4ft++CDD/Thhx/qxRdfVEhIiDIyMvT9998fM9Zj3V+PHj1UVlZ22Pbc3NxWFXDvvfee+vbtqw8++KDV+Y7UKgsAAA7HzDIAAPzctGnT1NTUpL/85S+ttv/pT3+SxWI5LFGwZs2aVnOP8vLy9K9//UvnnXfeUSvJjuayyy6TzWbTAw884K42czEMQ8XFxe6Pw8LC3LOtTsQNN9yg++67T08++eRRj+nZs6dOOeUUvfHGG62SEt9//70+++wzTZs2TZKzYm7KlCn66KOPtHv3bvdx27Zt05IlS074Hj3FFeehK1ZK0lNPPSVJmj59+nHPccUVV2jNmjWH3Y8klZWVqbGxUZI0Y8YMGYahBx544LDjXPfr+rw49P7Ly8v12muvtTq+tLT0sNfIldisq6uTJIWGhrpjaKvBgwfr5JNP1jvvvKN33nlHPXv21Pjx4937m5qaDvvcSkhIUHJysvu6R3Lw4EF98MEHuuCCCzRz5szDHvPnz1dlZaUWLVokyflaffvtt4etRiq1vDZhYWFHvb+MjAx98803qq+vd2/75JNPlJeX1+q4I73ea9eu1Zo1a456LwAAoAWVZQAA+LkLL7xQEydO1O9//3vl5ORo+PDh+uyzz/Svf/1Lt99+uzIyMlodf9JJJ2nKlCm67bbbFBQUpOeff16SjpgsOZ6MjAw9/PDDuueee5STk6NLLrlEERERys7O1ocffqi5c+fq17/+tSRp5MiReuedd3TnnXfqtNNOU3h4uC688MI2Xys1NVX333//cY97/PHHNXXqVI0ZM0Zz5szRwYMH9eyzzyoqKqrV8x944AEtXrxY48aN0y233KLGxkY9++yzGjp0qL777rsTukdPGT58uK677jq99NJLKisr04QJE7Ru3Tq98cYbuuSSS9yD6I/l7rvv1qJFi3TBBRfo+uuv18iRI1VdXa0tW7bovffeU05OjuLi4jRx4kRdc801euaZZ7Rz506df/75cjgcWrFihSZOnKj58+frvPPOU2BgoC688EL98pe/VFVVlV5++WUlJCRo//797mu+8cYbev7553XppZcqIyNDlZWVevnllxUZGelOAIaEhGjIkCF65513NGDAAMXExOikk07SSSeddMz7ufLKK3XvvfcqODhYc+bMadWOXFlZqd69e2vmzJkaPny4wsPD9fnnn2v9+vXHTK4uWrRIlZWVuuiii464/4wzzlB8fLwWLlyoK6+8Unfffbfee+89XX755frFL36hkSNHqqSkRIsWLdKLL76o4cOHKyMjQ9HR0XrxxRcVERGhsLAwjR49Wunp6brhhhv03nvv6fzzz9cVV1yhzMxMvfnmm4d9jV5wwQX64IMPdOmll2r69OnKzs7Wiy++qCFDhqiqquq4//YAAPi9rl+AEwAAeNJrr71mSDLWr19/zOOuu+46Iyws7Ij7KisrjTvuuMNITk42AgICjP79+xuPP/644XA4Wh0nyZg3b57x5ptvGv379zeCgoKMESNGGF9++WWr4+677z5DklFYWHjEWLOzs1ttf//9942xY8caYWFhRlhYmDFo0CBj3rx5xvbt293HVFVVGVdffbURHR1tSDJSU1OPeb+pqanG9OnTj3nM0V67zz//3DjrrLOMkJAQIzIy0rjwwguNrVu3Hvb8r7/+2hg5cqQRGBho9O3b13jxxRfd9/5TbbnH66677rj3ZRiGMWHCBGPo0KHHPKahocF44IEHjPT0dCMgIMBISUkx7rnnHqO2trbVccd6nSorK4177rnH6NevnxEYGGjExcUZZ555pvHEE08Y9fX17uMaGxuNxx9/3Bg0aJARGBhoxMfHG1OnTjU2btzoPmbRokXGsGHDjODgYCMtLc149NFHjVdffbXV58OmTZuMq666yujTp48RFBRkJCQkGBdccIGxYcOGVnGtXr3a/bpLMu67777jvmY7d+40JBmSjJUrV7baV1dXZ9x9993G8OHDjYiICCMsLMwYPny48fzzzx/znBdeeKERHBxsVFdXH/WY66+/3ggICDCKiooMwzCM4uJiY/78+UavXr2MwMBAo3fv3sZ1113n3m8YhvGvf/3LGDJkiGG32w1Jxmuvvebe9+STTxq9evUygoKCjLPOOsvYsGGDMWHCBGPChAnuYxwOh/E///M/Rmpqqvtr9JNPPjni51dbXz8AAPyJxTB+UusOAABwFBaLRfPmzTusZRMAAADwFcwsAwAAAAAAAJqRLAMAAAAAAACakSwDAAAAAAAAmrEaJgAAaDNGnQIAAMDXUVkGAAAAAAAANCNZBgAAAAAAADTz2TZMh8Ohffv2KSIiQhaLxexwAAAAAAAAYBLDMFRZWank5GRZrceuHfPZZNm+ffuUkpJidhgAAAAAAADwEnl5eerdu/cxj/HZZFlERIQk54sQGRlpcjQAAAAAAAAwS0VFhVJSUtz5omPx2WSZq/UyMjKSZBkAAAAAAADaNKqLAf8AAAAAAABAM5JlAAAAAAAAQDOSZQAAAAAAAEAzn51ZBgAAAAAAOpfD4VB9fb3ZYQCSpICAANlstg6fh2QZAAAAAABot/r6emVnZ8vhcJgdCuAWHR2tpKSkNg3yPxqSZQAAAAAAoF0Mw9D+/ftls9mUkpIiq5UpTzCXYRiqqalRQUGBJKlnz54nfC6SZQAAAAAAoF0aGxtVU1Oj5ORkhYaGmh0OIEkKCQmRJBUUFCghIeGEWzJJ/QIAAAAAgHZpamqSJAUGBpocCdCaK3nb0NBwwucgWQYAAAAAAE5IR+ZCAZ3BE5+TJMsAAAAAAACAZiTLAAAAAAAATGaxWPTRRx+ZHQZ0Asmy5cuX68ILL1RycvJR/yG3bdumiy66SFFRUQoLC9Npp52m3bt3u/fX1tZq3rx5io2NVXh4uGbMmKEDBw60Osfu3bs1ffp0hYaGKiEhQXfffbcaGxvbf4cAAAAAAACHWLNmjWw2m6ZPn96u56Wlpenpp5/unKDgNdqdLKuurtbw4cP13HPPHXF/Zmamxo4dq0GDBumrr77Sd999pz/+8Y8KDg52H3PHHXfo448/1rvvvquvv/5a+/bt02WXXebe39TUpOnTp6u+vl6rV6/WG2+8oddff1333nvvCdwiAAAAAABAi1deeUW33nqrli9frn379pkdDrxMu5NlU6dO1cMPP6xLL730iPt///vfa9q0aXrsscc0YsQIZWRk6KKLLlJCQoIkqby8XK+88oqeeuopnXPOORo5cqRee+01rV69Wt98840k6bPPPtPWrVv15ptv6pRTTtHUqVP10EMP6bnnnlN9fX0HbhcAAAAAAPizqqoqvfPOO7r55ps1ffp0vf766632f/zxxzrttNMUHBysuLg4d/7j7LPPVm5uru644w5ZLBb3IPn7779fp5xySqtzPP3000pLS3N/vH79ek2ePFlxcXGKiorShAkTtGnTps68TXSAR2eWORwO/fvf/9aAAQM0ZcoUJSQkaPTo0a1aNTdu3KiGhgZNmjTJvW3QoEHq06eP1qxZI8lZDnnyyScrMTHRfcyUKVNUUVGhH374wZMhAwAAAACADjIMQzX1jaY8DMNoV6z//Oc/NWjQIA0cOFA/+9nP9Oqrr7rP8e9//1uXXnqppk2bpv/+979atmyZTj/9dEnSBx98oN69e+vBBx/U/v37tX///jZfs7KyUtddd51Wrlypb775Rv3799e0adNUWVnZrtjRNeyePFlBQYGqqqr0v//7v3r44Yf16KOPavHixbrsssv05ZdfasKECcrPz1dgYKCio6NbPTcxMVH5+fmSpPz8/FaJMtd+174jqaurU11dnfvjiooKD94ZAAAAAAA4moMNTRpy7xJTrr31wSkKDWx7euOVV17Rz372M0nS+eefr/Lycn399dc6++yz9cgjj2jWrFl64IEH3McPHz5ckhQTEyObzaaIiAglJSW1K8Zzzjmn1ccvvfSSoqOj9fXXX+uCCy5o17nQ+TxeWSZJF198se644w6dcsop+t3vfqcLLrhAL774oicvdZgFCxYoKirK/UhJSenU6wEAAAAAgO5l+/btWrduna666ipJkt1u15VXXqlXXnlFkrR582ade+65Hr/ugQMHdOONN6p///6KiopSZGSkqqqqWi2GCO/h0cqyuLg42e12DRkypNX2wYMHa+XKlZKkpKQk1dfXq6ysrFV12YEDB9yZ2aSkJK1bt67VOVyrZR4te3vPPffozjvvdH9cUVFBwgwAAADoxlbvKtKba3N1/0VDlRARfPwnADBNSIBNWx+c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97//rc8++0wLFizQk08+2aryryuQLAMAAADgFQzDaKksiwtvtS8tNkxZhdXKKa7RmSf+3g9AJ7FYLCfUCmmGsLCwdiWRBg8erNdff13V1dXuBNKqVatktVrdg+8lZ+XVwYMH3bO0vvnmG/e8rbY49dRTlZ+fL7vdrrS0tCMeExgYqKampjbH3pH7OVJ877zzjhISEhQZGXnEY9LS0rRs2TL3MP5Dbdy4UQ6HQ08++aQ7sfbPf/7zsONSUlJ000036aabbtI999yjl19+Wbfeequ7yq2j998WrIYJAAAAwCuUVNer/KBzQHh6XOuKhtTmIf+siAmgq82ePVvBwcG67rrr9P333+vLL7/UrbfeqmuuucbdsihJ9fX1mjNnjrZu3apPP/1U9913n+bPn3/ciiuXSZMmacyYMbrkkkv02WefKScnR6tXr9bvf/97bdiwQZIzGZWdna3NmzerqKhIdXV1nXY/R3peXFycLr74Yq1YsULZ2dn66quvdNttt2nPnj2SpPvvv19PPvmknnnmGe3cuVObNm3Ss88+K0nq16+fGhoa9OyzzyorK0v/93//pxdffLHVNW6//XYtWbJE2dnZ2rRpk7788ksNHjxYkpSamiqLxaJPPvlEhYWFrVbR9DSSZQAAAAC8QlaRMxHWKzpEIYG2VvtcQ/5zSJYB6GKhoaFasmSJSkpKdNppp2nmzJk699xz9Ze//KXVceeee6769++v8ePH68orr9RFF13Uahba8VgsFn366acaP368fv7zn2vAgAGaNWuWcnNz3UmsGTNm6Pzzz9fEiRMVHx+vf/zjH512P0d63vLly9WnTx9ddtllGjx4sObMmaPa2lp3pdl1112np59+Ws8//7yGDh2qCy64QDt37pTknOn21FNP6dFHH9VJJ52khQsXasGC1otCNDU1ad68eRo8eLDOP/98DRgwwD38v1evXnrggQf0u9/9TomJiZo/f367772tLIZhGJ12dhNVVFQoKipK5eXlRy0PBAAAAOA93lm/W799f4vG9Y/T/80Z3WrfV9sLdP1r6zUoKUKLbx9vUoQAXGpra5Wdna309HQFBwebHY7prr/+epWVlemjjz4yOxS/d7TPzfbkiagsAwAAAOAVWuaVHT5c+9DKMh/9ez8AwEuQLAMAAADgFTJdybL48MP29eoRIpvVotoGhwoq2z+jBwCAtmI1TAAAAABeIavIOay5b/zhlWUBNqt69whRbnGNcoqqlRhJ2xcA7/H666+bHQI8iMoyAAAAAKZraHJod3GNpCNXlklSanMrZm7zcQAAdAaSZQAAAABMl1dSo0aHoeAAq3oepWosLTZUkpTNipgAgE5EsgwAAACA6VzD/dPjwmW1Wo54TEtlGckywFuw4Aa8jcPh6PA5mFkGAAAAwHTHmlfm4qosyymiDRMwW0BAgCwWiwoLCxUfHy+L5chJbqCrGIah+vp6FRYWymq1KjAw8ITPRbIMAAAAgOlclWUZcUdPlh1aWWYYBm/OARPZbDb17t1be/bsUU5OjtnhAG6hoaHq06ePrNYTb6YkWQYAAADAdK5k2dGG+0tSSkyILBapur5JRVX1io8I6qrwABxBeHi4+vfvr4aGBrNDASQ5k7h2u73Df0whWQYAAADAdG1pwwyy25QcFaK9ZQeVW1xNsgzwAjabTTabzewwAI9iwD8AAAAAU5UfbFBRVb0kKf0YbZiH7s8pZm4ZAKBzkCwDAAAAYKqsQmdVWUJEkCKCA455bGrzkH9WxAQAdBaSZQAAAABM1TKv7NhVZZKUFktlGQCgc5EsAwAAAGCqlnllRx/u70JlGQCgs5EsAwAAAGAqd2XZceaVSVJa8zHZRdUyDKNT4wIA+CeSZQAAAABM5UqWZbShsqxPjLOyrLK2UWU1DZ0aFwDAP5EsAwAAAGCaJoeh7OK2zywLDrCpZ1SwJCmHVkwAQCcgWQYAAADANPvKDqq+0aFAm1W9e4S26Tktc8sY8g8A8DySZQAAAABMk1noHO6fGhsqm9XSpue0rIhJZRkAwPNIlgEAAAAwjXu4fxtaMF1Sm5NlVJYBADoDyTIAAAAApskqclaW9W3DcH+XtOY2TCrLAACdgWQZAAAAANO4K8vi2l9ZllNEsgwA4HntTpYtX75cF154oZKTk2WxWPTRRx8d9dibbrpJFotFTz/9dKvtJSUlmj17tiIjIxUdHa05c+aoqqqq1THfffedxo0bp+DgYKWkpOixxx5rb6gAAAAAvFxLG2bbK8tcA/5LaxpUXtPQKXEBAPxXu5Nl1dXVGj58uJ577rljHvfhhx/qm2++UXJy8mH7Zs+erR9++EFLly7VJ598ouXLl2vu3Lnu/RUVFTrvvPOUmpqqjRs36vHHH9f999+vl156qb3hAgAAAPBS1XWNyq+olSRltGNmWViQXfERQZKk3BKqywAAnmVv7xOmTp2qqVOnHvOYvXv36tZbb9WSJUs0ffr0Vvu2bdumxYsXa/369Ro1apQk6dlnn9W0adP0xBNPKDk5WQsXLlR9fb1effVVBQYGaujQodq8ebOeeuqpVkk1AAAAAN1XdnMbZUxYoKJDA9v13LTYUBVW1imnuEbDekd3QnQAAH/l8ZllDodD11xzje6++24NHTr0sP1r1qxRdHS0O1EmSZMmTZLVatXatWvdx4wfP16BgS0/MKdMmaLt27ertLT0iNetq6tTRUVFqwcAAAAA75VZ2Dzcvx3zylzcK2IytwwA4GEeT5Y9+uijstvtuu222464Pz8/XwkJCa222e12xcTEKD8/331MYmJiq2NcH7uO+akFCxYoKirK/UhJSenorQAAAADoRC3zytqfLEtvTrDlFNd4NCYAADyaLNu4caP+/Oc/6/XXX5fFYvHkqY/rnnvuUXl5ufuRl5fXpdcHAAAA0D5ZRe0f7u/iGvKfW0xlGQDAszyaLFuxYoUKCgrUp08f2e122e125ebm6q677lJaWpokKSkpSQUFBa2e19jYqJKSEiUlJbmPOXDgQKtjXB+7jvmpoKAgRUZGtnoAAAAA8F5ZHWjDTIulsgwA0Dk8miy75ppr9N1332nz5s3uR3Jysu6++24tWbJEkjRmzBiVlZVp48aN7ud98cUXcjgcGj16tPuY5cuXq6GhZRnopUuXauDAgerRo4cnQwYAAABgAsMw3AP+T6SyrE9zZVlRVZ2q6ho9GhsAwL+1ezXMqqoq7dq1y/1xdna2Nm/erJiYGPXp00exsbGtjg8ICFBSUpIGDhwoSRo8eLDOP/983XjjjXrxxRfV0NCg+fPna9asWUpOTpYkXX311XrggQc0Z84c/fa3v9X333+vP//5z/rTn/7UkXsFAAAA4CXyK2pVU98km9WiPjGh7X5+ZHCAYsMCVVxdr9ziag1NjuqEKAEA/qjdlWUbNmzQiBEjNGLECEnSnXfeqREjRujee+9t8zkWLlyoQYMG6dxzz9W0adM0duxYvfTSS+79UVFR+uyzz5Sdna2RI0fqrrvu0r333qu5c+e2N1wAAAAAXsg13L9PTKgC7SfW8NIyt4xWTACA57S7suzss8+WYRhtPj4nJ+ewbTExMXrrrbeO+bxhw4ZpxYoV7Q0PAAAAQDfQkXllLmmxYdq0u0w5DPkHAHiQR2eWAQAAAEBbZBa65pWdeLIstXnIf24RlWUAAM8hWQYAAACgy2V1YLi/S1qcsw2TyjIAgCeRLAMAAADQ5VxtmOkdaMN0V5YxswwA4EEkywAAAAB0qdqGJu0tOyipY22Yac0D/vMranWwvskjsQEAQLIMAAAAQJfKLa6RYUgRQXbFhwed8HmiQwMVFRIgSdpdQnUZAMAzSJYBAAAA6FLulTDjw2SxWDp0Lld1WXYRc8sAAJ5BsgwAAABAl/LEcH+XlrllJMsAAJ5BsgwAAABAl8p0VZZ1YLi/i6uyLIch/wAADyFZBgAAAKBLZRVSWQYA8F4kywAAAAB0GcMwWs0s66i0OGdlWS6VZQAADyFZBgAAAKDLFFfXq6K2URaLlO6RNkznOfaVH1RtQ1OHzwcAAMkyAAAAAF3G1YKZHBWi4ABbh88XExaoiCC7DEPaU0p1GQCg40iWAQAAAOgynmzBlCSLxaLU5lbMnCKSZQCAjiNZBgAAAKDLZBU5K8syPDDc38U15D+HIf8AAA8gWQYAAACgy3i6skyS0mIZ8g8A8BySZQAAAAC6jGtmWd84KssAAN6JZBkAAACALtHQ5NDuEmf1l2cry5znorIMAOAJJMsAAAAAdIndJTVqdBgKCbApKTLYY+d1tWHuKa1RfaPDY+cFAPgnkmUAAAAAuoSrBTM9LkxWq8Vj542PCFJIgE0OQ9pbdtBj5wUA+CeSZQAAAAC6RGcM95cki8Wi1ObqMuaWAQA6imQZAAAAgC7hHu4f77nh/i7uuWVFJMsAAB1DsgwAAABAl8gqclaWZXi4skySUuNclWUM+QcAdAzJMgAAAABdwl1ZFtd5lWW0YQIAOopkGQAAAIBOV17ToOLqeklSemdUljXPLMulsgwA0EEkywAAAAB0uszmFszEyCCFB9k9fn5XZVleSY0amxwePz8AwH+QLAMAAADQ6TqzBVOSkiKDFWi3qtFhaF9ZbadcAwDgH0iWAQAAAOh0WYXOyrK+ndCCKUlWq0WpMa4h/8wtAwCcOJJlAAAAADqdu7IsvnMqyyQpLc6ZiMslWQYA6ACSZQAAAAA6XVZR51aWSVJarKuyjCH/AIATR7IMAAAAQKdqchjuBFZGJ80sk6TUWCrLAAAdR7IMAAAAQKfaW3pQ9Y0OBdqt6tUjpNOu41oRk8oyAEBHkCwDAAAA0Kkym1sw02JDZbNaOu06qc1tmLuLa9TkMDrtOgAA30ayDAAAAECncg/378QWTElKjg5RgM2i+iaH8itqO/VaAADfRbIMAAAAQKfKKuz84f6SZLNalBLjrC7LLWJuGQDgxJAsAwAAANCp3JVl8Z1bWSYxtwwA0HEkywAAAAB0qqyirqksk1rmlrEiJgDgRJEsAwAAANBpquoadaCiTpKU0ckzy6RDK8tIlgEATgzJMgAAAACdJru5BTM2LFBRoQGdfr2WyjLaMAEAJ4ZkGQAAAIBO05UtmFLryjKHw+iSawIAfAvJMgAAAACdJtM13L8LWjAlqVePENmsFtU2OFRQWdcl1wQA+BaSZQAAAAA6TVZh11aWBdis6t0jRBJzywAAJ4ZkGQAAAIBOk+WqLIvvmsoySUptbsVkRUwAwIlod7Js+fLluvDCC5WcnCyLxaKPPvrIva+hoUG//e1vdfLJJyssLEzJycm69tprtW/fvlbnKCkp0ezZsxUZGano6GjNmTNHVVVVrY757rvvNG7cOAUHByslJUWPPfbYid0hAAAAAFM4HIayi1zJsq6pLJOktOYh/zkM+QcAnIB2J8uqq6s1fPhwPffcc4ftq6mp0aZNm/THP/5RmzZt0gcffKDt27froosuanXc7Nmz9cMPP2jp0qX65JNPtHz5cs2dO9e9v6KiQuedd55SU1O1ceNGPf7447r//vv10ksvncAtAgAAADBDfkWtDjY0yW61qE9MaJddN43KMgBAB9jb+4SpU6dq6tSpR9wXFRWlpUuXttr2l7/8Raeffrp2796tPn36aNu2bVq8eLHWr1+vUaNGSZKeffZZTZs2TU888YSSk5O1cOFC1dfX69VXX1VgYKCGDh2qzZs366mnnmqVVAMAAADgvVwtmH1iQhVg67oJMGlxzZVlRVSWAQDar9N/YpWXl8tisSg6OlqStGbNGkVHR7sTZZI0adIkWa1WrV271n3M+PHjFRgY6D5mypQp2r59u0pLS494nbq6OlVUVLR6AAAAADBPVlHXDvd3OXRmmWEYXXptAED316nJstraWv32t7/VVVddpcjISElSfn6+EhISWh1nt9sVExOj/Px89zGJiYmtjnF97DrmpxYsWKCoqCj3IyUlxdO3AwAAAKAdzBjuL0m9e4TIapGq65tUVFXfpdcGAHR/nZYsa2ho0BVXXCHDMPTCCy901mXc7rnnHpWXl7sfeXl5nX5NAAAAAEeXWdhcWRbXtZVlQXabkqNDJDG3DADQfp2SLHMlynJzc7V06VJ3VZkkJSUlqaCgoNXxjY2NKikpUVJSkvuYAwcOtDrG9bHrmJ8KCgpSZGRkqwcAAAAA85hVWSa1DPlnRUwAQHt5PFnmSpTt3LlTn3/+uWJjY1vtHzNmjMrKyrRx40b3ti+++EIOh0OjR492H7N8+XI1NDS4j1m6dKkGDhyoHj16eDpkAAAAAB5W29CkfeUHJXX9zDJJSo11DvmnsgwA0F7tTpZVVVVp8+bN2rx5syQpOztbmzdv1u7du9XQ0KCZM2dqw4YNWrhwoZqampSfn6/8/HzV1ztnBQwePFjnn3++brzxRq1bt06rVq3S/PnzNWvWLCUnJ0uSrr76agUGBmrOnDn64Ycf9M477+jPf/6z7rzzTs/dOQAAAIBOk11ULcOQIoPtig0LPP4TPIzKMgDAibK39wkbNmzQxIkT3R+7EljXXXed7r//fi1atEiSdMopp7R63pdffqmzzz5bkrRw4ULNnz9f5557rqxWq2bMmKFnnnnGfWxUVJQ+++wzzZs3TyNHjlRcXJzuvfdezZ07t73hAgAAADDBoS2YFouly69PZRkA4ES1O1l29tlnH3P55bYszRwTE6O33nrrmMcMGzZMK1asaG94AAAAALxAdlHzcH8TWjAlKa15UQFnhZthSsIOANA9ddpqmAAAAAD8l6uyLMOE4f6S1CfGWVlWWduospqG4xwNAEALkmUAAAAAPC6zyJksS48zp7IsOMCmnlHBkqQcWjEBAO1AsgwAAACARxmGoaxCc9swpZa5ZSTLAADtQbIMAAAAgEcVVdWrsrZRFkvLqpRmcK+IWcSKmACAtiNZBgAAAMCjXFVlvaJDFBxgMy2O1OZkGStiAgDag2QZAAAAAI/Kap5X1tek4f4uae42TCrLAABtR7IMAAAAgEe555WZNNzfhcoyAMCJIFkGAAAAwKOyCp3JqQwTh/tLUlqcs7KstKZB5TUNpsYCAOg+SJYBAAAA8ChvacMMDbQrISJIkpRbQnUZAKBtSJYBAAAA8Jj6Rod2lzhnhPU1ubJMOmRFTOaWAQDaiGQZAAAAAI/ZXVKjJoeh0ECbkiKDzQ5Hqc1D/nOLqCwDALQNyTIAAAAAHuMa7p8eFyaLxWJyNFJaHJVlAID2IVkGAAAAwGO8ZV6Zi7uyjBUxAQBtRLIMAAAAgMe4Ksv6xpk/r0xiZhkAoP1IlgEAAADwmKxCV2WZdyTL+jRXlhVV1amqrtHkaAAA3QHJMgAAAAAe42rDzPCSNszI4ADFhgVKohUTANA2JMsAAAAAeERZTb1KquslOQf8e4uWuWW0YgIAjo9kGQAAAACPyGxuwUyKDFZYkN3kaFq0zC2jsgwAcHwkywAAAAB4hHu4v5fMK3NJbU6W5RZRWQYAOD6SZQAAAAA8wjWvzNuSZWlxzjbMbCrLAABtQLIMAAAAgEe4K8vivGO4v4u7soxkGQCgDUiWAQAAAPCIrEIvrSxrHvB/oKJONfWNJkcDAPB2JMsAAAAAdFiTw3CvNpkR712VZdGhgYoKCZAk7S5hbhkA4NhIlgEAAADosD2lNapvcijQblVydIjZ4RzGVV2Ww5B/AMBxkCwDAAAA0GGuFsz02DDZrBaTozlcWhxzywAAbUOyDAAAAECHZbqG+3vZvDIX15D/nGIqywAAx0ayDAAAAECHZRV553B/F1cbJpVlAIDjIVkGAAAAoMOyXJVlcd413N/FVVmWS2UZAOA4SJYBAAAA6DDXzDJvryzbV35QtQ1NJkcDAPBmJMsAAAAAdEhlbYMKKuskSX3jvbOyLCYsUBFBdhmGc+VOAACOhmQZAAAAgA7Jbp5XFhceqKiQAJOjOTKLxaLUOGd1WU4RyTIAwNGRLAMAAADQIe4WTC+dV+bSsiImQ/4BAEdHsgwAAABAh7iH+3vpvDKXlhUxqSwDABwdyTIAAAAAHZJZ5N3D/V2oLAMAtAXJMgAAAAAd0l3aMNOak2VUlgEAjoVkGQAAAIAT5nAYyi7qXm2Ye0prVN/oMDkaAIC3IlkGAAAA4ITtr6hVbYNDdqtFKTGhZodzTPERQQoJsMlhOBNmAAAcCckyAAAAACfMNdy/T2yoAmze/fbCYrEolSH/AIDj8O6fZgAAAAC8WneZV+aSxpB/AMBxkCwDAAAAcMJclWUZXj6vzCU1jsoyAMCxkSwDAAAAcMKyipory7pJsiydyjIAwHGQLAMAAABwwtxtmPHdow0ztTlZRmUZAOBo2p0sW758uS688EIlJyfLYrHoo48+arXfMAzde++96tmzp0JCQjRp0iTt3Lmz1TElJSWaPXu2IiMjFR0drTlz5qiqqqrVMd99953GjRun4OBgpaSk6LHHHmv/3QEAAADoNAfrm7S37KAkqW9c96gsS2tuw8wrqVFjk8PkaAAA3qjdybLq6moNHz5czz333BH3P/bYY3rmmWf04osvau3atQoLC9OUKVNUW1vrPmb27Nn64YcftHTpUn3yySdavny55s6d695fUVGh8847T6mpqdq4caMef/xx3X///XrppZdO4BYBAAAAdIbs5hbMqJAAxYQFmhxN2yRGBCvIblWjw9C+strjPwEA4Hfs7X3C1KlTNXXq1CPuMwxDTz/9tP7whz/o4osvliT9/e9/V2Jioj766CPNmjVL27Zt0+LFi7V+/XqNGjVKkvTss89q2rRpeuKJJ5ScnKyFCxeqvr5er776qgIDAzV06FBt3rxZTz31VKukGgAAAADzZBU5u0P6xofJYrGYHE3bWK0WpcaGaseBKuUUV6tPbKjZIQEAvIxHZ5ZlZ2crPz9fkyZNcm+LiorS6NGjtWbNGknSmjVrFB0d7U6USdKkSZNktVq1du1a9zHjx49XYGDLX6emTJmi7du3q7S01JMhAwAAADhB7nllcd1jXplLy9wyhvwDAA7X7sqyY8nPz5ckJSYmttqemJjo3pefn6+EhITWQdjtiomJaXVMenr6Yedw7evRo8dh166rq1NdXZ3744qKig7eDQAAAIBjySpsqSzrTtKaq8lyGPIPADgCn1kNc8GCBYqKinI/UlJSzA4JAAAA8GlZzTPLMrpZsozKMgDAsXg0WZaUlCRJOnDgQKvtBw4ccO9LSkpSQUFBq/2NjY0qKSlpdcyRznHoNX7qnnvuUXl5ufuRl5fX8RsCAAAAcESGYSjb1YYZ373aMNOak2VUlgEAjsSjybL09HQlJSVp2bJl7m0VFRVau3atxowZI0kaM2aMysrKtHHjRvcxX3zxhRwOh0aPHu0+Zvny5WpoaHAfs3TpUg0cOPCILZiSFBQUpMjIyFYPAAAAAJ2jsKpOlXWNslqk1G42JN8V7+7iGjU5DJOjAQB4m3Yny6qqqrR582Zt3rxZknOo/+bNm7V7925ZLBbdfvvtevjhh7Vo0SJt2bJF1157rZKTk3XJJZdIkgYPHqzzzz9fN954o9atW6dVq1Zp/vz5mjVrlpKTkyVJV199tQIDAzVnzhz98MMPeuedd/TnP/9Zd955p8duHAAAAMCJcw33790jVEF2m8nRtE9ydIgCbBbVNzmUX1FrdjgAAC/T7gH/GzZs0MSJE90fuxJY1113nV5//XX95je/UXV1tebOnauysjKNHTtWixcvVnBwsPs5Cxcu1Pz583XuuefKarVqxowZeuaZZ9z7o6Ki9Nlnn2nevHkaOXKk4uLidO+992ru3LkduVcAAAAAHuJeCbObzSuTJJvVopSYUGUVViu3qFq9okPMDgkA4EUshmH4ZN1xRUWFoqKiVF5eTksmAAAA4GEPf7JVf1uZrZ+flab7Lhxqdjjt9ovX1+uLHwv0yKUnafboVLPDAQB0svbkiXxmNUwAAAAAXce1EmZ3G+7v4ppblsuQfwDAT5AsAwAAANBuWYVVkqSMuO7XhikdsiJmc9IPAAAXkmUAAAAA2qW+0aG80oOSqCwDAPgekmUAAAAA2mV3SbWaHIbCAm1KjAwyO5wT4qosyy2plsPhk2OcAQAniGQZAAAAgHbJbF4JMz0+TBaLxeRoTkzvHiGyWy2qbXCooLLO7HAAAF6EZBkAAACAdslqTpb1jeueLZiSZLdZ1btHiCQpp5i5ZQCAFiTLAAAAALSLa7h/3/juOdzfJdXVikmyDABwCJJlAAAAANolq3kFye463N8lrXnIfw5D/gEAhyBZBgAAAKBd3JVlcVSWAQB8D8kyAAAAAG1WWl2v0poGSd2/DTMtrrmyrIjKMgBAC5JlAADA72zZU67nvtyl0up6s0MBup2sImdVWc+oYIUG2k2OpmMOrSwzDMPkaAAA3qJ7/3QDAABoI8MwtC67RM99lanlOwolSZmFVXrqilPMDQzoZjJdK2F286oySerdI0RWi1Rd36SiqnrFRwSZHRIAwAtQWQYAAHyaYRj68scCXf7iGl350jdavqNQFotz36db9quytsHcAIFuJsuVLIvr3sP9JSnIblNydIgk5pYBAFqQLAMAAD6pyWHok+/2adozK/Xz19drQ26pAm1WzR7dR1//eqIy4sNU2+DQp1v2mx0q0K24h/v7QGWZJKU1t2KyIiYAwIU2TAAA4FPqGx36aPNevfhVprKKnJUioYE2/eyMVN0wNl0JkcGSpJkjU/To4h/17oY9uvK0PmaGDHQrrq+rvvHdv7JMklJjQ7VyF5VlAIAWJMsAAIBPOFjfpHfW79ZLy7O0r7xWkhQVEqCfn5Wm68akqUdYYKvjLzu1lx5f8qM25JYqq7DKZ974A52pscnhTir1jaOyDADgm0iWAQCAbq2itkH/tyZXr67MVnHz6pbxEUGaO66vrhrdR+FBR/51JzEyWBMGxOvL7YV6b+Me/eb8QV0ZNtAt7Sk9qIYmQ0F2q3o1z/rq7lJjQyVJOUVUlgEAnEiWAQCAbqmoqk6vrcrW31fnqrKuUZKUEhOimyZkaMapvRUcYDvuOS4flaIvtxfqg017ddd5A2WzWjo7bKBbyypyzitLjwuT1Ue+XtLiXJVl1TIMQxaLb9wXAODEkSwD0OkcDkP3LfpB0aEBuuu8gWaHA6Cb21d2UC8tz9Lb63ertsEhSeqfEK5bJmbowmHJstvavn7RuYMTFB0aoPyKWq3YWaizByZ0VtiAT3CvhOkjw/0lqU+Ms7KssrZRpTUNivlJyzYAwP+QLAPQ6b7bW67/+yZXknTV6X3cS7QDQHtkFVbpxa8z9eF/96qhyZAkDesdpXkT+2ny4MQTqnIJstt0ySm99PrqHL27cQ/JMuA4Ml3JsjjfmfEXHGBTz6hg7S+vVU5xNckyAADJMgCdb9WuIvf/r9hZyKpzANpl674KPf/VLn26Zb8czhyZxvSN1byJ/XRWv9gOt0zNHNlbr6/O0dIfDqi8pkFRoQEeiBrwTVmFzjZMX6osk5xzy/aX1yq3uFqn9ulhdjgAAJORLAPQ6VbubEmWLd9RRLIMQJtszC3Rc19m6osfC9zbJg1O0M1n99PIVM+9mR2aHKlBSRH6Mb9Si77dq2vGpHns3ICvySpytWH6TmWZ5JzB9k1WiXKKWBETAECyDEAnO1jfpI25pe6PV+4qUpPDYIg2gCMyDEMrdhbpuS93aW12iSTJapEuGJasm8/O0OCekR6/psVi0eWjUvTQJ1v17sY9JMuAo6isbVBhZZ0kX6wsc95PbjErYgIASJYB6GTrckpU3+RQUmSwauobVX6wQd/uKaPFAUArDoehz7bm67kvM7Vlb7kkKcBm0YxTe+uXEzKUHte5b8wvOSVZCz7dpu/2lGt7fqUGJkV06vWA7sg13D8uPEiRwb7VrpwW6xzyn1NMZRkAgGQZgE7mmlc2rn+cquoa9Z/v87V8RyHJMgCSpIYmhxZt3qcXvs7UrgLnLKTgAKuuPj1VN45PV8+orlkQJDY8SOcOTtCSHw7o3Q15+sMFQ7rkukB3klXkm/PKJCrLAACtkSwD0Klc88rG9o9TTX2TO1l2+6QBJkcGwEy1DU16d+Me/fXrTO0pPShJigi26/oz03T9mWmKDQ/q8pguH5miJT8c0Eeb9+q3UwcpwGbt8hgAb+aqLMvwyWSZs7KstKaBhT4AACTLAHSe4qo6bd1fIUk6MyNO9U0OSdLmvDKVH2xQVAi/iAL+pqquUQu/ydXLK7JVVOWcfRQXHqg5Y/vqZ2f0UYSJrV0TBsYrLjxIRVV1+mp7oSYPSTQtFsAbuZJlfeN8a7i/JIUG2pUQEaSCyjrlllRrWGi02SEBAExEsgxAp1mVWSxJGpQUofgIZ5VIRnyYMgurtXpXkaae3NPM8AB0odLqer22Okevr8pWRW2jJKlXdIh+OaGvrhiVouAAm8kRSgE2qy4dkayXV2Tr3Q15JMuAn8gs9N02TElKiw1TQWWdcoprNKx3tNnhAABMRLIMQKdZ5WrB7Bfn3jZ+QLwyC6u1fGchyTLAD+SX1+pvK7L01rrdqqlvkuR8o33zhAxdMqKX17U6Xj4qRS+vyNYXPxaoqKpOcSa0gwLeyOEwlNM8z6tvvO9VlknOVsx1OSXKLWJuGQD4O5JlADqFYRha2Tzc/6z+rZNlr63K0fIdRTIMQxaLxawQAXSi3OJqvfh1lt7fuMfdgj00OVLzJvbTlKFJslm982t/QGKEhveO0rd7yvXRf/fqhnF9zQ4J8Ar7yg+qtsGhAJtFKT26ZuGNrpbWvOouK2ICAEiWAegUucU12lt2UAE2i0anx7i3n5Eeq0C7VXvLDiqzsFr9Enzzr9OAv9qeX6nnv9qlj7/dJ4fh3HZ6WoxumZihCQPiu0WCfOaoFH27p1zvbdyjOWPTu0XMQGdzzSvrExMqu5dVhHqKa8g/K2ICAEiWAegUK5qryk7t00OhgS3fakICbTo9LUYrdxVp+Y5CkmWAj/jv7lI9/1Wmlm494N529sB43XJ2P51+SMK8O7hoWLIe+mSrfsyv1Pd7K3Ry7yizQwJMl+WeV+a7P7fTYqksAwA4kSwD0CmONK/MZfyAOGeybGehfjE2vatDA+AhhmFoTWaxnvtql1btci7oYbFIU09K0i1n99NJvbpnkikqNEBThibp42/36d2NeSTLAElZRa55Zb453F+S+jRXlhVV1amqrlHhQbxVAgB/xU8AAB7X5DC0OvPweWUu4/rHS/pR32QVq7ahyStWwQPQdg6HoWU/Fui5L3dpc16ZJMluteiSEb1004QMn6gYnTmytz7+dp/+tXmffj99sILsfJ+Cf3O1YWbEdf+v76OJDA5QbFigiqvrlVNU3W0T/gCAjiNZBsDjvt9broraRkUE2zXsCL9oDkqKUEJEkAoq67Qhp1Rjj5BQA+B9Gpsc+veW/Xr+y0xtP1ApSQqyWzXrtBTdOL6vevcINTlCzxnbL049o4K1v7xWn28t0PRhrN4L/9bShum7lWWSc25ZcXW9cotrSJYBgB/zzemcAEzlWgVzTN/YIw4BtlgszdVl0vKdhV0aG4D2q2ts0ltrd+ucJ7/Wr97erO0HKhUeZNfNZ2do5W/P0QMXn+RTiTJJslktuuzUXpKkdzfmmRwNYK6a+kbtK6+V5Nszy6RD55Yx5B8A/BmVZQA8bqVrXtkxKsbGD4jT+5v2aPmOQv2/aYO7KjQA7VBd16h/rNutl1dk6UBFnSQpJixQvzgrTdeMSVNUSIDJEXaumSNT9NyXmVq+o1D55bVKigo2OyTAFNnN88qiQwMUExZocjSdK7U5WcaKmADg30iWAfCog/VN2phbKkk66wjD/V3G9Y+XxSL9mF+pgopaJUTyJhTwFuU1DXpjTY5eW5Wt0poGSVJSZLDmju+rWaentFrh1pelx4XptLQeWp9Tqg/+u0e3nN3P7JAAU7jmlfWN8+0WTElKi3NWybIiJgD4N//4bRdAl1mfU6L6JoeSo4KP+Ut1TFigTu4Vpe/2lGv5ziLNHNm7C6MEcCSGYejPy3bq5eVZqq5vkuSc33PzhAxdemovvxxyf/nIFK3PKdV7G/bo5gkZslgsZocEdDl3sszHWzClljZMKssAwL8xswyAR61qnld2Vr+4476pHO+aW7aDuWWAN/hye4Ge/nynquubNCgpQs9cNULL7pygWaf38ctEmSRNG9ZTIQE2ZRVVa9PuMrPDAUyRVeQfw/2llmTZgYo61dQ3mhwNAMAsJMsAeNSKNswrcxk/wJksW7mrSA6H0alxATi+Jd8fkCRdPrK3/vOrcbpoePIRF+nwJ+FBdk09OUmS9B6D/uGnWtowfb+yLCo0QNGhznmMu0toxQQAf+XfvwED8Kjiqjpt3V8hSToz4/jJshF9ohUeZFdJdb2+31fe2eEBOAaHw9CyH53JsotOSabd8BCXj0yRJH387X4dbG5PBfyFYRjKKnRWlmX4QWWZ1DLkP6eIZBkA+CuSZQA8ZnVmsSRpUFKE4iOCjnt8gM2qMzNiJdGKCZjtv3llKqqqV0SQXaPTY80Ox6uMTo9RSkyIquoatfiH/WaHA3Spgso6Vdc3yWqR+sSGmh1Ol0hrvk/mlgGA//J4sqypqUl//OMflZ6erpCQEGVkZOihhx6SYbS0WBmGoXvvvVc9e/ZUSEiIJk2apJ07d7Y6T0lJiWbPnq3IyEhFR0drzpw5qqqq8nS4ADzINa9s7DFWwfypcQNcc8uKOiUmAG3z+TZnVdmEgfEKtPO3tENZrRbNPNVZXfbuhj0mRwN0LVcLZkpMqN/MLnRXlrEiJgD4LY//Nvzoo4/qhRde0F/+8hdt27ZNjz76qB577DE9++yz7mMee+wxPfPMM3rxxRe1du1ahYWFacqUKaqtrXUfM3v2bP3www9aunSpPvnkEy1fvlxz5871dLgAPMQwDPe8srPaMK/MZULzkP9Nu0tVWdvQKbEBOL7PtzqTZZOHJJociXeaMbKXJGcFbR5zjOBH3MP9j7HCta+hsgwA4PFk2erVq3XxxRdr+vTpSktL08yZM3Xeeedp3bp1kpxvqJ9++mn94Q9/0MUXX6xhw4bp73//u/bt26ePPvpIkrRt2zYtXrxYf/vb3zR69GiNHTtWzz77rN5++23t27fP0yED8IDc4hrtLTuoAJtFp6fFtPl5fWJDlRYbqkaHoTXNbZwAulZOUbV2FlTJbrXo7AEJZofjlXr3CHW3jb+/ieoy+A/3cP943x/u7+KqLMulsgwA/JbHk2Vnnnmmli1bph07dkiSvv32W61cuVJTp06VJGVnZys/P1+TJk1yPycqKkqjR4/WmjVrJElr1qxRdHS0Ro0a5T5m0qRJslqtWrt27RGvW1dXp4qKilYPAF1nZXML5og+PRQWZG/Xc12rYi7fydwywAyuFszT02MU1bwKHA53+ajekpzJMlbwhb9wDffv6yfD/aWWyrJ95QdV28CiHgDgjzyeLPvd736nWbNmadCgQQoICNCIESN0++23a/bs2ZKk/Px8SVJiYus2j8TERPe+/Px8JSS0/su23W5XTEyM+5ifWrBggaKiotyPlJQUT98agGNwzSsb1455ZS7j+zO3DDDTZ7Rgtsn5Q3sqIsiuvJKDWptdYnY4QJfIKmquLIvzn8qymLBARQTZZRjSnlKqywDAH3k8WfbPf/5TCxcu1FtvvaVNmzbpjTfe0BNPPKE33njD05dq5Z577lF5ebn7kZeX16nXA9CiyWG4V8Jsz7wylzEZsQqwWbS7pEY5RcwHAbpSaXW9NuQ4Ez+TBpMsO5aQQJsuGN5TkvTuRn7PgO+ra2xyz+jL8KPKMovFotQ4Z3VZThHJMgDwRx5Plt19993u6rKTTz5Z11xzje644w4tWLBAkpSUlCRJOnDgQKvnHThwwL0vKSlJBQUFrfY3NjaqpKTEfcxPBQUFKTIystUDQNf4fm+5yg82KCLIrmG9otr9/LAgu0am9pBEKybQ1b7cXiCHIQ1KilBKTKjZ4Xi9mSOdlev/2ZKvqrpGk6MBOtfu4ho5DCk8yK74iCCzw+lSLSti8kc8APBHHk+W1dTUyGptfVqbzSaHwyFJSk9PV1JSkpYtW+beX1FRobVr12rMmDGSpDFjxqisrEwbN250H/PFF1/I4XBo9OjRng4ZQAe55pWdkREru+3Evq2455btIFkGdKWltGC2y6l9otU3PkwHG5r07+9YdAi+LbN5uH96XJgsFovJ0XQt19wykmUA4J88niy78MIL9cgjj+jf//63cnJy9OGHH+qpp57SpZdeKslZ1nz77bfr4Ycf1qJFi7RlyxZde+21Sk5O1iWXXCJJGjx4sM4//3zdeOONWrdunVatWqX58+dr1qxZSk5O9nTIADrIPa/sBFowXVxzy9ZkFqu+0eGRuAAcW21Dk75uTlDTgtk2FotFlzdXl727gVUx4duyivxvuL8LK2ICgH/zeLLs2Wef1cyZM3XLLbdo8ODB+vWvf61f/vKXeuihh9zH/OY3v9Gtt96quXPn6rTTTlNVVZUWL16s4OBg9zELFy7UoEGDdO6552ratGkaO3asXnrpJU+HC6CDDtY3aUNOqSTprBMY7u8ypGekYsMCVV3fpI25pZ4KD8AxrMkqVk19kxIjg3TyCbRQ+6vLTu0lq0XakFvqXikQ8EVZhf433N8ljTZMAPBrdk+fMCIiQk8//bSefvrpox5jsVj04IMP6sEHHzzqMTExMXrrrbc8HR4AD1ufU6L6Jod6RgWrb9yJ/+XZarVoXP84fbR5n5bvLNSYjFgPRgngSD5vbsE8d3CirFb/arHqiMTIYI0fEK+vthfq/U17dPeUQWaHBHQKVzLYHyvLXG2Ye0sPqr7RoUC7x2sMAABejO/6ADrE1YJ5Vr+4Ds8zYW4Z0HUMw9Dn25hXdqJcrZjvb9yrJodhcjRA58hqXqHaH5Nl8RFBCg20yWFIe0ppxQQAf0OyDECHrPTAvDKXcc1zy37YV6GiqroOnw/A0W3ZW64DFXUKDbRpTF8qOdtr0pAERYcGKL+i1v19EPAlJdX1KqtpkOQc8O9vLBYLc8sAwI+RLANwwkqq6/XDvgpJ0pkZHU+WxUcEaUjPSEnSyp28+QQ6k6sFc3z/eAUH2EyOpvsJstt08XDnokPvbsgzORrA81wtmMlRwQoN9Pjklm6BFTEBwH+RLANwwlwtmIOSIhQfEeSRc9KKCXSNpdsKJNGC2RGXj3K2Yn629YDKmytwAF/hHu4f73/D/V2oLAMA/0WyDMAJO3RemaeMH+A81/KdRXIwBwjoFHklNdq2v0JWizRxUILZ4XRbQ5MjNSgpQvWNDi36dq/Z4QAelVnkv8P9XagsAwD/RbIMwAkxDEMrmlslx3pgXpnLqNQYhQbaVFRVp235FR47L4AWy5oH+49Ki1FMWKDJ0XRfFotFM0f2liS9t3GPydEAnuWuLPPDeWUuVJYBgP8iWQbghOwuqdHesoMKsFl0elqMx84baLe6h40v38HcMqAzLHWtgjmYFsyOunREL9mtFn27p1w7DlSaHQ7gMa6ZZf7chpkW56wsyyupUWOTw+RoAABdyT+ndQLoMFdV2Yg+PRQW5NlvJeMHxGvZjwVavqNQN5+d4dFzA/6u/GCD1maVSJImMa+sw2LDg3TOoAR9tvWA3t2Qp99PH2J2SECHNTY5tLvEWU3lDW2YhnHIWAbjxLafyDl6WK0KdRiqr29S7p4KpcSGeiSWo21vqm9SbXlth85xwnF0wfU687Xz1HZviqVN270pFh+P/dBt+zfsV1RqlNfFeCLb23JMz1E9NfrW0fI3JMt8nFd+U/OCbwpeGUsbtntTLGs/26W4/dU6IyVWe9fv9WjsA0trlZhXqdy9VdqekdBqpT5v/9wwHIZKs0oVFBXU+TF6OHaztntTLD4fu+FsJzo9s0iRwQHaUrxMW9p4DrPvw/TX7hjbh1bWydhbrn0f7NL/PbNJFov3xcj3EO/c7k2xHLrdMKQrG5pkkfT3Z781JXZvcWXzf9/8039NjQMAzFJfXe+XyTKL0eonlO+oqKhQVFSUysvLFRkZaXY4HZa3Ok+vjX/N+UE3+gUDAAAAQNsFRwfLYrNIcs5GdP5Py373Ni/e7k2x+Hzs3hSLr8fu+q8hleeWK/m05A6dzytfzyNsi+kfo0EXD5IvaE+eiMqybsIwDBlNZMM6zAe+SXtDLA0Ohwor62W1SEnRIS2HeTD2oqp6VdY1KDI4QHHhQd3qB3jjwUZVF1QreVTbfoB2dXxmfL51h8/r7vw12dbtTQ5Dz3+VqbrGJl09uo969Qj1uhiPud2bYvnJ9kXf7tPXOwp1UnKUfjEu3Stj9NXP624fuzfF0rz97XW79dyXmZo4KEEPXXJSt4r9WNtP5ByP/mebXludo+vOTNc90wZ1fewAAFOQLOsmep3WS3fuu9P9sTf94uH12+Fxz3+1S88v3q7JQxL16LWjOuUai7/P101vblTfuDB98euzO+UagL9ZubNI62uqFBceqMv/3yTZrHyv9JSQ/Ay9+vRy5Vot+uOlg5xJfqCb2v3fPFVFByltSLyi06LNDsdUab2i1BRg0+6qWgWEBJgdDgCgi5As6yZsgTZF9IwwOwxAkvMNtySN7RfXadc4s1+sbFaLsoqqlVdSo5SY0OM/CcAxfd68CuY5gxJIlHnYwKQIDesdpe/2lOtfm/dpzth0s0MCTlhmYbUk7xjub7a0WOdrkF1UbXIkAICuZDU7AADdy8H6Jm3IKZUkndWJybLI4ACd2idakrR8Z2GnXQfwF4ZhaOlWZ7Js8pAkk6PxTZeP7C1JendDnnx0JCz8RJYrWRYXbnIk5kuNdf6xLq/koJocfF0DgL8gWQagXTbklqi+yaGeUcHK6OS/OI/vHy9JWr6DZBnQUdv2V2pv2UEF2a2dWhXqzy4a3kuBdqt+zK/UD/sqzA4HOCEVtQ0qqqqTRGWZJCVHhyjAZlF9k0P7yw+aHQ4AoIuQLAPQLit3OVswz+oX1+mz4cYPcCbLVu8qVkOTo1OvBfg6VwvmuP5xCgm0mRyNb4oKDdB5QxIlOavLgO7IVVUWHxGkiGBmdNmsFvcoiNziGpOjAQB0FZJlANqlK+aVuZzUK0o9QgNUWdeozXllnX49wJe1tGAmmhyJb5vZ3Ir5r2/3qa6xyeRogPbLKqySJPWNo6rMxTW3LKeYuWUA4C9IlgFos5Lqendr0Zn9Yjv9ejarxT0XjVZM4MTtLz+oLXvLZbFI5wwiWdaZxvWPV1JksMpqGvT51gKzwwHazT2vLJ55ZS6uZBmVZQDgP0iWAWiz1ZnOqrJBSRFKiAjukmu6WjFJlgEnbtk2Z9JmREq04iOCTI7Gt9msFl12ai9J0nsbacVE95NV5Kws6+y5pN1JWpyzDTOHFTEBwG+QLAPQZqsOmVfWVVxD/r/bW66S6vouuy7gS1wtmJNowewSrlbMr3cU6kBFrcnRAO3TUllGsswllcoyAPA7JMsAtIlhGFrRhfPKXJKigjUwMUKG0bK4AIC2q6pr1JrMYknS5MEky7pC3/hwjUrtIYchfbBpr9nhAG3mcBjKbq6e6htHG6ZLWmzzgP+SajkchsnRAAC6AskyAG2yu6RGe0oPKsBm0enpMV167fEDnMm5FbRiAu22fEeh6pscSosNVb8E3vx2lctHOavL3t2YJ8PgzTW6h71lB1XX6FCAzaLePULMDsdr9IoOkd1qUW2DQwWVdWaHAwDoAiTLALSJq6prRJ8eCguyd+m13XPLdhbyphNop89dLZiDE2WxWEyOxn9MH5askACbsgqrtWl3mdnhAG2S1VxVlhobJruNtwkudpvVnTxkRUwA8A/8FATQJq55ZV3ZgulyWlqMggOsOlBRpx0Hqrr8+kB31djk0BfbncP9JzOvrEuFB9k19aQkSQz6R/eRVej8Gds3jnllP9Uyt4xkGQD4A5JlAI6ryWFo1S7nzKOuHO7vEhxg0+j0WEmsigm0x4bcUpXVNCg6NEAjU3uYHY7fmdncivnxt/t1sL7J5GiA42sZ7k/L9k+55pblMOQfAPwCyTIAx/XDvnKVH2xQRJBdw3tHmRLDoa2YANrG1YJ5zsAEWqpMcEZ6rHr3CFFVXaOW/JBvdjjAcWUVNVeWsRLmYagsAwD/wm/OAI7LNa/sjIxY095wT2ge8r82u4QKDaANDMPQ0m3OZBktmOawWi2aObJl0D/g7VyVZRkkyw6TFtdcWVZEZRkA+AOSZQCOy8x5ZS4Z8eHqGRWs+kaH1mYXmxYH0F3sKqhSbnGNAm1WjWuuzETXm3GqM1m2OrNYe0p5kw3vVVPfqP3ltZKkvnG0Yf7UoZVlLDYEAL6PZBmAY6ptaNL6nFJJ5swrc7FYLBrfv7kVc0eRaXEA3YWrquzMfrEK7+IVbNEiJSZUZ2bEyjCk9zfuNTsc4KhcVWU9QgPUIyzQ5Gi8T+8eIbJapOr6JhVV1ZsdDgCgk5EsA3BM63NKVN/oUFJksOltGcwtA9puafO8skmDacE0m6sV871NeXI4qEiBd8oqYrj/sQTZbUqODpEk5TC3DAB8HskyAMfkmlc2tn+cLBaLqbGM7Rcnq8XZXrav7KCpsQDerKCyVpvzyiSRLPMGU0/qqfAgu/JKDmptdonZ4QBHlFXYPNw/jnllR5PW3IqZU0SyDAB8HckyAMfkDfPKXKJCAzQ8JVqStILqMuCovvyxQIYhDesdpaSoYLPD8XshgTZdMKynJOm9jXtMjgY4MlcbJpVlR5ca6xzyn1vM/EEA8HUkywAcVUl1vX7YVyHJOffIGzC3DDg+WjC9z+WjnK2Yn27Zr6q6RpOjAQ6XVdRcWcZKmEflriyjDRMAfB7JMgBHtTqzSIYhDUyMUEKEd1SnuOaWrdxVpCZm/wCHOVjfpBU7ncnkyUNIlnmLU/v0UN/4MB1saNKn3+03OxygFcMwlN1cWWb2fFJvlhbnWhGTyjIA8HUkywAc1apD5pV5i+G9oxQZbFf5wQZ9u6fM7HAAr7NiZ6HqGh3qFR2iQUkRZoeDZhaLxT3o/92NeSZHA7R2oKJO1fVNslkt6hNDsuxo0prbMHOKq2UY/MEOAHwZyTIAR7XSi+aVudhtVnfybvkO5pYBP/X5NmcL5uQhiaYvyoHWLhvRW1aLtD6nVNkMCIcXcQ33T+kRokA7bw+OJiUmVBaLVFnbqNKaBrPDAQB0In4aAjii3cU1yis5KLvVotPTY8wOp5WWuWUky4BDNTkMLdtWIIkWTG+UFBWscc3fv96jugxeJLOI4f5tERxgU89I51gK5pYBgG8jWQbgiFbsciaiTu3TQ2FBdpOjaW1c89yyzXllKucvu4Db5rxSFVfXKyLY7nVJbji5Bv2/v3EvcxfhNVyVZX3jaME8ntRY19wykmUA4MtIlgE4Ite8srO8qAXTpVd0iDLiw+QwpFWZrIoJuCzd6qwqO3tgggJs/Ij3RpMGJyoqJED5FbXu77OA2bKpLGuztLjmuWVFDPkHAF/Gb9IADtPkMLQ6s1iSdw33P5RrVUxaMYEWS7fmS6IF05sFB9h08SnJkqR3N+4xORrAKavQlSyjsux4qCwDAP9AsgzAYbbuq1BZTYPCg+wa3jvK7HCO6NBkGStSAc42qszCatmtFk1o/vqAd7p8ZIokackP+bSSw3R1jU3aU+qskiJZdnwtK2JSWQYAvoxkGYDDuOaVndE3VnYvbeU6Iz1WgXar9pXXKrOQv+4CrsH+Z/SNVVRIgMnR4FhO6hWpgYkRqm90aNF3+8wOB34ut7hGDkOKCLIrPjzI7HC8HpVlAOAfOuVd8N69e/Wzn/1MsbGxCgkJ0cknn6wNGza49xuGoXvvvVc9e/ZUSEiIJk2apJ07d7Y6R0lJiWbPnq3IyEhFR0drzpw5qqqq6oxwAfyEa47O2H6xJkdydCGBNp2e5hxgTismIC3dekCSNGlwgsmR4HgsFot70P97G1gVE+ZyD/ePD5PFYjE5Gu+X2lxZVlrTQGUoAPgwjyfLSktLddZZZykgIED/+c9/tHXrVj355JPq0aOH+5jHHntMzzzzjF588UWtXbtWYWFhmjJlimpra93HzJ49Wz/88IOWLl2qTz75RMuXL9fcuXM9HS6An6htaNL6nFJJ0tj+3t3KNX6Ac57a8p0ky+DfSqrrtSG3RJI0iXll3cIlI3rJbrXo2z3l2nGg0uxw4McyCxnu3x6hgXYlRDgr8HJLqC4DAF/l8WTZo48+qpSUFL322ms6/fTTlZ6ervPOO08ZGRmSnFVlTz/9tP7whz/o4osv1rBhw/T3v/9d+/bt00cffSRJ2rZtmxYvXqy//e1vGj16tMaOHatnn31Wb7/9tvbto10B6EwbckpV3+hQUmSwMrx8dolrbtk3WcWqbWgyORrAPF/8WCCHIQ3uGanePULNDgdtEBcepImDnFWA7zHoHyZyD/eP8+6f+d4krbkVk7llAOC7PJ4sW7RokUaNGqXLL79cCQkJGjFihF5++WX3/uzsbOXn52vSpEnubVFRURo9erTWrFkjSVqzZo2io6M1atQo9zGTJk2S1WrV2rVrj3jduro6VVRUtHoAaL+VzS2YZ/WL8/p2jIGJEUqICFJtg0MbmqvhAH/0eXML5mRaMLuVy0c6WzE/2LRXDU0Ok6OBv8oqcrVhUlnWVq5WzNwiKssAwFd5PFmWlZWlF154Qf3799eSJUt0880367bbbtMbb7whScrPdy5rn5jYuk0kMTHRvS8/P18JCa1/4bfb7YqJiXEf81MLFixQVFSU+5GSkuLpWwP8wsrm4f5j+3vvvDIXi8Wicc2torRiwl/VNjS5P/8nD0kyORq0x8RBCYoLD1RRVZ2+3s73MHQ9wzBaKsu8vJrcm6Q1V+FlM+QfAHyWx5NlDodDp556qv7nf/5HI0aM0Ny5c3XjjTfqxRdf9PSlWrnnnntUXl7ufuTlMTAXaK+S6nr9sM9ZlXlWvziTo2kb99wyhvzDT63JLFZNfZMSI4N0Uq9Is8NBOwTYrLrklF6SpHc38nsLul5Jdb3KDzqH1LtaC3F87soy2jABwGd5PFnWs2dPDRkypNW2wYMHa/fu3ZKkpCTnX70PHDjQ6pgDBw649yUlJamgoKDV/sbGRpWUlLiP+amgoCBFRka2egBonzWZxTIMV3tjsNnhtMm4/vGyWKQf8yt1oKL2+E8AfMzSba5VMBO9vnUah5vZvCrmsm0FKq6qMzka+Jus5jbCXtEhCgm0mRxN9+FKLOZSWQYAPsvjybKzzjpL27dvb7Vtx44dSk1NlSSlp6crKSlJy5Ytc++vqKjQ2rVrNWbMGEnSmDFjVFZWpo0bN7qP+eKLL+RwODR69GhPhwyg2aHzyrqLmLBAndwrShLVZfA/DoehZc3JssmsgtktDUqK1Mm9otToMPTRZhYxQtfKKnTNK6OqrD1clWVFVfWqrG0wORoAQGfweLLsjjvu0DfffKP/+Z//0a5du/TWW2/ppZde0rx58yQ5Zwzdfvvtevjhh7Vo0SJt2bJF1157rZKTk3XJJZdIclainX/++brxxhu1bt06rVq1SvPnz9esWbOUnJzs6ZABNOtO88oONd49t6zI5EiArrVlb7kOVNQpLNCmMRnd6+sWLS5vri57d0OeDMMwORr4E1bCPDERwQGKCw+URCsmAPgqjyfLTjvtNH344Yf6xz/+oZNOOkkPPfSQnn76ac2ePdt9zG9+8xvdeuutmjt3rk477TRVVVVp8eLFCg5uaftauHChBg0apHPPPVfTpk3T2LFj9dJLL3k6XADNdhfXKK/koOxWi0and6833eMHOJNlK3cWyuHgjSb8x+fNVWUTBsYryE4LVXd10fBkBdqs+jG/0j03EugKme7h/qyE2V6p7lZMkmUA4IvsnXHSCy64QBdccMFR91ssFj344IN68MEHj3pMTEyM3nrrrc4ID8ARuFowT+3TQ2FBnfKtodOM6BOt8CC7Smsa9P2+cg3rHW12SECXWLq1ZV4Zuq/o0EBNHpqof3+3X+9t3KOTmlvLgc6WVUQb5olKjQ3VxtxS5TC3DAB8kscrywB0T6u64bwylwCbVWc2t6Axtwz+Iq+kRj/mV8pmtWjiwASzw0EHXT7S2Yr50ea9qmtsMjka+IOGJod2N1dFUVnWfgz5BwDfRrIMgJochlZlOpNl3W1emYurFXP5DuaWwT+4WjBHpfZQj7BAk6NBR43rH6/EyCCV1TRo2baC4z8B6KC8kho1OgwFB1jVM7J7rIDtTVxD/nNowwQAn0SyDIC27qtQWU2DwoPsGt5NWxgnNCfLNu0uZWUq+AVXCyarYPoGm9Wiy05tGfQPdDbXcP/0uHBZrRaTo+l+qCwDAN9GsgyAe17ZGX1jZbd1z28LKTGhSosNVaPD0OrMYrPDATpVeU2D1maXSCJZ5ktcrZhf7yjUgYpak6OBr2NeWce4kmUHKupUU99ocjQAAE/rnu+KAXiUa17Z2H7dswXTpaUVk7ll8G1f7ShQk8NQ/4Rw94ps6P76xodrZGoPOQzpg017zQ4HPs5VWZYRx/eQExEVGqDo0ABJ0u4SWjEBwNeQLAP8XG1Dk9blOCtUxvbvfsP9DzW+f3OybGehDMMwORqg87hXwaSqzOe4qsve25jH9zF0KleyjOH+J871x4qcIpJlAOBrSJYBfm5DTqnqGx1KjAxSRjf/hXlMRqwCbBbllRxk4C58Vn2jQ19vd1ZP0oLpe6YP66ngAKsyC6v137wys8OBD6MNs+PSmof8M7cMAHwPyTLAz610t2DGy2Lp3gN+w4LsGpnaQxKtmPBda7OLVVnXqLjwIJ3STRfkwNFFBAdo6kk9JUnvbthjcjTwVeUHG1RUVS9JSqcN84S5K8v4Ax0A+BySZYCfc88r69+955W5uOaWrdhJsgy+6XNXC+bgBFaw81GuVsxPvt2ng/VNJkcDX5RV6KwqS4gIUkRwgMnRdF9UlgGA7yJZBvix0up6fb+vXJJ0Vkb3nlfm4ppbtiazWPWNDpOjATzLMIyWeWWDacH0VWf0jVXvHiGqrGvUkh/yzQ4HPqhlXhlVZR3RMrOMZBkA+BqSZYAfW51ZLMOQBiSGKyEy2OxwPGJIz0jFhQequr5JG3NLzQ4H8Kit+yu0r7xWwQFWndXPNxLcOJzVatGMU53VZe9uzDM5Gviilnll3XtWqdlclWX7ymtV20AVKAD4EpJlgB87dF6Zr7BaLRp3yKqYgC/5fGuBJGlc/3iFBNpMjgadaWZzK+bqzGLtKWUeEjzLXVnGvLIOiQkLVESQXZKUV8LXKQD4EpJlgB/ztXllLuMHOCtuGPIPX7N0m7MlbzItmD4vJSZUY/rGyjCkDzbtNTsc+BhXsqy7r4JtNovFotQ4Z3UZQ/4BwLeQLAP81O7iGu0uqZHdatHp6b6VLHNVyv2wr0KFlXUmRwN4xv7yg/p+b4UsFmnioASzw0EXcFWXvbdxjxwOw+Ro4CuaHIayi5lZ5imuuWUM+QcA30KyDPBTrhbMEX2iFd7cQuAr4iOCNKRnpCRp5S6qy+AbXKtgntqnh+IjgkyOBl1h6slJCg+ya3dJjdbllJgdDnzEvrKDqm90KNBmVe8eoWaH0+2lu4b8kywDAJ9CsgzwU6t8cF7ZocYPaJ5btqPI5EgAz1i6zTmvjFUw/UdooF3TT+4pSXp3wx6To4GvyCx0DvdPjQ2VzWoxOZruL7V5yH8ubZgA4FNIlgF+yOEwtCrTN+eVubjmlq3YWUj7Erq9ytoGrWn+mp08hGSZP7l8lLMV89Mt+1VV12hyNPAF7uH+tGB6RFoclWUA4ItIlgF+aOv+CpXVNCg8yK5hvaPNDqdTjEqNUWigTUVV9dq6v8LscIAOWb6jSA1NhtLjwpTBG1y/MjK1h/rGhelgQ5M+/W6/2eHAB2QVOSvL+jLc3yNclWV7S53trQAA30CyDPBDK3Y6K1TO6BujAJtvfhsItFs1pq+zas51v0B39fk257yySYMTZLHQNuVPLBaLZhwy6B/oKHdlWRyJd0+IDw9SaKBNDkPaU0orJgD4Ct98lwzgmFrmlcWZHEnnaplbxpB/dF+NTQ598aNzXtnkIUkmRwMzzDi1t6wWaV1OiXKKaPVCx7S0YVJZ5gkWi+WQFTFJlgGAryBZBviZ2oYm96pqY/v7R7JsQ26Jqpn1g25qfU6pyg82qEdogE7tE212ODBBUlSwxvZ3fj+jugwdUV3XqPyKWkmipduD0ppbMZlbBgC+g2QZ4Gc25paqvtGhxMggZfj4X5XTYkOVEhOihiZD32QVmx0OcEJcLZjnDEqU3UfbpnF8lze3Yr6/aY+aWLQEJyi7uTIxJixQ0aGBJkfjO6gsAwDfw2/dgJ9Z2dyCeVa/OJ+ffWSxWDSuP62Y6L4Mw9DSrc5k2eQhCSZHAzNNHpKoyGC79pfXulvpgfbKLGwe7s+8Mo+isgwAfA/JMsDPrGwedj/Ox1swXca7kmUM+Uc3tLOgSrtLahRot7oTv/BPwQE2XXxKL0nSu7Ri4gS1zCsjWeZJVJYBgO8hWQb4kdLqen2/r1ySdFaGfyTLzuwXK5vVouyiauWV8EssuhdXVdlZGbEKC7KbHA3MdvkoZyvmkh/yVX6wweRo0B1lFTHcvzOkxTkry/JKatTY5DA5GgCAJ5AsA/zImqxiGYY0IDFcCZHBZofTJSKDW4aif00rJroZV7Js0pBEkyOBNzi5V5QGJkaovtGhj7/dZ3Y46IayaMPsFIkRwQqyW9XoMLSvrNbscAAAHkCyDPAjh84r8yfjmVuGbqigslab88okSZMGkyyDcw7jzOZB/7Rior0Mw3AP+KeyzLOsVotSm+eWZTO3DAB8AskywI+45pWN9bdk2QBnsmx1ZrEaaI9AN7FsW4EkaXjvKCX6SSUoju+SEb1ks1r0bV6Zdh6oNDscdCP5FbWqqW+SzWpRn5hQs8PxOS1zy0iWAYAvIFkG+IndxTXaXVIju9Wi0X1jzQ6nS53UK0o9QgNUVdfortQBvN3nrhZMqspwiPiIIE0c6FwZleoytIdruH+fmFAF2nkL4GnuFTGLmI8KAL6An5SAn1iV6awqG9EnWuF+NijcZrVoLK2Y6EZq6hvdbdOTh5IsQ2uuQf8fbNpLtSzajHllnYvKMgDwLSTLAD/hr/PKXMb3d943yTJ0Byt2Fqmu0aHePUI0MDHC7HDgZc4ZlKDYsEAVVdXp6+18T0PbZBa65pWRLOsM6c1JyBySZQDgE0iWAX7A4TC0epd/zitzcc0t+25vuUqq602OBjg2Vwvm5CGJslgsJkcDbxNgs+qSEb0kSe/Riok2ymK4f6dyDfjPKzmoJodhcjQAgI4iWQb4ga37K1Ra06DwILuGp0SbHY4pEiODNTAxQobRUmUHeKMmh6EvfnQO95/MvDIchWtVzGU/HuAPAGgT2jA7V8+oEAXarKpvcmh/+UGzwwEAdBDJMsAPuJJDZ/SNUYDNf7/sxw+gFRPe77+7S1VcXa/IYLtOS48xOxx4qcE9I3VSr0g1NBn66L97zQ4HXq62oUl7y5wJHCrLOofNalFKTIgkKbeYIf8A0N3577tmwI+s8vN5ZS6uVswVOwtlGLRIwDst3eZswZw4KMGvk9s4vstHpkhiVUwcX25xjQxDigi2Ky480OxwfFZaLHPLAMBX8Fs44ONqG5q0LrtEkv/OK3M5LS1GwQFWHaio0/YDlWaHAxzR0uZ5ZZNowcRxXHxKsgJtVm3bX6Hv95abHQ68mLsFMz6cOYidqGVFTCrLAKC7I1kG+LiNuaWqa3QoMTJI/RL8u/UiOMCm0emxkmjFhHfKLKxSVmG1AmwWTRgYb3Y48HLRoYGaPMSZVGXQP47FNdw/g3llnSotzjnkP6eIyjIA6O5IlgE+buUhLZj8NbmlFXP5Dob8w/u4VsE8o2+sIoMDTI4G3cHMUc5B/x9t3qu6xiaTo4G3ynRXlpEs60xUlgGA7yBZBvg417wyf2/BdJnQPOR/XU6JDtbzxhLe5fNttGCifcb1i1NCRJDKahr0xbYCs8OBl8oqdFY6Mdy/c6XFOivLckuq5XAwGxUAujOSZYAPK6up15bmOTb+PtzfJSM+XMlRwapvdGhtdrHZ4QBuxVV12phbKkmaNIRkGdrGbrPqslOd1WUM+seRGIZxyMwyKss6U6/oENmtFtU2OFRQWWd2OACADiBZBviw1ZnFMgxpQGK4EiODzQ7HK1gsFlox4ZW++LFADkMa0jNSvaJDzA4H3cjlza2YX20vUEFFrcnRwNsUV9erorZRFkvLao3oHHabVb17OL9/syImAHRvJMsAH3bovDK0cCfLdjLkH97D3YJJVRnaKSM+XKf2iZbDkD74716zw4GXcbVg9ooOUXCAzeRofF/L3DKSZQDQnXV6sux///d/ZbFYdPvtt7u31dbWat68eYqNjVV4eLhmzJihAwcOtHre7t27NX36dIWGhiohIUF33323GhsbOztcwKcwr+zIzsqIk9Ui7Sqo0r6yg2aHA6i2ocld6XgeyTKcgMtHpUiS3t2QJ8NgVhJatLRgMq+sK7jmluUw5B8AurVOTZatX79ef/3rXzVs2LBW2++44w59/PHHevfdd/X1119r3759uuyyy9z7m5qaNH36dNXX12v16tV644039Prrr+vee+/tzHABn5JXUqPc4hrZrRaN7htrdjheJSo0QMNToiVJy3dQXQbzrc4s0sGGJvWMCtbQ5Eizw0E3dMGwngoOsCqzsFr/zSszOxx4kayi5uH+cbRgdgVXZVlOEZVlANCddVqyrKqqSrNnz9bLL7+sHj16uLeXl5frlVde0VNPPaVzzjlHI0eO1GuvvabVq1frm2++kSR99tln2rp1q958802dcsopmjp1qh566CE999xzqq+v76yQAZ/iasEc0Sda4UF2k6PxPuP704oJ77F0q3MVw0mDE2WxWEyOBt1RRHCApp7UU5L0HoP+cQhXZVkGw/27RFoclWUA4As6LVk2b948TZ8+XZMmTWq1fePGjWpoaGi1fdCgQerTp4/WrFkjSVqzZo1OPvlkJSa2tKJMmTJFFRUV+uGHHzorZMCnMK/s2Fxzy1buLFJjk8PkaODPHA6DeWXwiJkjnYP+P/52n2obmkyOBt7CNbMsPY42zK5w6MwyWqIBoPvqlGTZ22+/rU2bNmnBggWH7cvPz1dgYKCio6NbbU9MTFR+fr77mEMTZa79rn1HUldXp4qKilYPwF85HIZWM6/smIb3jlJksF0VtY36dk+52eHAj323t1yFlXUKD7LrjL4xZoeDbmxM31j1ig5RZW2jlvxw5N+X4F8amhzaXeKscOpLZVmXSOkRKqtFqqlvUmFVndnhAABOkMeTZXl5efrVr36lhQsXKjg42NOnP6oFCxYoKirK/UhJSemyawPeZuv+CpXWNCg8yO6ezYXW7DarxvZ3JhKZWwYzfb7VWVU2YUC8guysVIcTZ7VaNKO5uuzdDbRiQtpdUqNGh6GQAJuSIrvu93J/Fmi3qlePEElSLq2YANBteTxZtnHjRhUUFOjUU0+V3W6X3W7X119/rWeeeUZ2u12JiYmqr69XWVlZq+cdOHBASUlJkqSkpKTDVsd0few65qfuuecelZeXux95eXmevjWg23C1YJ7RN0YBtk5f9Lbbcs0tW8HcMpho6VZXC2aCyZHAF1zenCxblVmkvaz26/daWjDDZLUyD7GrpDHkHwC6PY+/iz733HO1ZcsWbd682f0YNWqUZs+e7f7/gIAALVu2zP2c7du3a/fu3RozZowkacyYMdqyZYsKCgrcxyxdulSRkZEaMmTIEa8bFBSkyMjIVg/AX61iXlmbuOaWbc4rU3lNg8nRwB/tLq7R9gOVslktmjiQZBk6LiUmVGf0jZFhSO8z6N/vuYb704LZtVJjnUP+qSwDgO7L40vkRURE6KSTTmq1LSwsTLGxse7tc+bM0Z133qmYmBhFRkbq1ltv1ZgxY3TGGWdIks477zwNGTJE11xzjR577DHl5+frD3/4g+bNm6egoCBPhwz4lNqGJq3LLpHEvLLjSY4OUb+EcO0qqNKqzCJNO7mn2SHBzyxtHux/WloPRYcGmhwNfMXlI1P0TVaJ3tu4R/Mn9qOiyI+5Ksv6xjPcvyu5K8uKqSwDgO7KlP6sP/3pT7rgggs0Y8YMjR8/XklJSfrggw/c+202mz755BPZbDaNGTNGP/vZz3TttdfqwQcfNCNcoFvZlFuqukaHEiKC1C+BX46PZxxzy2Ai17yySYNZBROeM/XkJIUF2rS7pEbrc0rMDgcmyipyVpZlUFnWpVpWxKSyDAC6K49Xlh3JV1991erj4OBgPffcc3ruueeO+pzU1FR9+umnnRwZ4HtWHrIKpsVCNcHxjB8Qr9dW5Wj5jkIZhsFrhi5TXtOgdc2JjMlDSJbBc0ID7Zo+rKf+uWGP3t24R6P7xpodEkziriyL449nXSmtuQ0zp7ia3y0AoJti8jfgY9zJsv60YLbFGemxCrRbta+8VpnNs12ArvDl9gI1OQwNSAx3VyEAnnL5KOeq4J9u2a/qukaTo4EZymsaVFxdL0lKp7KsS6XEhMpikSprG1XKTFQA6JZIlgE+pKymXlv2lktiuH9bhQTadHpajCTp6x1FJkcDf+KaV0ZVGTrDqNQeSo8LU019k/69Zb/Z4cAEmc0tmImRQQoP6pJmEjQLDrCpZ2SwJOaWwbc5HIYKK+v0/d5yfb71gFbsLJTDYZgdFuAR/OQEfMiazGIZhtQ/IVyJzb+k4fjGD4jTyl1FWr6jUHPGppsdDvxAXWOTvt7unJPHvDJ0BovFopkje+vxJdv13oY9uqK50gz+gxZMc6XGhmlfea1yi6t1ap8eZocDtFt1XaPyK2p1oLxWByprlV9epwMVtTpQUeveXlBZp8afJMcGJIbrjkkDNGVoEgvMoFsjWQb4EFcLJlVl7TN+QLz+59MftTa7WLUNTQoOsJkdEnzc2qwSVdU1Kj4iSMN7R5sdDnzUZaf20hOfbde6nBLlFFUrLY5WPH+S1TxaoC8tmKZIiwvVmqxi5RQx5B/epbHJoaKqeuVX1Cq/vLZ1Aqx5W0FFnSrb2MJvsUhx4UFKigxWTnG1dhyo0s0LN2lwz0jdMam/Jg9JZG4fuiWSZYAPcSXLxjGvrF0GJkYoMTJIByrqtD6nROP6x5sdEnzc59tcq2Am8FdXdJqeUSEa2y9OK3YW6f1Ne3TXeQPNDgldyF1ZFk9lmRlaVsSkDRNdwzAMVdQ2tiS/yg9NgtW5txVV1amtnZJhgTYlRgUrKdL5SIgMVlJkkJKigpUY6XzERwQpwOac7lR+sEGvrMzWqyuztW1/heb+30ad3CtKd04eoLMHxpM0Q7dCsgzwEXklNcotrpHNamHls3ayWCwa1z9e723coxU7i0iWoVMZhqHPt7qSZbRgonNdPirFmSzbuEe3TxogG8lZv5FVRGWZmVpWxKSyDB1X3+hQQaUrCda6HTK/uR0yv7xWBxua2nQ+m9WihIigluRXZLASo4KVGBHsToQlRQW3e95hVEiA7pw8QL84K00vr8jSa6tytGVvuX7++nqdkhKtOycP0Lj+cSTN0C2QLAN8xKrmqrIRKdEM8j0B4wc4k2XLdxTq/00bbHY48GE/7KvQvvJahQTYaJlGpztvSKIig+3aV16rP3++Q3dSXeYXmhyGO0mTwcwyU7gqyxjwj2MxDEOlNQ3OKrBK5xwwVzvkgYo6d3WYa2XbtogMtreq/HIlwpIig5XYnBiLDQ/q1D+eRIcG6u4pg/SLs9L10vIsvbEmR5vzynTtq+t0WloP3TF5gM7M4HcgeDfeUQM+gnllHTO2X5wsFunH/EodqKhlgQR0mqXNVWXj+scxHw+dLjjAprvPH6Q/fvS9nvlil4ICbJo3sZ/ZYaGT7S09qPpGhwLtVvXqEWJ2OH4ptbmyrKymQWU19YoODTQ5IpjBMAx9u6dcucXVKqioc1aCHTI0/0BFneobHW06V4DNooTmyq+kSFcyrKUl0rUtJNB7freIDQ/SPdMGa864dL34VZbeXJur9TmluvrltTqjb4zunDxQp6fHmB0mcEQkywAf4HAYWp1ZLIl5ZScqJixQJ/eK0nd7yrV8R6EuZ+U4dBL3vLIhtGCia1xzRqqqahv16OIf9fiS7QqyW3XDuL5mh4VOlNncgpkWG0rrrUlCA+1KiAhSQWWdcotrSJb5IcMw9PuPvtdba3cf99iYsMCW5FdkSxtkYmSQOxHWIzSw2845TYgI1r0XDtEvJ/TV81/u0j/W5embrBJd8dc1GtsvTndMHqCRqawaC+9CsgzwAVv3V6ikul5hgTYNT4k2O5xua3z/eGey7P+3d+dxUZX7H8A/MwMzbMPOsMgOAioqCoq4a+ZyrazsVppLpWmlbd66t+1m9/brtt12M/fcMttvZWW5i7ssboCArCL7vsMwc35/wExiqKDAmeXzfr14lczhzBfOmTMzn3me75NeyrCMekR+ZQOS8qshkQC3hKnELofMyGPjg9DUosEHu9Pxfz+nQG4hxbwYf7HLoh6ib+7PKZii8nexRXFNE7LL6vj6zAytP5SFbcdzIZUAUf7O+mmQuiBMF4qp7BVQWBjOaLCe5G5vhX/NCMficUH4ZN8FfBV3EYculOLQhVKMD3XDM5NC+Fghg8GwjMgE6PqVjQh00a9GQ103NsQNK/ZdwKH0Emi0Aj+Np26nG1UW6esEFzuFyNWQuXnqlr5obtFi5f4MvPJDEuQyKe4f7it2WdQDMkvY3N8Q+LnY4ER2OXLY5N/s7E4uwuu/pAAAXpreHwtGB4hckWHxcrTG63cNxKPjgrBi7wV8k5CH/akl2J9agkn9VHh6UgjC+ziIXSaZOb6rJjIB7FfWPYb4ti6OUFGvxrlLVWKXQyZI16/sVk7BJBFIJBI8NyVU/6bthe/P4ruEPJGrop6gH1nmxpFlYvJ3ZZN/c5RSUI2ntidCEIBZw33x8Ch/sUsyWD7ONnjrnkHY+7dxmDnUG1IJsDulGLd9fAiPbonH+cJqsUskM8awjMjINao1OJFVDoD9ym6WpUyKkUEuAICDaSUiV0OmpqZRjWOZrb0F2a+MxCKRSPDy9H6YM8IXggA8+/Vp7DiTL3ZZ1M0ySzmyzBD4t62IyZFl5qOkpgkLN8WhrlmDkUEu+PeMAZBIOFPhevxcbPHuvYOxa9k4zIjwgkQC7EwqxNQPYrFkWwLSi2rELpHMEMMyIiOXkFOBphYtVEoFglX8BPlmjQ1xAwAcTGdYRt3rQFoJ1BoBga62COJoDxKRRCLBv+8Ix31RPtAKwFPbT+G3pEKxy6JuUtvUgqLqJgBAEHuWiUq3ImYOR5aZhUa1Bou2xOFSZQMCXG2x8oGhbI/SRUFudvjw/iH4/emxmD7IEwDw85kCTP7gIJ7anqifYk7UG/joJTJyuimYo4Nd+clVNxjXFpYl5FaiulEtcjVkSnZzCiYZEKlUgv/cPRB3DekDjVbA0m0J2He+WOyyqBtktU3BdLGVw8HGUuRqzJsuLCutbUYNX1OYNEEQ8PdvziAxtxIO1pZYPz+KK6DehL7uSnwyeyh+fWoMpgxwhyAAP5zKx6T3DuBvX51mAE29gmEZkZE7zH5l3crH2QYBrrbQaAUczSgTuxwyEWqNFnvbgghOwSRDIZNK8M49gzB9oCfUGgGLt8bjUHqp2GXRTeIUTMOhtLKEq11rYMKpmKbt470X8OPpfFhIJfj0gaHsF9hN+nnaY/XcKOx4YjQm9VNBKwDfJuRh4rsH8Py3Z5BXwccV9RyGZURGrKpejTNtjehHs19Ztxnb9rdk3zLqLiezy1Hd2AJnWzmG+jqJXQ6RnoVMig/uj8Ct/d3R3KLFws0ncTyTHxQYswxdc39OwTQIfuxbZvJ2nMnHe7vSAAD/nhGOkfwAu9uF93HAuvnD8MOSURgf6gaNVsD2kxcx4b/78dL3Z5Ff2SB2iWSCGJYRGbEjGaUQBKCvyg7u9lZil2MyxvT9o2+ZIAgiV0OmYHdy66iyiWEqyKScLk2GxVImxYrZQzA+1A2Nai0e3ngS8TkVYpdFN0jX04cjywyDbiomV8Q0TacvVuJvX50GACwYHYDZ0b4iV2TaBvs4YuNDw/HtYzEYHewKtUbA58dzMf6d/Vj+wzkUVTeKXSKZEIZlREbsEKdg9oiYIBdYyiS4WN6AbH4STDdJEATsSmltnj6pH6dgkmFSWMiwak4kRgW7oK5Zgwc3nMCZvEqxy6IbkKkbWcZpYAbhjxUxGZaZmvzKBizcHIemFi0mhqnw4l/6iV2S2Yj0c8bWhdH4ctEIRAc4o1mjxaajORj79j68tiMZJTVNYpdIJoBhGZERO3xZc3/qPrYKC0T6tU6V41RMullpRbW4WN4AuYUUY0P4WCXDZWUpw9p5URju74yaphbMXX8CyfnVYpdFXaDVCsgq1YVlHFlmCP4YWcYP30xJXVMLFm6KQ0lNE0Ldlfjw/giOHBdBdKALti8agW0LoxHl54SmFi3WH8rCmLf34o1fUlBe1yx2iWTEGJYRGamL5fXILquHTCpBdKCz2OWYnLFtq2IyLKObtSu5dVTZ6GBX2MgtRK6G6Nps5BbY8NAwDPF1RFWDGnPWH0daUY3YZVEnFVY3okGtgYVUAl9nG7HLIXBkmSnSagU88+UpJBdUw8VWjnXzo6C04sqzYpFIJBgZ7IqvH43B5oeHI8LHEY1qLVYfzMSYt/bind/Oo7KeoRl1HcMyIiOlG1U2xMeRT9A9YGxb37KjmWVobtGKXA0Zs10pbatgcgomGQk7hQU2PjQcA/s4oLyuGbPXHtf3wSLDppuC6etsA0sZX+YbAl1YVlTdhPrmFpGroe7w9m+p+D25CHKZFGvmRcKHwbRBkEgkGBvihu8fH4nPHhyGgX0cUNeswSf7MjD6rX14b1caqhrUYpdJRoTPokRGiv3KelZ/T3u42slR36xBXE652OWQkSqubsTpi5UAgEn9VOIWQ9QFDtaW2PzwcIR5KFFa24TZa48jl9PIDF5mKZv7GxoHG0s42rR+qJlbzseQsfs67iJWHcgAALx9zyBE+nF2h6GRSCSYEKbCj0tHYc3cSIR5KFHb1IKP9qRjzFt78fGedNQ0MjSj62NYRmSEtFoBRzLKAACj+zIs6wlSqeSPVTHTSkWuhozV7rZRZYN9HKHiirVkZJxs5di6MBp9VXYorG7ErLXHcKmyQeyy6BrY3N8w+bWNLssu5VRMY3Yiqxwvfn8WALB0QjDuHNJH5IroWiQSCSYP8MAvT47Bpw8MRYi7HaobW/DurjSMeXsfVu6/gLomjva8ngvF5juynGEZkRFKKaxGeV0zbOUyRPg4il2OydI1Y2ffMrpRu1OKAACT+3MKJhknVzsFPl8YjQBXW1yqbMDstcdQWNUodll0FRlt02UDXTmyzJD4s8m/0cstq8fiLXFQawT8ZaAHlt0aInZJ1ElSqQTTBnpi51Nj8dGsIQh0s0VlvRpv70zF2Lf3Ye3BTDQ0a8Qu0yAdvlCKKR8cxL9/SoZGK4hdTq9jWEZkhA6lt450GhHowp4kPUg3siy5oJpLUFOX1TW16KdLs18ZGTOVvRW2PRINH2dr5JTVY/a6Y7wmGiiOLDNMfmzyb9SqG9V4eNNJVNSrMcjbAe/+NQJSrnxpdKRSCe4Y7IVdz4zD+/cNhr+LDcrqmvH6LykY8/Y+bDiUhUY1QzOd7NI6PP55AjRaAZX1zTDHU57vsomMEPuV9Q5XOwUGeNkDAA5d4Ogy6prY9FI0t2jh42yNEHe+cSXj5ulgjW0LR8DLwQqZJXWYs+44yuu4upghaVRrkF/VOk2WPcsMi35kWSlHlhmbFo0WSz5PwIXiWnjYW2HtvChYy2Vil0U3QSaV4K4h3ti9bBzevmcQvJ2sUVrbhH/vSMa4d/Zh89FsNLWYd2hW3ajGws1xqGpQY4ivI/5z90BIJOaXljEsIzIyjWoNTma3Npxnv7Kex75ldKN0UzBv7edhli8wyPT4ONtg2yMjoFIqkFpUgznrjqOqnk2SDUVWaR0EAbC3soCLrVzscugy/q4cWWasXtuRjNj0UlhbyrBufhTc2X/UZFjIpLg3ygd7/zYeb9w9EF4OViiqbsIrPyRhwjv7se14LppbtGKX2es0WgFPfZGoD4hXz4mElaV5BsQMy4iMTEJuBRrVWqiUCvRVcbRKT9P1LYtNL4HWDOfq043RaAXsPd/a3H9Sf66CSabD39UW2x4ZAVc7OZILqjFvw3GuKmYgLp+CyYDesPi3TcPMr2rkNC8jsuVoNjYdzQEAvH/fYIT3cRC5IuoJcgspZg33xb7nxuO1GQPgbq9AflUjXvz+LCa+ux9fxV1Ei8Z8QrO3dp7HvtQSWFlKsXZelFkvUMWwjMjIHG6bgjk62JUvhntBlJ8zbOQylNY2I7mgWuxyyEgk5FagvK4ZDtaWGObPZeXJtASr7LB1YTScbCxxOq8KD312kiuKGYCs0rbm/pyCaXCcbCyhtLIAAFws51RMYxCbXoJXf0oGADw3JRRTwz1Froh6msJChrkx/jjw3AQsv70/XO0UyKtowN+/OYNJ7x3Adwl5Jt/k/pv4PKw5mAkAeOeewRjobd4BMcMyIiOja+7PfmW9Q24hRUygCwDgYDr7llHn7EpunYI5IdSNi3CQSQrzsMeWBdGwt7JAXE4FFmw6ydXERKYbWRbE5v4GRyKR6EeXcUVMw3ehuFbf2PzuoX3w+PggsUuiXmRlKcNDowIQ+/cJeHl6P7jYypFdVo9lX53Gre8fwA+nLplkaBafU4EXvzsLAHhiYjBuH+wlckXi4yt4IiNSVa/GmUtVABiW9aaxIbq+ZQzLqHN2t4Vlk/pzFUwyXeF9HLDp4eGwU1jgWGY5Fm2J4xQzEWWUtk3DdOXIMkPk19bkn33LDFtFXTMWbDqJmsYWRPk54Q0zbWxOgLVchoVjAhH7jwn4x9QwONpYIrOkDk9tP4VpHx5ErAl9iJ5f2YDFW+LRrNFiygB3PDMpROySDALDMiIjcjSzFILQOgXGw8F854/3Nl1YFp9TwalGdF0ZJbXILK2DpUyCcW3nDpGpGuLrhM8eGgZrSxli00ux5PMEs2yILDZBEJBZopuGyZFlhuiPkWUMywxVc4sWi7fGI6esHj7O1lg9NxIKC/NsbE5/sJFb4LHxQYj9+wQ8OzkE9lYWSCuqxZNfJIpdWrdoaNZg0ZY4lNY2IcxDiffujYBUyoAYYFhGZFQOXdavjHqPv4sNfJytodYIOJpRJnY5ZOB0UzBHBLpAaWUpcjVEPW+YvzPWz4+CwkKKPeeL8eQXiWbVDNkQlNY2o6axBRLJHyOYyLD8MbKM0zANkSAIePl/Z3EiqxxKhQXWzx8GFzuF2GWRAVFaWWLpxL747vFRAIAGExhJLQgCnv3mNM5dqoaLrRzr5kfBVmEhdlkGg2EZkRHR9StjWNa7JBIJxvZtm4ppQkOuqWfopmBO5hRMMiMjg12xZl4U5DIpdiYV4pmvTptkTxdDpRtV5u1kDStLjoQxRP6uHFlmyNYczMRXcXmQSoCPZw9BiLtS7JLIQFlZmk6E8vHeC/j5TAEsZRKsmhsJbyd+2HI50znSRCbuYnk9ssvqIZNKEB3I1fV6m24qZmxbYEnUkbLaJsTnVgAAbunHsIzMy7gQN6x8YCgspBL8dDoff//mDLQMzHpFpr5fGadgGirdyLJLFQ2cqmxgdiUX4c2d5wEA/7ytP8aHqkSuiKjn7TxXgPd2pQEA/u/OcK7e3gGGZURG4khGa0gT4ePIqV0iGBnkAplUgqzSOi77Tle153wxBAEY4GUPL0drscsh6nWT+rvj41lDIJNK8G1CHl763zkIAgOznvZHvzI29zdUbnYK2Mhl0ApAXgVfRxiKpPwqPLU9EYIAPBDtiwdH+otdElGPS8qvwjNfngYAPDTKH/cN8xW5IsPEsIzISBy60Nori1MwxaG0ssRQX0cAwAGuiklXoZuCeSunYJIZmzbQE+/dOxgSCfDFiVz866dkBmY9LLOkbWQZm/sbLIlEAr+2Jv/sW2YYimsa8cimONQ3azAq2AWv3jGAK1+SySutbcKizfFoUGswpq8rXvpLP7FLMlgMy4iMgFYr4LCuuX9fhmVi0fctY1hGHWhUa/TTdCdxCiaZuRkRffD2zEEAgI1HsvHmr+cZmPUg3TTMIFeOLDNk/m1TMdm3THyNag0e2RyP/KpGBLraYuXsSFjK+NaYTFtTiwaPbonHpcoGBLraYsWsobDgeX9V/MsQGYGUwmqU1zXDVi5DhI+j2OWYLV3fsiMZZVBzpTe6wuELpWhQa+DlYIUBXvZil0Mkur9G+eD1u8IBAKsPZuL9tt4o1L2aW7TIbWsPwJFlho0jywyDIAh47pszOH2xEo42llj/4DA42LDFCZk2QRDwz/+dQ1xOBZRWFlg7P4rn/XUwLCMyArpRZdGBLvzUS0ThfRzgZGOJ2qYWJOZWil0OGZjdKa1TMCf1d+c0DqI2D0T7Yfnt/QEAH+29gBV700WuyPTkltdDoxVgK5fB3V4hdjl0DbqRZVmlHFkmpg/3pOOn0/mwkErw6QORCOCITDIDGw5n61d8XTF7KIL44cp1WYhdABFdH/uVGQaZVILRfd3w0+l8HEwrwfCAP68aU1jViMVb4mAhkyLEXYlQdzuEeCgR6q6Eix3fxJgqrVbA7pRiAJyCSXSlh0YFoLlFizd+PY///p4GhYUMj4wNFLssk6Fr7h/gZsug3sD9MbKMYZlYfjydjw92t4b2r98VjpggF5ErIup5B9JK8PrPyQCAF//SD+PaZsvQtTEsIzJwjWoNTmS1hWXsVya6sX1dW8Oy9BI8OyX0T7fHppfgdF4VACA+p6Ldba52CoR62LWFaEqEeCgR4q6EnYKXYmN3Oq8SJTVNsFNYYEQgX3gTXWnxuCA0tWjx3q40vP5LCuQWUsznqnPdQtevLNCVowQMnb9r68iyvIoGqDVazhboZYm5FXj269YVAB8ZE8AVAMksZJTUYum2BGgF4K+R3lgwOkDskoxGt1+h33jjDQwbNgxKpRIqlQp33nknUlNT223T2NiIJUuWwMXFBXZ2dpg5cyaKiorabZObm4vp06fDxsYGKpUKzz33HFpaWrq7XCKDl5BbgUa1Fm5KBfqq+EJYbLq+ZWcvVaG8rvlPt+vaV4e422HJhCBM6ucOX+fWF8eltU04fKEMnx3OxvPfncXdK48gfPlvGP3WXizYeBJv7TyP/yVeQnJ+NZpaNL31K1E32NW2Cua4UDfILfjmh6gjT0wMxpIJQQCA5T8m4YsTuSJXZBp0I8sC3TiVzNC5K62gsJCiRSsgv7JB7HLMyqXKBjyyOR7NLVrcEqbC89O4AiCZvqp6NR7ZFIeaxhZE+Tnh/+4K5wjkLuj24QwHDhzAkiVLMGzYMLS0tODFF1/E5MmTkZycDFvb1ifxZ555Bj///DO+/vprODg4YOnSpbj77rtx+PBhAIBGo8H06dPh4eGBI0eOoKCgAPPmzYOlpSX+85//dHfJRAZNvwpmsCsvbgbA3d4KYR5KnC+sQWx6CWZE9OlwO28nGzw3JUz/77qmFqQX1yKtsAapRTVIK6pBamENimuakFfRgLyKBuw5X6zfXiaVIMDVtnUEmrtSPyLNz8UWMinPA0Oj61d2K6dgEl2VRCLBs5ND0dyixdrYLLz4/VnIZVLMjPQWuzSjllnSOrKMfZcMn1Qqgb+LLVKLapBdVq+flkk9q66pBQs3xaG0tglhHkp8OGsIX0uRyWvRaLH0iwRkltahj6M1Vs2NhMJCJnZZRqXbw7KdO3e2+/fGjRuhUqkQHx+PsWPHoqqqCuvXr8e2bdswceJEAMBnn32Gfv364dixYxgxYgR+//13JCcnY/fu3XB3d0dERARee+01/OMf/8Crr74KuVze3WUTGSxdv7JR7FdmMMaGuLWFZaVXDcuuZKuwQISP459WMy2va0baZeFZWlENzhfWoKaxBReKa3GhuBY/ny3Qb6+wkKKve/upnGEeSnjYWzFMFUlOWR3Simohk0owIVQldjlEBk0ikeDFv/RDU4sWm4/m4LlvTkNuIcXtg73ELs1o6aZhslmzcfBzsUFqUU1b3zL2DeppGq2Ap7afQkpBNVzt5Fg3P4rtL8gs/OeX84hNL4W1pQxr5kXClb2Tu6zHrxRVVa29e5ydWxthx8fHQ61WY9KkSfptwsLC4Ovri6NHj2LEiBE4evQoBg4cCHf3Pz6hnzJlCh577DEkJSVhyJAhf7qfpqYmNDU16f9dXV3dU78SUa+pqlfjbF4lADb3NyRj+rpizcFMxKaXQBCEmwqpnG3lGBHo0q7PlSAIKKxu1IdnqYW1+kCtqUWLc5eqce5S+2uc0spCH56FuisR2vZfJ1t+uNDTdFMwh/s7cwluok6QSCR49fYBaG7RYvvJi3j6y1OwlEkxNdxD7NKMTmV9s74lAEeWGQf/tuOUXVovciXm4e2d57E7pQhyCynWzIuCt5ON2CUR9bgvT+Ziw+EsAMD79w3GAC8HkSsyTj0almm1Wjz99NMYNWoUwsPDAQCFhYWQy+VwdHRst627uzsKCwv121welOlu193WkTfeeAP/+te/uvk3IBLX0cxSaAUgWGUHDwcrscuhNsP8nWFlKUVRdRNSi2oQ5mHfrfuXSCTwdLCGp4M1xl82UkmjFZBbXv9HiFZUg7TCGmSW1qGmsQVxORWIu2JRATelot1UzlAPe/RV2cGWn6p2G/0UzP6cgknUWVKpBP+5ayCaW7T4LvESnvgiAavnRmJiGB9HXZHRNgXTw96K13Uj4efSGtZwRcye91XcRaw+mAkAeOeeQRjq6yRyRUQ972R2OV7+3zkAwDOTQjA13FPkioxXjz6rLlmyBOfOncOhQ4d68m4AAC+88AKWLVum/3d1dTV8fHx6/H6JetKhy/qVkeGwspQhOsAFB9JKcDCtpNvDsqvR9TELcLVtNwKjqUWDzJK6dlM5U4tqcLG8ASU1TSipadKfSzo+ztaXhWitX4GudmxO30WV9c04md0aUE5ivzKiLpFKJXj7nkFo1mix40wBHt2agHXzovQLqdD1sbm/8fFv61OW3UFYtuVYDrJL6/DgSH/4OHME1M04llmGl74/CwB48pa+nW6bQWTM8irq8eiWeKg1AqYP9MSTtwSLXZJR67GwbOnSpdixYwcOHjwIb+8/Grd6eHigubkZlZWV7UaXFRUVwcPDQ7/NiRMn2u1Pt1qmbpsrKRQKKBSch0um5TD7lRmssSFubWFZKRaNDRK1FoWFDP087dHPs31oV9vUgvSi9lM5zxfWoLS2CRfLG3CxvAG7U/5YVMCiLYy7ciqnj7MNG+Fexb7UYmi0AkLdlfB14Rsboq6ykEnx/n0RUGu0+C2pCIu2xOGzB4cjJsjl+j9M+n5lDMuMh25k2cXyBmi0Qrvn1zd+SUF9swabjmTjnkhvLJkQzNDsBmSX1uHRrW2BwSBPPH1LX7FLIupxuoUsyuqaMcDLHv/962D2M75J3R6WCYKAJ554At9//z3279+PgICAdrdHRkbC0tISe/bswcyZMwEAqampyM3NRUxMDAAgJiYGr7/+OoqLi6FStU5B2rVrF+zt7dG/f//uLpnIIOVV1COrtA4yqQQjAp3FLoeuMC7EFa8BOJFdjoZmDazlhre6jJ3CAkN8nTDkimkHZbVNSCuq1Y9ASy1snc5Z07ZiZ3pxLX7GH4sKWFlK0VfVOgotzOOPvmju9gqzfxLendwaNnIKJtGNs5RJ8fGsoXh0azz2ni/Ggk0nsWXBcET68bnvevQjy1zZ3N9YeDpYQy6TolmjRUFVQ7seWi0aofW/WgHbT17EN/F5DM26qKpBjQWbTqKyXo3B3g5496+DIeUHfmTitFoBy746hfOFNXC1U2DtvCiDfG9ibLo9LFuyZAm2bduGH374AUqlUt9jzMHBAdbW1nBwcMCCBQuwbNkyODs7w97eHk888QRiYmIwYsQIAMDkyZPRv39/zJ07F2+//TYKCwvx8ssvY8mSJRw9ZuKaW7T4PjEPB9NKMTzAGfdG+ZjtA/1w27S5CB9HKK3YNNzQBLnZwcvBCvlVjTiWVWZUqyC62CkQY6doN3JDEAQUVDXq+6DpQrT04lo0qrU4e6kKZy9VtduPvZUF+nnaY2KYClPDPeDnYl4jG5paNNif2hqWTWJYRnRT5BZSrHxgKBZuisOhC6V4cMNJbF0YjcFXrCBM7WWWcGSZsZFJJfBxtkZGSR1yyuo7bDj/8awh+CruImLTSxmadUGLRoul2xKQUVIHTwcrrJ0XBStL83wfQeblg91p+C2pCHKZFKvnRsLL0VrskkxCt4dln376KQBg/Pjx7b7/2Wef4cEHHwQAvP/++5BKpZg5cyaampowZcoUrFy5Ur+tTCbDjh078NhjjyEmJga2traYP38+/v3vf3d3uWQgGtUabD+RizUHM5Ff1QgA+PlsAT7YnYb5I/0xP8bf7Fb1O8QpmAZNIpFgbIgbtp+8iINpJUYVlnVEIpHAy9EaXo7W7X4XjVZATlndFVM5q5FdVo/qxhYczyrH8axyvPHrefTztMfUAR6YNtADfVV2Jj/q7FhmOeqaNVApFRjUh6sMEd0sK0sZ1s6LwvzPTuBEVjnmrj+OLxaN4CpeV9F6fW5dUTHIjSPLjIm/iy0ySuqQXVbX4eu8SD8n3D7YC/E55fhgd3q70GzmUG8sncjQrCP/+ikZsemlsG67lqjsuTgWmb4dZ/Lx0d4LAID/3D0QkX5cyKK79Mg0zOuxsrLCJ598gk8++eSq2/j5+eGXX37pztLIANU2tWDrsRysi81EaW3r0ucqpQJ3DPbCb8mFuFjegA92p2P1gUzcN8wHC0YHmMWLA61WwBE29zd4l4dlpkomlSDQzQ6BbnaYGv7H9xvVrYsKxOWU47ekQhzLLEdKQTVSCqrx/u40BLrZtgZn4Z4I72NvksHZruTWkdO39HPnFA+ibmItl2HDg8Mwb/1xJORWYs6649i+KAahHkqxSzM4eRX1aNZoIbeQchSBkdGNxNaFnVcT6eeMLQui24VmX8ZdxLcJDM2utOlINrYcy4FEAnxwfwTC+SEWmYFzl6rw7NenAQCLxgbinkjv6/wEdQXXmCZRVNY347PD2dh4JBtVDWoAQB9Hazw2Pgj3RHrDylKG56eF4ddzhVh1IANJ+dXY2PYkeNsgTyweG4T+Xr2zAqEYzhfWoKyuGbZyGYb4OopdDl3FqCBXSCVARkkdLlU2oI8ZvVmxspShv5c9+nvZY16MP8rrmrE7pQg7zxXiUHopMkvqsHJ/Blbuz0AfR2tMDffA1HAPRPo6mUSwJAjCZf3KjHtUIZGhsVNYYOPDwzFn3XGcyavCA+uO48vFIzh66gq6KZgBLrZchMXI+Lu2BlzZpX9eEbMjDM2u7UBaCf71UxIA4B9TwzBlQMcLwhGZkuKaRjyyOQ6Nai0mhLrhH1PDxC7J5DAso15VXNOI9bFZ2HosB3XNGgCtfTYeHx+MGRFesJRJ9dtayKS4fbAXbhvkicMXyrDqQAYOXSjFD6fy8cOpfIwLccPicYGICXQxuVErhy60jlSKDnRp9zchw+JgY4kIH0ck5FYiNq0E9w/3Fbsk0TjbynFvlA/ujfJBTaMae88XY+e5QuxPLcGlygasP5SF9Yey4KZUYMoAd0wd4InoQGejPb+T8qtRWN0Ia0sZRgZx9CdRd7O3ssTmh4dj1trjSCmoxuy1x/DV4hiz6414LRm65v7sV2Z0Ojuy7Ep/hGYV+HBPOg6mlbQLzZZMCDa7lZnTi2qw9PMEaAXgr5HeWDw2UOySiHpco1qDxVviUVDViGCVHT6cNYQfmvQAhmXUKy5VNmDNgQxsP3kRTS1aAEA/T3ssmRCEaeGe13xwSyQSjO7ritF9XXHuUhVWHcjAL2cLcCCtBAfSSjDY2wGPjgvC5AEeJnORYL8y4zGmrxsScitxMN28w7LLKa0sMSOiD2ZE9EFDswYH0krwW1IhdqcUoaSmCVuP5WLrsVw42lhiUj93TAv3wKhgV6Nqwvt7chEAYGyIcdVNZEwcbeTYumA4Zq09hrSiWsxe2zrCrKOG6OYos5TN/Y2Vf1uglVNeB61W6PKI60g/J2x+eLjZh2bldc1YsCkONU0tGO7vjNfvGmhyH6ATXUkQBLz43Vkk5lbCwdoS6+ZFwZ6LwfUIhmXUo7JL6/Dp/gx8l5gHddty2EN8HbF0QjAmhqm6/IQW3scBK2YPRU5ZHdbFZuGruIs4nVeFxz5PQICrLR4ZE4i7h/Yx6jevTS0anMhqDcvYr8zwjQ1xw4d70nEovRQtGq3Y5Rgca7lMPwWzuUWLwxml+O1cIX5PLkJ5XTO+ic/DN/F5sFNYYEKYClMHeGB8qBtsFYb99LS7LSy7tT+nehD1JBc7BbYujMb9q48hs7QOs9cex1eLY+DhwMbdmbqRZa6cnmps+jhaw0IqQaNai6KaRng63Fgbh6uFZt8k5GHm0D5YOqGvyYZmTS0aPLolHrnl9fB1tsGquZGQWxjnaHWirlhzMBPfJV6CTCrBygeGwt+VH5j0FMN+N0JGK7WwBp/su4AdZ/KhbVvzISbQBU9MDEZM0M1Pm/RzscVrd4bjqUl9sflINjYdzUFWaR1e/P4s3tuVhodG+WPOCD84WBtfyp6QU4lGtRZuSgVC3PkC2NAN9naAvZUFqhtbcDqvSuxyDJrcQooJoSpMCFXh/+7U4mR2BXaeK8DOpEIUVTfhp9P5+Ol0PhQWUowLccPUcA/c0s/d4B7HlyobkFxQDakEmBDqJnY5RCZPpbTCtkdG4N7VR5FbXo/Za49h++IRUCnNOzDT9SzjyDLjYyGTwtvJGtll9cgurb/hsEyno9Dsq7g8fJtwySRDs9aRNedwIrscSoUF1s+PgrOtXOyyiHrc3vNFeHPneQDAK7f15yykHsawjLrVmbxKrNh7QT9FCQAmhqmwZEJwjyxj62qnwLLJoVg8LgjbT17E+thM5Fc14p3fUrFy3wXMjvbFgtGBRvUJ9OHLVsHkUHLDZyGTYnRfV/xythAH00rQx8l8mvzfDAuZFDFBLogJcsHy2wfgVF4lfjtXiF/PFSK3vB6/Jxfh9+QiWEglGBnsimnhHri1vztc7RRil64fVRbp5wQXA6iHyBx4OFhh2yPRuK9thNmcdcfxxSMjzPYxWNOoRnFNEwAgkAsfGCU/F1tkl9Ujp6wOMUEu3bJPcwnNVh3IxLcJeZBKgBUPDEVfd66WS6YvvagGT35xCoIAzBrui3kxfmKXZPIYllG3OJ5ZhhX7LiA2vTXokUiAaeEeeHx8cK8s3WyrsMCC0QGYF+OHn07nY/WBTKQW1WBtbBY2HsnGjIg+WDw20CieTGPbwjJ+UmA8xvZ1aw3L0kswi33LukwqlWCorxOG+jrh+WlhSCmowc5zBfj1XCHSi2txMK0EB9NK8NL3ZzHM3xnTwj0wJdzjpj+Jv1G7U3RTMN1FuX8ic+XtZINtj0Tj3tVHkVZUi7nrT2DbI9FwtDGvESWCICCloAYA4GonN7jRt9Q5/i42OAAgu4tN/jtDF5ol5Fbgw93pOGBCodlvSYV4+7fWkTXLbx+AcSEc4U2mr6KuGQs3x6G2qQXDA5zxrzsGcFBFL2BYRjdMEAQcTC/FJ3sv4ER2OQBAJpVgRoQXHh8fhGBV7wdTljIp7h7qjbuG9MH+1BJ8eiADJ7LK9X2RJvVT4dFxQYjyd+712jqjql6Ns3mVANivzJiMbXuhdvpiJaYP9BS5GuMmkUjQ38se/b3ssWxyKC4U1+K3pELsPFeIs5eqcDyrHMezyvHqT8mI8HHE1HAPTAv36LUV8qob1TiW2dpTcFI/hmVEvc3PxRbbHhmB+1YfQ3JBNeZvOIEtC6ONvrmxIAioalCjtLYJJTXNbf9tQmmt7qtZ/++y2mY0t/XIZL8y46XrM5RTVtdj9zHU1wmbrhKa3T2kD5ZODDaqFWbPXarC09tbR9bMHeGH+SP9xS6JqMepNVos2ZaAnLJ6eDtZY9Uc9ufrLQzLqMu0WgG/Jxfhk30XcPZSa48muUyKv0Z549FxQfBxFv+TKolEgglhKkwIUyEhtwKrD2Tg9+Qi7E4pxu6UYkT5OWHxuCDcEqbq8gpEPeloZhm0AhCssjOqqaPmzsvRGsEqO1worsWhtpGB1D2CVXYIVgVjyYRgXCyv1wdn8bkVOHWxEqcuVuLNX88jzEOJaeGemBrugRB3ux77tO1AagnUGgFBbrac+kQkkiA3O3y+MBr3rzmK03lVeOizk9j08HDYGdjCINcLwFr/v/lPAVhnOdpY4r5hPj1UPfU0/7aQqidGll2po9Ds6/g8fJdoPKFZcXUjHtkchwa1BmP6umL57f3FLomoV7y2IxlHMspgK5dhHfvz9SrDelVBBq1Fo8XPZwvwyb4LSCtqXYHJ2lKG2dG+eGSM4fYFG+rrhNVzo5BRUou1BzPxXcIlxOVUIG5zHPqq7LBobCBmRPQxiIT+8n5lZFzG9nXDheJa/agj6n4+zjZYOCYQC8cEori6Eb8lF2HnuQIcyyzH+cIanC+swfu70xDoaqtfgXNgH4duDc50UzAncQomkahCPZTYujAas9YcQ3xOBRZsPImNDw2HtbxnV8O+MgArqW1C6VUCsNLaJv1K4J1lb2UBV6UCrnYKuNkp4KZUwNVO3vrvtu+7KhVwsZUb9crfBPi1TYPMKauDIAi9MqXKWEOzRrUGj2yOQ0FVI4LcbLFi9lBYyMR/3U7U0z4/noPNR3MgkQAf3D8EYR72YpdkVhiW0XU1t2jxXUIePj2QgZy2T7+UCgvMG+mHh0cFGE1z3SA3O7w5cxCW3RqCDYez8fmxHKQX1+K5b87g3d/TsGB0AO4f7gOliFM5DrFfmdEaG+KKDYez0Kju2sgAujEqeyvMHeGHuSP8UFHXjF0pRfjtXCFi00uRWVqHlfszsHJ/Bvo4WmPKAA9MG+iBob5OkN3ESFK1Rot954sBALdyCiaR6AZ4OWDLgmg8sO44jmeVY9GWOKydF9XlEOnyAKxYF3bVNF0xEowBGHUvbycbSCVAfbMGJbVNvbq6qzGFZlqtgL99fRqn86rgZGOJDQ8OY58+MgtHM8qw/IckAMCzk0PZK1cEDMvoqhrVGmw/kYs1B1tXmAQAJxtLLBgdgLkx/kb7RKWyt8Lz08Lw+IQgfHE8F+sPZaGwuhGv/5KCj/amY+4IPzw0KgBuyt4NAfMq6pFVWgeZVILoQMPsqUZXFx3gArmFFM0tDMt6m5OtHPdG+eDeKB/UNKqxL7UEO88VYN/5ElyqbMCGw1nYcDgLbkoFJvd3x7RwT0QHOsOyi59Kn8wqR3VjC1xs5Rji2/2r+xJR1w32ccTGh4Zh3oYTiE0vxeOfJ2DVnEhYyiQdBmDtR4K19gErq7vJAEzZGoIxAKOukFtI0cfJGhfLG5BTVt+rYZmOLjRLzG1dPXN/quGFZh/sScfPZwpgKZNg1ZxI0esh6g25ZfV47PN4tGgFfT9w6n0My+hPahrV2HosF+sPZaK0thkAoFIqsGhsIGZH+8JGbhqnjb2VJRaPC8KDo/zxQ2I+Vh3MQGZJ64iUdYeyMHOoNxaNDUSAa+88KR+50Dp9b7C3g9E3KjZH1nIZhvs7s2eZyJRWlrhjsBfuGOyFhmYNDqaXYOe5QuxOKUJJTRM+P56Lz4/nwtHGEpP6uWPqAA+M7uvaqTezvye3TsGcGKa6qRFqRNS9ovydsX7+MDy08QT2ni/GsNd3o765hQEYGTx/F1tcLG9Admkdhom4+NQQXydsfKjj0OyuIX2wdEKwfkGC3vTDqUv4aE86AOD1uwYiOtCl12sg6m01jWos3HwSlfVqDPZ2wFszB3HlS5GYRupB3aKyvhmfHc7GxiPZqGpQAwC8nazx6Lgg3BPpbbIvDBUWMtw7zAf3RHpjV0oRVh3IQGJuJb44kYvtJ3MxdYAHHh0XhME+jj1ahy5kGd2XS2Abq7EhrgzLDIi1XIYpAzwwZYAHmlu0OJJRit+SCvF7UhHK6pr1q+TaymWYEKbCtHBPjA91g20HTcIFQdD3K+MweCLDExPkgrXzorBwU5z+NQxw9QBMH34xACMR+bnYIDYd+jYnYusoNPsmPg/fixCaxedU4LlvzgAAFo8NxL1RXMyCTJ9GK+CZL08hragWKqUCq+d2vbUAdR+GZYTimkasj83C1mM5qGvWAAAC3Wzx+PhgzIjw6vJUJWMllUowZYAHJvd3x8ns1hU095wvxq/nCvHruULEBLpg8bhAjAtx6/Z0X6sV2NzfBIwNccN/fjkvdhnUAbmFFONDVRgfqsL/3SngZHY5dp5rXVmzsLoRO84UYMeZAigspBgb4oZp4R64JcwdDjatozxTi2qQV9EAhYUUo/vyMUpkiMb0dcPRF27BxfL6toBMDoUF32SQ4fpjRcw6kStpT+zQLK+iHou3xKG5RYtJ/dzx96lhPXZfRIbkv7+nYndKMeQWUqyZF2WwC+iZC4ZlZuxSZQPWHMjA9pMX0dTWZ6mfpz2WTgjG1HAPs51mJJFIMDzAGcMDnJFaWIPVBzPw46l8HM0sw9HMMoR5KPHouCDcNsiz21biOV9Yg7K6ZtjIZYjo4RFs1HNC3ZVwt1egqLpJ7FLoGmRSCUYEumBEoAteua0/TudVYmdSa3CWU1aPXclF2JVcBAupBCODXTF1gAcyS1pXAB4d7GoyU9GJTJGzrRzOtnKxyyDqFF3/LUMZWXYlMUKz2qYWLNwUh9LaZvTztMeH90eY7XsSMi//S7yET/dnAADeuWcQ3xMaAL7iN0NZpXX4dP8FfJdwCS3a1n4eQ3wd8cTEYEwIVXFO9GVCPZR4794IPDs5FOsPZeGLE7k4X1iDp788hXd+S8UjYwJw7zCfm37zrBtVFh3gDLmFeYzkM0USiQRj+rrhm/g8sUuhTpJKJRji64Qhvk54fmoYUgpq2oKzAqQV1eJgWgkOppXot+cUTCIi6i7+LjYAWkeWCULXeuz1Jl1odupiJT7cnYZ9l4Vmd0b0wRMTuyc002gFPPVFIs4X1sBNqcD6+VEdtkYgMjWnLlbi79+2Tjt+bHwQZkT0EbkiAhiWmZXUwhp8su8CdpzJR1tGhpFBLlg6IRgxQS4Mya7By9Ea/7ytP56c2BdbjmXjs8PZuFTZgFd/SsaHe9IxL8Yf80f63/Cn2exXZjqmD/LEN/F58HayFrsU6iKJRIL+Xvbo72WPZbeGIKOkVj9V8+ylKiitLHBLP4ZlRETUPXycbSCRADWNLaioV1//B0QW4eOIz64Izb5NyMP/TnVPaPbmrynYc74YCgsp1s6LgpcjX0uR6SusasSizbppxyo8NzlU7JKoDcMyM3D6YiVW7LuAXW0ruQGtq7ktmRCMSD8nESszPg42llg6sS8WjgnEN/F5WBubiZyyeny4Jx2rD2bgvigfLBwTCB9nm07vs6lFg+NZrSthsl+Z8ZsQqsLuZePg59L5c4AMU5CbHZZMCMaSCcEoqGqATCKBm1IhdllERGQirCxl8LS3Qn5Vo8H1LbuWngjNvjyZi7WxWQCA//51MKegkVloVGuwaEscimuaEOJuhw/uHwIppx0bDIZlJux4ZhlW7LuA2PTWUUsSCfCXcE88PiEIA7wcRK7OuFlZyjBnhB9mDffFznOFWHUgA2cvVWHT0RxsPZ6L6QM9sXhcYKf+zgk5lWhUa+Fqp0CIu10vVE89LVjF42hqPB346TYREXU/Pxfb1rCs1HjCMp3uCs2OZpThpe/PAQCentQXtw/26unSiUQnCAL+/s0ZnMmrgpONJdbNGwY7Tjs2KDwaJkYQBBxIK8En+y7gZHYFgNZm1jMivPD4+GC+ie9mMqkE0wd54i8DPXAkowyrDmQgNr0UP57Ox4+n8zGmryseGxd0zWmuf6yCyamwRERERObE39UGRzPLkG2gTf474/LQ7KM96dh7vrjToVlWaR0e3RqPFq2A2wd74alb+vZy9UTiWLk/Az+ezoeFVIJP50TCl7NSDA7DMhOh1Qr4PbkIn+y7gLOXqgAAcpkUf43yxqPjgro0LZC6TiKRYFSwK0YFu+LcpSqsOZiJHWfyEZteitj0UgzydsDisUEdrjLKfmVERERE5umPFTGNb2TZlSJ8HLHhwWE4fbESH14Wmn2fmIc7h/TBExP7IuCy0KyqXo0FG0+iqkGNCB9HvHPPIH5wTGbh96RCvPNbKgDgXzMGYESgi8gVUUcYlhm5Fo0WP58twCf7LiCtqBYAYG0pw+xoXzwyJhAeDlYiV2h+wvs44KNZQ/DclFCsi83El3EXcSavCku2JcDfxQaPjA3EzKHesLKUoapBjTN5lQCAUcG8SBIRERGZkz9WxDTekWVXGtxBaPZdwiX8L/GSPjTzdrLG49vikVlaBy8HK6yZFwkrS5nYpRP1uPOF1Xj6y1MAgHkxfngg2k/cguiqGJYZqeYWLb5LyMOnBzKQ0/bkqlRYYP5Ifzw0yh8udmxCLTYfZxv8a0Y4nrylLzYdzcHmo9nILqvHS9+fw/u70vDQqAC4KRXQCkCQmy17IhERERGZGd30RFMYWXala4VmoR72SCmoho1chnXzh0Gl5Af8ZPrKapuwcFMc6ps1GBnkgn/e1l/skugaGJYZmYZmDbafzMWag5koqGoEADjZWGLB6ADMjfGHg7WlyBXSlVzsFFh2awgeHReIL09exLrYLFyqbNAPvQW4CiYRERGROfJta5VSWa8WuZKe01FollJQDYkE+Oj+IejvZS92iUQ9rrlFi8c+T0BeRQP8XGyw8oGhsJRJxS6LroFhmZGoaVRj67FcrD+UidLaZgCASqnAorGBmB3tCxs5D6Whs5Fb4KFRAZgzwg8/nynAqgMZOF9YAwAYH6oSuToiIiIi6m02cgu42ytQVN0kdik97vLQbOuxHIwKdsWk/u5il0XU4wRBwPIfk3Aiqxx2CgusmxcFRxu52GXRdTBhMRK7kovw1s7zAABvJ2s8Oi4I90R6c26/EbKUSXHnkD6YEeGF2PRSlNU1YXwom/sTERERmSM/F1uzCMt0Bvs4YrCPo9hlEPWazUdz8MWJXEgkwMezhqCvu1LskqgTGJYZidsHe+GHU/m4Y7AX7ojw4pBNEyCRSDA2hCEZERERkTnzd7HBiaxyscsgoh5w+EIp/r0jGQDw/NQwTAjjjCJjwbDMSFjKpNj08HCxyyAiIiIiom7k52IrdglE1AOySuvw+OcJ0GgF3D2kDxaNDRS7JOoCDk8iIiIiIiISiT/DMiKTU92oxsJNJ1HVoMYQX0f85+6BkEgkYpdFXcCwjIiIiIiISCR+LjZil0BE3UijFfDEtkRklNTB08EKq+dGste4EWJYRkREREREJBKGZUSm5c1fU3AgrQRWllKsnRcFldJK7JLoBjAsIyIiIiIiEonSyhKudnKxyyCibvBNfB7WxmYBAP7718EI7+MgckV0oxiWERERERERiYhN/omMX3xOOV787iwA4MmJwbhtkJfIFdHNYFhGREREREQkIk7FJDJu+ZUNWLwlAc0aLaYMcMfTk0LELoluEsMyIiIiIiIiEXFFTCLjVd/cgkc2x6G0tglhHkq8d28EpFKufGnsGJYRERERERGJiCPLiIyTIAh47uszSMqvhoutHOvmR8FWYSF2WdQNGJYRERERERGJiCPLiIzTR3su4OezBbCUSbBqbiS8nRh8mwqGZURERERERCJiWEZkfH49W4D3d6cBAP7vznAM83cWuSLqThwfSEREREREJCIHG0tE+DiiuLoRLnZyscshoutobtFi2VenAQAPjwrAfcN8Ra6IuhvDMiIiIiIiIpF9+9hIqDVaKCxkYpdCRNehFYAGtQZjQ9zw4l/CxC6HegDDMiIiIiIiIpHJpBLIpAzKiIxFoKstPp41BBYydrcyRQZ9VD/55BP4+/vDysoK0dHROHHihNglEREREREREZEZcrSRw8pSCnsrC6ydHwUHa0uxS6IeYrBh2Zdffolly5Zh+fLlSEhIwODBgzFlyhQUFxeLXRoRERERERERmRk7hQV+fWosdv9tHILc7MQuh3qQRBAEQewiOhIdHY1hw4ZhxYoVAACtVgsfHx888cQTeP7556/789XV1XBwcEBVVRXs7e17ulwiIiIiIiIiIjJQXcmJDHJkWXNzM+Lj4zFp0iT996RSKSZNmoSjR492+DNNTU2orq5u90VERERERERERNQVBhmWlZaWQqPRwN3dvd333d3dUVhY2OHPvPHGG3BwcNB/+fj49EapRERERERERERkQgwyLLsRL7zwAqqqqvRfFy9eFLskIiIiIiIiIiIyMhZiF9ARV1dXyGQyFBUVtft+UVERPDw8OvwZhUIBhULRG+UREREREREREZGJMsiRZXK5HJGRkdizZ4/+e1qtFnv27EFMTIyIlRERERERERERkSkzyJFlALBs2TLMnz8fUVFRGD58OD744APU1dXhoYceErs0IiIiIiIiIiIyUQYblt13330oKSnBK6+8gsLCQkRERGDnzp1/avpPRERERERERETUXSSCIAhiF9ETqqur4eDggKqqKtjb24tdDhERERERERERiaQrOZFB9iwjIiIiIiIiIiISA8MyIiIiIiIiIiKiNgzLiIiIiIiIiIiI2jAsIyIiIiIiIiIiasOwjIiIiIiIiIiIqA3DMiIiIiIiIiIiojYMy4iIiIiIiIiIiNowLCMiIiIiIiIi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3HLLLUJqamq7bU6ePClMnjxZcHZ2FpRKpTBixAjhl19+ue7vfvr0aWH06NGCQqEQ+vTpI7z55pvtbtctWXvl17hx4667b7GZ83H18/PrsG6dt956SwgKChKsrKwEZ2dnYfz48cLevXuvu19zYArnzdy5cwVnZ2dBLpcLgwYNEjZv3typ353XA9M8rrweXJ2hnxefffZZh/tevnx5p+u7GlN9vJvzMeVj/eaYwrlztfu//HfoSHZ2tjBt2jTB2tpacHV1Ff72t78JarX6un+fy38vQ2TOx3TcuHEd/lxWVpYgCK1hWb9+/fQ1Dx8+XPj66687+6c1asZ+Xuzbt++qv4Pu+F6NqT73d5ZEEAQBRERERERERERExNUwiYiIiIiIiIiIdBiWERERERERERERtWFYRkRERERERERE1IZhGRERERERERERURuGZURERERERERERG0YlhEREREREREREbVhWEZERERERERERNSGYRkREREREREREVEbhmVERERERERERERtGJYRERERERERERG1YVhGRERERERERETUhmEZERERERERERFRm/8HQdpV1TOZ/zkAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 1500x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "####Prophet Model\n",
    "prophet_data = train.reset_index().rename(columns={'Date': 'ds', 'TotalQuantitySold': 'y'})\n",
    "prophet_model = Prophet()\n",
    "prophet_model.fit(prophet_data)\n",
    "future = prophet_model.make_future_dataframe(periods=len(test), freq='W')\n",
    "prophet_forecast = prophet_model.predict(future)\n",
    "# Plotting Prophet predictions vs Actual\n",
    "plt.figure(figsize=(15, 6))\n",
    "plt.plot(test.index, test, label='Actual')\n",
    "plt.plot(test.index, prophet_forecast['yhat'][-len(test):], label='Prophet Forecast', color='purple')\n",
    "plt.title('Prophet Model Forecast vs Actual')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "da7c7bcb-6037-45bb-a2a4-60eb368727f1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ARIMA  --> RMSE: 1856.3170, MAE: 1399.0149\n",
      "ETS --> RMSE: 639.1613, MAE: 460.6479\n",
      "Prophet --> RMSE: 554.0099, MAE: 521.7713\n"
     ]
    }
   ],
   "source": [
    "# ARIMA model evaluation\n",
    "arima_rmse = np.sqrt(mean_squared_error(test, arima_forecast))\n",
    "arima_mae = mean_absolute_error(test, arima_forecast)\n",
    "\n",
    "# ETS model evaluation\n",
    "ets_rmse = np.sqrt(mean_squared_error(test, ets_forecast))\n",
    "ets_mae = mean_absolute_error(test, ets_forecast)\n",
    "\n",
    "# Prophet model evaluation\n",
    "prophet_rmse = np.sqrt(mean_squared_error(test, prophet_forecast['yhat'][-len(test):]))\n",
    "prophet_mae = mean_absolute_error(test, prophet_forecast['yhat'][-len(test):])\n",
    "\n",
    "# Print results\n",
    "print(f'ARIMA  --> RMSE: {arima_rmse:.4f}, MAE: {arima_mae:.4f}')\n",
    "print(f'ETS --> RMSE: {ets_rmse:.4f}, MAE: {ets_mae:.4f}')\n",
    "print(f'Prophet --> RMSE: {prophet_rmse:.4f}, MAE: {prophet_mae:.4f}')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ac4ee91b-1569-40d6-a711-6d0fd2220dd5",
   "metadata": {},
   "source": [
    "# Streamlit developement for top 10 stock codes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "f3f4b6e0-31e9-42d3-8763-2d82cc576a35",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-10-07 18:02:34.232 WARNING streamlit.runtime.scriptrunner_utils.script_run_context: Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-07 18:02:34.235 WARNING streamlit.runtime.scriptrunner_utils.script_run_context: Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-07 18:02:34.240 WARNING streamlit.runtime.scriptrunner_utils.script_run_context: Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-07 18:02:34.244 WARNING streamlit.runtime.scriptrunner_utils.script_run_context: Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-07 18:02:34.245 WARNING streamlit.runtime.state.session_state_proxy: Session state does not function when running a script without `streamlit run`\n",
      "2024-10-07 18:02:34.257 WARNING streamlit.runtime.scriptrunner_utils.script_run_context: Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-07 18:02:35.310 \n",
      "  \u001b[33m\u001b[1mWarning:\u001b[0m to view this Streamlit app on a browser, run it with the following\n",
      "  command:\n",
      "\n",
      "    streamlit run C:\\ProgramData\\anaconda3\\Lib\\site-packages\\ipykernel_launcher.py [ARGUMENTS]\n",
      "2024-10-07 18:02:35.311 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-07 18:02:35.314 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-07 18:02:35.316 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-07 18:02:35.318 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-07 18:02:35.319 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-07 18:02:35.320 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-07 18:02:35.321 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-07 18:02:35.323 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-07 18:02:35.327 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-07 18:02:35.404 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-07 18:02:35.405 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-07 18:02:35.407 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
      "2024-10-07 18:02:35.408 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n"
     ]
    }
   ],
   "source": [
    "page = st.sidebar.radio(\"Navigation\", ('Top Stocks', 'Forecasting'))\n",
    "\n",
    "if page == 'Top Stocks':\n",
    "    # Sidebar filters\n",
    "    selected_criteria = st.sidebar.selectbox('Select a Criteria', ['Quantity', 'Revenue'])\n",
    "    if selected_criteria == 'Quantity':\n",
    "        filtered_df = top_10_stock_codes\n",
    "    else: \n",
    "        filtered_df = top_10_revenue_products\n",
    "    \n",
    "    # Plotting top 10 sales by Stock Code\n",
    "    st.subheader('Top 10 Stock Codes by Criteria')\n",
    "\n",
    "    # Create a Plotly table\n",
    "    fig = go.Figure(data=[go.Table(\n",
    "        header=dict(values=list(filtered_df.columns),\n",
    "                    fill_color='lightskyblue',\n",
    "                    line_color='darkslategray',\n",
    "                    align='center'),\n",
    "        cells=dict(values=[filtered_df[col] for col in filtered_df.columns],\n",
    "                   fill_color='white',\n",
    "                   line_color='darkslategray',\n",
    "                   align='center'))\n",
    "    ])\n",
    "\n",
    "\n",
    "    fig.update_layout(title=\"Top 10 Stock Codes\", height=400)\n",
    "\n",
    "\n",
    "    st.plotly_chart(fig, use_container_width=True) # Display Plotly figure\n",
    "\n",
    "elif page == 'Forecasting':\n",
    "    \n",
    "    st.title(\"Demand Forecasting\")\n",
    "    st.sidebar.title(\"Input Options\")\n",
    "\n",
    "    # Get unique stock codes for selection\n",
    "    stock_codes = agg_stock_code_qty['StockCode'].unique()\n",
    "\n",
    "    # Stock selection\n",
    "    stock_code = st.sidebar.selectbox(\"Select a Stock Code:\", stock_codes)\n",
    "\n",
    "    filtered_df = pd.DataFrame(agg_stock_code_qty[agg_stock_code_qty['StockCode'] == stock_code])\n",
    "    \n",
    "    train_size = int(len(filtered_df) * 0.8)\n",
    "    train_df = filtered_df.iloc[:train_size]\n",
    "    test_df = filtered_df.iloc[train_size:,:]\n",
    "\n",
    "    train = train_df['TotalQuantitySold']  # This will be a Series\n",
    "    test = test_df['TotalQuantitySold']\n",
    "    # decomposition = seasonal_decompose(filtered_df['TotalQuantitySold'], model='additive', period=52)\n",
    "    # # Displaying the seasonal-trend decomposition\n",
    "    # st.subheader('Seasonal-Trend Decomposition (STL)')\n",
    "    # fig_stl = decomposition.plot()\n",
    "    # st.pyplot(fig_stl)\n",
    "\n",
    "    # # Plot function for actual data\n",
    "    # def plot_actual_data():\n",
    "    #     plt.figure(figsize=(12, 6))\n",
    "    #     plt.plot(train.index, train, label='Train Data')\n",
    "    #     plt.plot(test.index, test, label='Test Data', color='orange')\n",
    "    #     plt.title(f'Total Quantity Sold for {stock_code}')\n",
    "    #     plt.xlabel('Date')\n",
    "    #     plt.ylabel('Total Quantity Sold')\n",
    "    #     plt.legend()\n",
    "    #     st.pyplot(plt)\n",
    "    \n",
    "    def plot_error_distributions(train_actual, train_predictions, test_actual, test_predictions):\n",
    "        # Ensure the inputs are numeric and print their types\n",
    "        train_actual = pd.to_numeric(train_actual, errors='coerce')\n",
    "        train_predictions = pd.to_numeric(train_predictions, errors='coerce')\n",
    "        test_actual = pd.to_numeric(test_actual, errors='coerce')\n",
    "        test_predictions = pd.to_numeric(test_predictions, errors='coerce')\n",
    "    \n",
    "        train_actual = train_actual.dropna()\n",
    "        train_predictions = train_predictions.dropna()\n",
    "        test_actual = test_actual.dropna()\n",
    "        test_predictions = test_predictions.dropna()\n",
    "    \n",
    "        min_length = min(len(train_actual), len(train_predictions), len(test_actual), len(test_predictions))\n",
    "        train_actual = train_actual.iloc[:min_length]\n",
    "        train_predictions = train_predictions.iloc[:min_length]\n",
    "        test_actual = test_actual.iloc[:min_length]\n",
    "        test_predictions = test_predictions.iloc[:min_length]\n",
    "        \n",
    "        # Check for remaining discrepancies in length\n",
    "        if len(train_actual) != len(train_predictions):\n",
    "            print(\"Warning: Train actual and predictions lengths do not match!\")\n",
    "    \n",
    "        # Calculate errors\n",
    "        try:\n",
    "            train_errors = train_actual - train_predictions\n",
    "        except Exception as e:\n",
    "            print(\"Error during calculation of train_errors:\", e)\n",
    "            return\n",
    "        \n",
    "        try:\n",
    "            test_errors = test_actual - test_predictions\n",
    "        except Exception as e:\n",
    "            print(\"Error during calculation of test_errors:\", e)\n",
    "            return\n",
    "        \n",
    "        \n",
    "        col1, col2 = st.columns(2)\n",
    "\n",
    "        with col1:\n",
    "            fig, axes = plt.subplots(figsize=(6, 4))\n",
    "            axes.hist(train_errors, bins=30, color='blue', alpha=0.7)\n",
    "            axes.set_title('Training Error Distribution')\n",
    "            axes.set_xlabel('Error')\n",
    "            axes.set_ylabel('Frequency')\n",
    "            st.pyplot(fig)\n",
    "\n",
    "        with col2:\n",
    "            fig, axes = plt.subplots(figsize=(6, 4))\n",
    "            axes.hist(test_errors, bins=30, color='orange', alpha=0.7)\n",
    "            axes.set_title('Testing Error Distribution')\n",
    "            axes.set_xlabel('Error')\n",
    "            axes.set_ylabel('Frequency')\n",
    "            st.pyplot(fig)\n",
    "        \n",
    "    ####ARIMA Model\n",
    "    def arima_model():\n",
    "        arim = pm.auto_arima(train, start_p=1, start_q=1, test='adf', max_p=3, max_q=3, w=52,\n",
    "                                    start_P=0, seasonal=True, d=None, D=1, trace=True, error_action='ignore',\n",
    "                                    suppress_warnings=True, stepwise=True)\n",
    "        predictions = arim.predict(n_periods=15)  # Forecast for 15 weeks\n",
    "        \n",
    "        train_predictions = arim.predict(n_periods=len(train))\n",
    "        test_predictions = arim.predict(n_periods=len(test))\n",
    "        \n",
    "        \n",
    "        # plt.figure(figsize=(6, 4))\n",
    "        # plt.plot(train.index, train, label='Train Data')\n",
    "        # plt.plot(test.index, test, label='Test Data', color='orange')\n",
    "        # future_dates = pd.date_range(start=test.index[-1] + pd.Timedelta(weeks=1), periods=15, freq='W')\n",
    "        # plt.plot(future_dates, predictions, label='ARIMA Predictions', color='green')\n",
    "        # plt.title('ARIMA Model Predictions for 15 Weeks')\n",
    "        # plt.legend()\n",
    "        # st.pyplot(plt)\n",
    "        fig = go.Figure()\n",
    "        fig.add_trace(go.Scatter(x=train.index, y=train, mode='lines', name='Train Data', line=dict(color='blue')))\n",
    "        fig.add_trace(go.Scatter(x=test.index, y=test, mode='lines', name='Test Data', line=dict(color='orange')))\n",
    "        #fig.add_trace(go.Scatter(x=test.index, y=test_predictions, mode='lines', name='Test DataP', line=dict(color='black')))\n",
    "        future_dates = pd.date_range(start=test.index[-1] + pd.Timedelta(weeks=1), periods=15, freq='W')\n",
    "        fig.add_trace(go.Scatter(x=future_dates, y=predictions, mode='lines', name='ARIMA Predictions', line=dict(color='green')))\n",
    "        fig.update_layout(\n",
    "            title='ARIMA Model Predictions for 15 Weeks',\n",
    "            xaxis_title='Date',\n",
    "            yaxis_title='Values',\n",
    "            legend_title='Legend',\n",
    "            height=400,\n",
    "            width=700\n",
    "        )\n",
    "        st.plotly_chart(fig)\n",
    "        \n",
    "        plot_error_distributions(train, train_predictions , test, test_predictions)\n",
    "\n",
    "    ######ETS Model\n",
    "    def ets_model():\n",
    "        ets_model = ExponentialSmoothing(train, trend='add', seasonal='add', seasonal_periods=4)\n",
    "        ets_model_fit = ets_model.fit()\n",
    "        predictions = ets_model_fit.forecast(15)  # Forecast for 15 weeks\n",
    "        \n",
    "        train_predictions = ets_model_fit.forecast(len(train))\n",
    "        test_predictions = ets_model_fit.forecast(len(test))\n",
    "        \n",
    "        plot_error_distributions(train, train_predictions, test, predictions)\n",
    "    \n",
    "        # plt.figure(figsize=(6, 4))\n",
    "        # plt.plot(train.index, train, label='Train Data')\n",
    "        # plt.plot(test.index, test, label='Test Data', color='orange')\n",
    "        # future_dates = pd.date_range(start=test.index[-1] + pd.Timedelta(weeks=1), periods=15, freq='W')\n",
    "        # plt.plot(future_dates, predictions, label='ETS Predictions', color='green')\n",
    "        # plt.title('ETS Model Predictions for 15 Weeks')\n",
    "        # plt.legend()\n",
    "        # st.pyplot(plt)\n",
    "        \n",
    "        \n",
    "        fig = go.Figure()\n",
    "        fig.add_trace(go.Scatter(x=train.index, y=train, mode='lines', name='Train Data', line=dict(color='blue')))\n",
    "        fig.add_trace(go.Scatter(x=test.index, y=test, mode='lines', name='Test Data', line=dict(color='orange')))\n",
    "        #fig.add_trace(go.Scatter(x=test.index, y=test_predictions, mode='lines', name='Test DataP', line=dict(color='black')))\n",
    "        future_dates = pd.date_range(start=test.index[-1] + pd.Timedelta(weeks=1), periods=15, freq='W')\n",
    "        fig.add_trace(go.Scatter(x=future_dates, y=predictions, mode='lines', name='ETS Predictions', line=dict(color='green')))\n",
    "        fig.update_layout(\n",
    "            title='ETS Model Predictions for 15 Weeks',\n",
    "            xaxis_title='Date',\n",
    "            yaxis_title='Values',\n",
    "            legend_title='Legend',\n",
    "            height=400,\n",
    "            width=700\n",
    "        )\n",
    "        st.plotly_chart(fig)\n",
    "    \n",
    "    ####Prophet Model\n",
    "    def prophet_model():\n",
    "        prophet_train = train.reset_index().rename(columns={'Date': 'ds', 'TotalQuantitySold': 'y'})\n",
    "        prophet_test = test.reset_index().rename(columns={'Date': 'ds', 'TotalQuantitySold': 'y'})\n",
    "        \n",
    "        model = Prophet()\n",
    "        model.fit(prophet_train)\n",
    "        \n",
    "  \n",
    "        future = model.make_future_dataframe(periods=15, freq='W')\n",
    "        forecast = model.predict(future)\n",
    "        \n",
    "        train_forecast = model.predict(prophet_train[['ds']])  \n",
    "        test_predictions = forecast['yhat'].tail(15) \n",
    "        test_actual = prophet_test['y']\n",
    "        plot_error_distributions(prophet_train['y'], train_forecast['yhat'], test_actual, test_predictions)\n",
    "    \n",
    "    \n",
    "        \n",
    "        # plt.figure(figsize=(6, 4))\n",
    "        # plt.plot(prophet_train['ds'], prophet_train['y'], label='Train Data')\n",
    "        # plt.plot(prophet_test['ds'], prophet_test['y'], label='Test Data', color='orange')\n",
    "        # plt.plot(forecast['ds'], forecast['yhat'], label='Prophet Predictions', color='green')\n",
    "        # plt.title('Prophet Model Predictions for 15 Weeks')\n",
    "        # plt.legend()\n",
    "        # st.pyplot(plt)\n",
    "        \n",
    "        \n",
    "                \n",
    "        fig = go.Figure()\n",
    "        fig.add_trace(go.Scatter(x=prophet_train['ds'], y=prophet_train['y'], mode='lines', name='Train Data', line=dict(color='blue')))\n",
    "        fig.add_trace(go.Scatter(x=prophet_test['ds'], y= prophet_test['y'], mode='lines', name='Test Data', line=dict(color='orange')))\n",
    "        #fig.add_trace(go.Scatter(x=test.index, y=test_predictions, mode='lines', name='Test DataP', line=dict(color='black')))\n",
    "        #future_dates = pd.date_range(start=test.index[-1] + pd.Timedelta(weeks=1), periods=15, freq='W')\n",
    "        fig.add_trace(go.Scatter(x=forecast['ds'], y=forecast['yhat'], mode='lines', name='Prophet Prediction', line=dict(color='green')))\n",
    "        fig.update_layout(\n",
    "            title='Prophet Model Predictions for 15 Weeks',\n",
    "            xaxis_title='Date',\n",
    "            yaxis_title='Values',\n",
    "            legend_title='Legend',\n",
    "            height=400,\n",
    "            width=700\n",
    "        )\n",
    "        st.plotly_chart(fig)\n",
    "    \n",
    "    \n",
    "        \n",
    "    # Display stock data\n",
    "    st.subheader(f\"Demand Overview for {stock_code}\")\n",
    "    \n",
    "    st.sidebar.subheader(\"Model Selection\")\n",
    "\n",
    "    model_choice = st.sidebar.selectbox(\"Choose a model:\", [\"ARIMA\", \"ETS\", \"Prophet\"])\n",
    "    \n",
    "    if model_choice == \"ARIMA\":\n",
    "        arima_model()\n",
    "    elif model_choice == \"ETS\":\n",
    "        ets_model()\n",
    "    elif model_choice == \"Prophet\":\n",
    "        prophet_model()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": None,
   "id": "e7d7a8d3-e8ea-441c-9559-7794cac26b7c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
